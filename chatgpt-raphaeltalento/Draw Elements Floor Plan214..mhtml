From: <Saved by Blink>
Snapshot-Content-Location: https://chat.openai.com/share/bf6be7ae-590e-4c06-804d-d630def60d20
Subject: Draw Elements Floor Plan.
Date: Wed, 21 Feb 2024 12:30:41 -0800
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--ET94CoNVQv3VTDDkD373fFCMxXhXaLX2IQoKh3TLns----"


------MultipartBoundary--ET94CoNVQv3VTDDkD373fFCMxXhXaLX2IQoKh3TLns----
Content-Type: text/html
Content-ID: <frame-B4C4228801659AFCF7C07BD0D2381F99@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://chat.openai.com/share/bf6be7ae-590e-4c06-804d-d630def60d20

<!DOCTYPE html><html data-build=3D"prod-3a32f9a" class=3D"dark" style=3D"co=
lor-scheme: dark;" lang=3D"en-US"><head><meta http-equiv=3D"Content-Type" c=
ontent=3D"text/html; charset=3DUTF-8"><link rel=3D"stylesheet" type=3D"text=
/css" href=3D"cid:css-c0e174c4-d759-4d25-b569-d4f5bc0bfc29@mhtml.blink" /><=
meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=3D1">=
<link rel=3D"apple-touch-icon" sizes=3D"180x180" href=3D"https://cdn.oaista=
tic.com/_next/static/media/apple-touch-icon.59f2e898.png"><link rel=3D"icon=
" type=3D"image/png" sizes=3D"32x32" href=3D"https://cdn.oaistatic.com/_nex=
t/static/media/favicon-32x32.be48395e.png"><link rel=3D"icon" type=3D"image=
/png" sizes=3D"16x16" href=3D"https://cdn.oaistatic.com/_next/static/media/=
favicon-16x16.9b8dbb69.png"><link rel=3D"preconnect" href=3D"https://cdn.oa=
istatic.com/"><title>Draw Elements Floor Plan.</title><meta name=3D"title" =
content=3D"ChatGPT: Get instant answers, find inspiration, learn something =
new"><meta name=3D"description" content=3D"ChatGPT is a free-to-use AI syst=
em. Use it for engaging conversations, gain insights, automate tasks, and w=
itness the future of AI, all in one place."><meta name=3D"keywords" content=
=3D"ai chat,ai,chap gpt,chat gbt,chat gpt 3,chat gpt login,chat gpt website=
,chat gpt,chat gtp,chat openai,chat,chatai,chatbot gpt,chatg,chatgpt login,=
chatgpt,gpt chat,open ai,openai chat,openai chatgpt,openai"><meta property=
=3D"og:image" content=3D"https://cdn.oaistatic.com/_next/static/media/chatg=
pt-share-og.49cbbffe.png"><meta property=3D"og:url" content=3D"https://chat=
.openai.com"><meta name=3D"apple-itunes-app" content=3D"app-id=3D6448311069=
"><meta property=3D"og:site_name" content=3D"ChatGPT"><meta name=3D"robots"=
 content=3D"noindex,nofollow"><meta property=3D"og:title" content=3D"Draw E=
lements Floor Plan."><meta property=3D"og:description" content=3D"Shared vi=
a ChatGPT"><meta name=3D"next-head-count" content=3D"18"><link rel=3D"prelo=
ad" href=3D"https://cdn.oaistatic.com/_next/static/media/soehne-buch.131898=
57.woff2" as=3D"font" crossorigin=3D""><link rel=3D"preload" href=3D"https:=
//cdn.oaistatic.com/_next/static/media/soehne-halbfett.977f1845.woff2" as=
=3D"font" crossorigin=3D""><link rel=3D"preload" href=3D"https://cdn.oaista=
tic.com/_next/static/media/soehne-mono-buch.de677af1.woff2" as=3D"font" cro=
ssorigin=3D""><link rel=3D"preload" href=3D"https://cdn.oaistatic.com/_next=
/static/media/soehne-mono-halbfett.b082e8e2.woff2" as=3D"font" crossorigin=
=3D""><link data-next-font=3D"" rel=3D"preconnect" href=3D"https://chat.ope=
nai.com/" crossorigin=3D"anonymous"><link rel=3D"preload" href=3D"https://c=
dn.oaistatic.com/_next/static/css/141e63fd73f26239.css" as=3D"style" crosso=
rigin=3D"anonymous"><link rel=3D"stylesheet" href=3D"https://cdn.oaistatic.=
com/_next/static/css/141e63fd73f26239.css" crossorigin=3D"anonymous" data-n=
-g=3D""><meta name=3D"react-scroll-to-bottom:version" content=3D"4.2.0"><li=
nk as=3D"script" rel=3D"prefetch" crossorigin=3D"anonymous" href=3D"https:/=
/cdn.oaistatic.com/_next/static/chunks/3975-727132bb57222b04.js"><link as=
=3D"script" rel=3D"prefetch" crossorigin=3D"anonymous" href=3D"https://cdn.=
oaistatic.com/_next/static/chunks/3754-6dd4d99b259b6acc.js"><link as=3D"scr=
ipt" rel=3D"prefetch" crossorigin=3D"anonymous" href=3D"https://cdn.oaistat=
ic.com/_next/static/chunks/pages/auth/login-001159e4899e6e7a.js"><link as=
=3D"script" rel=3D"prefetch" crossorigin=3D"anonymous" href=3D"https://cdn.=
oaistatic.com/_next/static/chunks/pages/gpts-5e3c4c0a2618076d.js"></head><b=
ody class=3D"antialiased"><div id=3D"__next"><div class=3D"relative z-0 fle=
x h-full w-full overflow-hidden"><div class=3D"relative flex h-full max-w-f=
ull flex-1 flex-col overflow-hidden"><main class=3D"relative h-full w-full =
flex-1 overflow-auto transition-width"><div role=3D"presentation" class=3D"=
flex h-full flex-col"><div class=3D"flex-1 overflow-hidden"><div class=3D"h=
-full overflow-auto bg-token-main-surface-primary"><div class=3D"flex flex-=
col pb-9 text-sm pt-2"><div class=3D"mx-auto w-full p-4 md:max-w-2xl md:px-=
0 lg:max-w-[38rem] xl:max-w-3xl"><div class=3D"border-b border-gray-100 pb-=
4 pt-3 sm:mb-2 sm:pb-6 sm:pt-8"><h1 class=3D"text-3xl font-semibold leading=
-tight text-token-text-primary sm:text-4xl">Draw Elements Floor Plan.</h1><=
div class=3D"pt-3 text-base text-gray-400 sm:pt-4">February 14, 2024</div><=
/div></div><div class=3D"w-full text-token-text-primary" data-testid=3D"con=
versation-turn-2" style=3D"--avatar-color: #19c37d;"><div class=3D"px-4 py-=
2 justify-center text-base md:gap-6 m-auto"><div class=3D"flex flex-1 text-=
base mx-auto gap-3 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem] group"><d=
iv class=3D"flex-shrink-0 flex flex-col relative items-end"><div><div class=
=3D"pt-0.5"><div class=3D"gizmo-shadow-stroke flex h-6 w-6 items-center jus=
tify-center overflow-hidden rounded-full"><div class=3D"relative p-1 rounde=
d-sm h-9 w-9 text-white flex items-center justify-center" style=3D"backgrou=
nd-color: rgb(121, 137, 255); width: 24px; height: 24px;"><svg stroke=3D"cu=
rrentColor" fill=3D"none" stroke-width=3D"2" viewBox=3D"0 0 24 24" stroke-l=
inecap=3D"round" stroke-linejoin=3D"round" class=3D"icon-sm" height=3D"1em"=
 width=3D"1em" xmlns=3D"http://www.w3.org/2000/svg"><path d=3D"M20 21v-2a4 =
4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path><circle cx=3D"12" cy=3D"7" r=3D"4"></=
circle></svg></div></div></div></div></div><div class=3D"relative flex w-fu=
ll flex-col"><div class=3D"font-semibold select-none">Anonymous</div><div c=
lass=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-=
w-full"><div data-message-author-role=3D"user" data-message-id=3D"aaa2b1f6-=
11f6-4b05-a99b-48ffe0e7979e" class=3D"min-h-[20px] text-message flex flex-c=
ol items-start gap-3 whitespace-pre-wrap break-words [.text-message+&amp;]:=
mt-5 overflow-x-auto"><div class=3D"">package FloorPlanDesigner.FloorPlanDe=
signer;

import javax.imageio.ImageIO;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

/**
 * Simple Paint Application using Java Swing.
 * Allows users to draw, save, load, and clear drawings.
 *
 * @author ChatGPT.
 */
public class App extends JFrame {

    private BufferedImage canvas;
    private Point lastPoint;

    /**
     * Constructor to initialize the application.
     */
    public App() {
        super("Simple Paint Application");
        initUI();
        initDrawing();
    }

    /**
     * Initializes the User Interface components of the application.
     */
    private void initUI() {
        canvas =3D new BufferedImage(800, 600, BufferedImage.TYPE_INT_ARGB)=
;
        clearCanvas();

        JPanel panel =3D new JPanel() {
            @Override
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
                g.drawImage(canvas, 0, 0, null);
            }
        };

        panel.setPreferredSize(new Dimension(800, 600));
        panel.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                lastPoint =3D e.getPoint();
            }
        });

        panel.addMouseMotionListener(new MouseMotionAdapter() {
            @Override
            public void mouseDragged(MouseEvent e) {
                drawLine(lastPoint, e.getPoint());
                lastPoint =3D e.getPoint();
                repaint();
            }
        });

        add(panel);
        setupMenuBar();
        pack();
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
    }

    /**
     * Initializes drawing settings for the canvas.
     */
    private void initDrawing() {
        Graphics2D g2d =3D canvas.createGraphics();
        g2d.setColor(Color.BLACK);
        g2d.setStroke(new BasicStroke(2));
    }

    /**
     * Draws a line between two points.
     *
     * @param start The starting point of the line.
     * @param end The ending point of the line.
     */
    private void drawLine(Point start, Point end) {
        Graphics2D g2d =3D canvas.createGraphics();
        g2d.setColor(Color.BLACK);
        g2d.drawLine(start.x, start.y, end.x, end.y);
        g2d.dispose();
    }

    /**
     * Clears the canvas.
     */
    private void clearCanvas() {
        Graphics2D g2d =3D canvas.createGraphics();
        g2d.setComposite(AlphaComposite.Clear);
        g2d.fillRect(0, 0, canvas.getWidth(), canvas.getHeight());
        g2d.setComposite(AlphaComposite.SrcOver);
        g2d.dispose();
        repaint();
    }

    /**
     * Saves the current drawing to a file.
     */
    private void saveImage() {
        JFileChooser fileChooser =3D new JFileChooser();
        fileChooser.setDialogTitle("Save Image");
        if (fileChooser.showSaveDialog(this) =3D=3D JFileChooser.APPROVE_OP=
TION) {
            File file =3D fileChooser.getSelectedFile();
            try {
                ImageIO.write(canvas, "PNG", file);
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
    }

    /**
     * Loads an image from a file into the canvas.
     */
    private void loadImage() {
        JFileChooser fileChooser =3D new JFileChooser();
        fileChooser.setDialogTitle("Open Image");
        if (fileChooser.showOpenDialog(this) =3D=3D JFileChooser.APPROVE_OP=
TION) {
            File file =3D fileChooser.getSelectedFile();
            try {
                canvas =3D ImageIO.read(file);
                repaint();
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
    }

    /**
     * Shows an About dialog with information about the application.
     */
    private void showAbout() {
        JOptionPane.showMessageDialog(this, "Simple Paint Application\nVers=
ion 1.0\nCreated by ChatGPT", "About", JOptionPane.INFORMATION_MESSAGE);
    }

    /**
     * Sets up the menu bar with File, Edit, and Help menus.
     */
    private void setupMenuBar() {
        JMenuBar menuBar =3D new JMenuBar();

        // File Menu
        JMenu fileMenu =3D new JMenu("File");
        JMenuItem saveItem =3D new JMenuItem("Save");
        saveItem.addActionListener(e -&gt; saveImage());
        fileMenu.add(saveItem);

        JMenuItem loadItem =3D new JMenuItem("Load");
        loadItem.addActionListener(e -&gt; loadImage());
        fileMenu.add(loadItem);

        fileMenu.add(new JSeparator()); // Separator

        JMenuItem exitItem =3D new JMenuItem("Exit");
        exitItem.addActionListener(e -&gt; System.exit(0));
        fileMenu.add(exitItem);

        // Edit Menu
        JMenu editMenu =3D new JMenu("Edit");
        JMenuItem clearItem =3D new JMenuItem("Clear");
        clearItem.addActionListener(e -&gt; clearCanvas());
        editMenu.add(clearItem);

        // Help Menu
        JMenu helpMenu =3D new JMenu("Help");
        JMenuItem aboutItem =3D new JMenuItem("About");
        aboutItem.addActionListener(e -&gt; showAbout());
        helpMenu.add(aboutItem);

        menuBar.add(fileMenu);
        menuBar.add(editMenu);
        menuBar.add(helpMenu);
        setJMenuBar(menuBar);
    }

    /**
     * Main method to run the application.
     *
     * @param args Command line arguments (not used).
     */
    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -&gt; new App().setVisible(true));
    }
} I'd like to change this code so that instead of drawing paint, I want to =
draw walls, windows, or doors for a top down floor plan designer. These thi=
ngs should be straight lines on a grid</div></div></div></div></div></div><=
/div></div><div class=3D"w-full text-token-text-primary" data-testid=3D"con=
versation-turn-3" style=3D"--avatar-color: #19c37d;"><div class=3D"px-4 py-=
2 justify-center text-base md:gap-6 m-auto"><div class=3D"flex flex-1 text-=
base mx-auto gap-3 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem] group"><d=
iv class=3D"flex-shrink-0 flex flex-col relative items-end"><div><div class=
=3D"pt-0.5"><div class=3D"gizmo-shadow-stroke flex h-6 w-6 items-center jus=
tify-center overflow-hidden rounded-full"><div class=3D"relative p-1 rounde=
d-sm h-9 w-9 text-white flex items-center justify-center" style=3D"backgrou=
nd-color: rgb(25, 195, 125); width: 24px; height: 24px;"><svg width=3D"41" =
height=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://www.w3.or=
g/2000/svg" class=3D"icon-sm" role=3D"img"><text x=3D"-9999" y=3D"-9999">Ch=
atGPT</text><path d=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.=
9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.83404=
 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.85=
078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.7249=
 0.491269 18.3058 0.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.42214=
C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3=
414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.956464 =
14.1591 0.498905 16.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.5449 =
3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.72=
56 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 3=
6.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17.0=
786 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998=
C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35=
.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.115=
 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.=
0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.88=
49C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.8666 3=
6.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.381=
3 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213 2=
0.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.9842=
 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.=
6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.513=
97 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 =
5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.90=
2C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C24.7=
321 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893=
 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34=
.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17=
156 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228=
 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8.4=
8312 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.4979=
C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28=
.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.5528=
9 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L2=
2.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12.4=
787C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967=
 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 37.4=
832 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086=
 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30=
.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.3348=
 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.=
9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 =
10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.=
9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.104=
8 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376 2=
8.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.40=
939 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055=
 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763 1=
0.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10.8=
107 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659=
 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.3=
5876 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.8668=
 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14=
.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.99=
91L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.9985V1=
7.9991Z" fill=3D"currentColor"></path></svg></div></div></div></div></div><=
div class=3D"relative flex w-full flex-col agent-turn"><div class=3D"font-s=
emibold select-none">ChatGPT</div><div class=3D"flex-col gap-1 md:gap-3"><d=
iv class=3D"flex flex-grow flex-col max-w-full"><div data-message-author-ro=
le=3D"assistant" data-message-id=3D"1ab10b14-5d2a-4195-92ce-caa33e5ec10a" c=
lass=3D"min-h-[20px] text-message flex flex-col items-start gap-3 whitespac=
e-pre-wrap break-words [.text-message+&amp;]:mt-5 overflow-x-auto"><div cla=
ss=3D"markdown prose w-full break-words dark:prose-invert dark"><p>To modif=
y the code to draw walls, windows, or doors for a top-down floor plan desig=
ner, you'll need to make several changes:</p><ol><li>Define classes or enum=
s to represent different types of elements (walls, windows, doors).</li><li=
>Implement logic to draw these elements as straight lines on a grid.</li><l=
i>Adjust mouse listeners to handle drawing these elements.</li><li>Modify t=
he clearCanvas method to clear the canvas appropriately for your new elemen=
ts.</li></ol><p>Here's how you can start:</p><pre><div class=3D"dark bg-gra=
y-950 rounded-md"><div class=3D"flex items-center relative text-token-text-=
secondary bg-token-main-surface-secondary px-4 py-2 text-xs font-sans justi=
fy-between rounded-t-md"><span>java</span><span class=3D"" data-state=3D"cl=
osed"><button class=3D"flex gap-1 items-center"><svg width=3D"24" height=3D=
"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/sv=
g" class=3D"icon-sm"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D=
"M12 4C10.8954 4 10 4.89543 10 6H14C14 4.89543 13.1046 4 12 4ZM8.53513 4C9.=
22675 2.8044 10.5194 2 12 2C13.4806 2 14.7733 2.8044 15.4649 4H17C18.6569 4=
 20 5.34315 20 7V19C20 20.6569 18.6569 22 17 22H7C5.34315 22 4 20.6569 4 19=
V7C4 5.34315 5.34315 4 7 4H8.53513ZM8 6H7C6.44772 6 6 6.44772 6 7V19C6 19.5=
523 6.44772 20 7 20H17C17.5523 20 18 19.5523 18 19V7C18 6.44772 17.5523 6 1=
7 6H16C16 7.10457 15.1046 8 14 8H10C8.89543 8 8 7.10457 8 6Z" fill=3D"curre=
ntColor"></path></svg>Copy code</button></span></div><div class=3D"p-4 over=
flow-y-auto"><code class=3D"!whitespace-pre hljs language-java"><span class=
=3D"hljs-keyword">import</span> javax.imageio.ImageIO;
<span class=3D"hljs-keyword">import</span> javax.swing.*;
<span class=3D"hljs-keyword">import</span> java.awt.*;
<span class=3D"hljs-keyword">import</span> java.awt.event.*;
<span class=3D"hljs-keyword">import</span> java.awt.image.BufferedImage;
<span class=3D"hljs-keyword">import</span> java.io.File;
<span class=3D"hljs-keyword">import</span> java.io.IOException;

<span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword">cla=
ss</span> <span class=3D"hljs-title class_">FloorPlanDesigner</span> <span =
class=3D"hljs-keyword">extends</span> <span class=3D"hljs-title class_">JFr=
ame</span> {

    <span class=3D"hljs-keyword">private</span> BufferedImage canvas;
    <span class=3D"hljs-keyword">private</span> Point startPoint;
    <span class=3D"hljs-keyword">private</span> Point endPoint;
    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-type">F=
loorElementType</span> <span class=3D"hljs-variable">currentElementType</sp=
an> <span class=3D"hljs-operator">=3D</span> FloorElementType.WALL; <span c=
lass=3D"hljs-comment">// Default to drawing walls</span>

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword"=
>enum</span> <span class=3D"hljs-title class_">FloorElementType</span> {
        WALL(Color.BLACK),
        WINDOW(Color.BLUE),
        DOOR(Color.RED);

        <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-key=
word">final</span> Color color;

        FloorElementType(Color color) {
            <span class=3D"hljs-built_in">this</span>.color =3D color;
        }

        <span class=3D"hljs-keyword">public</span> Color <span class=3D"hlj=
s-title function_">getColor</span><span class=3D"hljs-params">()</span> {
            <span class=3D"hljs-keyword">return</span> color;
        }
    }

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-title fu=
nction_">FloorPlanDesigner</span><span class=3D"hljs-params">()</span> {
        <span class=3D"hljs-built_in">super</span>(<span class=3D"hljs-stri=
ng">"Floor Plan Designer"</span>);
        initUI();
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">initUI</span><span class=
=3D"hljs-params">()</span> {
        canvas =3D <span class=3D"hljs-keyword">new</span> <span class=3D"h=
ljs-title class_">BufferedImage</span>(<span class=3D"hljs-number">800</spa=
n>, <span class=3D"hljs-number">600</span>, BufferedImage.TYPE_INT_ARGB);
        clearCanvas();

        <span class=3D"hljs-type">JPanel</span> <span class=3D"hljs-variabl=
e">panel</span> <span class=3D"hljs-operator">=3D</span> <span class=3D"hlj=
s-keyword">new</span> <span class=3D"hljs-title class_">JPanel</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">protected</span> <span class=3D"hl=
js-keyword">void</span> <span class=3D"hljs-title function_">paintComponent=
</span><span class=3D"hljs-params">(Graphics g)</span> {
                <span class=3D"hljs-built_in">super</span>.paintComponent(g=
);
                g.drawImage(canvas, <span class=3D"hljs-number">0</span>, <=
span class=3D"hljs-number">0</span>, <span class=3D"hljs-literal">null</spa=
n>);
            }
        };

        panel.setPreferredSize(<span class=3D"hljs-keyword">new</span> <spa=
n class=3D"hljs-title class_">Dimension</span>(<span class=3D"hljs-number">=
800</span>, <span class=3D"hljs-number">600</span>));
        panel.addMouseListener(<span class=3D"hljs-keyword">new</span> <spa=
n class=3D"hljs-title class_">MouseAdapter</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">mousePressed</spa=
n><span class=3D"hljs-params">(MouseEvent e)</span> {
                startPoint =3D e.getPoint();
                endPoint =3D e.getPoint();
                drawElement(startPoint, endPoint);
            }

            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">mouseReleased</sp=
an><span class=3D"hljs-params">(MouseEvent e)</span> {
                endPoint =3D e.getPoint();
                drawElement(startPoint, endPoint);
            }
        });

        panel.addMouseMotionListener(<span class=3D"hljs-keyword">new</span=
> <span class=3D"hljs-title class_">MouseMotionAdapter</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">mouseDragged</spa=
n><span class=3D"hljs-params">(MouseEvent e)</span> {
                endPoint =3D e.getPoint();
                drawElement(startPoint, endPoint);
                startPoint =3D endPoint;
            }
        });

        add(panel);
        setupMenuBar();
        pack();
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(<span class=3D"hljs-literal">null</span>);
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">drawElement</span><span =
class=3D"hljs-params">(Point start, Point end)</span> {
        <span class=3D"hljs-type">Graphics2D</span> <span class=3D"hljs-var=
iable">g2d</span> <span class=3D"hljs-operator">=3D</span> canvas.createGra=
phics();
        g2d.setColor(currentElementType.getColor());
        g2d.setStroke(<span class=3D"hljs-keyword">new</span> <span class=
=3D"hljs-title class_">BasicStroke</span>(<span class=3D"hljs-number">2</sp=
an>));
        g2d.drawLine(start.x, start.y, end.x, end.y);
        g2d.dispose();
        repaint();
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">clearCanvas</span><span =
class=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">Graphics2D</span> <span class=3D"hljs-var=
iable">g2d</span> <span class=3D"hljs-operator">=3D</span> canvas.createGra=
phics();
        g2d.setComposite(AlphaComposite.Clear);
        g2d.fillRect(<span class=3D"hljs-number">0</span>, <span class=3D"h=
ljs-number">0</span>, canvas.getWidth(), canvas.getHeight());
        g2d.setComposite(AlphaComposite.SrcOver);
        g2d.dispose();
        repaint();
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">saveImage</span><span cl=
ass=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">JFileChooser</span> <span class=3D"hljs-v=
ariable">fileChooser</span> <span class=3D"hljs-operator">=3D</span> <span =
class=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JFileCh=
ooser</span>();
        fileChooser.setDialogTitle(<span class=3D"hljs-string">"Save Image"=
</span>);
        <span class=3D"hljs-keyword">if</span> (fileChooser.showSaveDialog(=
<span class=3D"hljs-built_in">this</span>) =3D=3D JFileChooser.APPROVE_OPTI=
ON) {
            <span class=3D"hljs-type">File</span> <span class=3D"hljs-varia=
ble">file</span> <span class=3D"hljs-operator">=3D</span> fileChooser.getSe=
lectedFile();
            <span class=3D"hljs-keyword">try</span> {
                ImageIO.write(canvas, <span class=3D"hljs-string">"PNG"</sp=
an>, file);
            } <span class=3D"hljs-keyword">catch</span> (IOException ex) {
                ex.printStackTrace();
            }
        }
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">setupMenuBar</span><span=
 class=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">JMenuBar</span> <span class=3D"hljs-varia=
ble">menuBar</span> <span class=3D"hljs-operator">=3D</span> <span class=3D=
"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuBar</span>=
();

        <span class=3D"hljs-type">JMenu</span> <span class=3D"hljs-variable=
">fileMenu</span> <span class=3D"hljs-operator">=3D</span> <span class=3D"h=
ljs-keyword">new</span> <span class=3D"hljs-title class_">JMenu</span>(<spa=
n class=3D"hljs-string">"File"</span>);
        <span class=3D"hljs-type">JMenuItem</span> <span class=3D"hljs-vari=
able">saveItem</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuItem</s=
pan>(<span class=3D"hljs-string">"Save"</span>);
        saveItem.addActionListener(e -&gt; saveImage());
        fileMenu.add(saveItem);

        <span class=3D"hljs-type">JMenuItem</span> <span class=3D"hljs-vari=
able">exitItem</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuItem</s=
pan>(<span class=3D"hljs-string">"Exit"</span>);
        exitItem.addActionListener(e -&gt; System.exit(<span class=3D"hljs-=
number">0</span>));
        fileMenu.add(exitItem);

        <span class=3D"hljs-type">JMenu</span> <span class=3D"hljs-variable=
">editMenu</span> <span class=3D"hljs-operator">=3D</span> <span class=3D"h=
ljs-keyword">new</span> <span class=3D"hljs-title class_">JMenu</span>(<spa=
n class=3D"hljs-string">"Edit"</span>);
        <span class=3D"hljs-type">JMenuItem</span> <span class=3D"hljs-vari=
able">clearItem</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuItem</s=
pan>(<span class=3D"hljs-string">"Clear"</span>);
        clearItem.addActionListener(e -&gt; clearCanvas());
        editMenu.add(clearItem);

        <span class=3D"hljs-type">JMenu</span> <span class=3D"hljs-variable=
">elementMenu</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenu</span>=
(<span class=3D"hljs-string">"Element"</span>);
        <span class=3D"hljs-type">ButtonGroup</span> <span class=3D"hljs-va=
riable">group</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">ButtonGroup<=
/span>();
        <span class=3D"hljs-keyword">for</span> (FloorElementType type : Fl=
oorElementType.values()) {
            <span class=3D"hljs-type">JRadioButtonMenuItem</span> <span cla=
ss=3D"hljs-variable">item</span> <span class=3D"hljs-operator">=3D</span> <=
span class=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JR=
adioButtonMenuItem</span>(type.name());
            item.addActionListener(e -&gt; currentElementType =3D type);
            group.add(item);
            elementMenu.add(item);
        }

        menuBar.add(fileMenu);
        menuBar.add(editMenu);
        menuBar.add(elementMenu);
        setJMenuBar(menuBar);
    }

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword"=
>static</span> <span class=3D"hljs-keyword">void</span> <span class=3D"hljs=
-title function_">main</span><span class=3D"hljs-params">(String[] args)</s=
pan> {
        SwingUtilities.invokeLater(() -&gt; <span class=3D"hljs-keyword">ne=
w</span> <span class=3D"hljs-title class_">FloorPlanDesigner</span>().setVi=
sible(<span class=3D"hljs-literal">true</span>));
    }
}
</code></div></div></pre><p>In this modified version, the program allows yo=
u to draw walls, windows, or doors by selecting the element type from the "=
Element" menu. Then, you can draw these elements on the canvas using mouse =
clicks and dragging.</p></div></div></div></div></div></div></div></div><di=
v class=3D"w-full text-token-text-primary" data-testid=3D"conversation-turn=
-4" style=3D"--avatar-color: #19c37d;"><div class=3D"px-4 py-2 justify-cent=
er text-base md:gap-6 m-auto"><div class=3D"flex flex-1 text-base mx-auto g=
ap-3 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem] group"><div class=3D"fl=
ex-shrink-0 flex flex-col relative items-end"><div><div class=3D"pt-0.5"><d=
iv class=3D"gizmo-shadow-stroke flex h-6 w-6 items-center justify-center ov=
erflow-hidden rounded-full"><div class=3D"relative p-1 rounded-sm h-9 w-9 t=
ext-white flex items-center justify-center" style=3D"background-color: rgb(=
121, 137, 255); width: 24px; height: 24px;"><svg stroke=3D"currentColor" fi=
ll=3D"none" stroke-width=3D"2" viewBox=3D"0 0 24 24" stroke-linecap=3D"roun=
d" stroke-linejoin=3D"round" class=3D"icon-sm" height=3D"1em" width=3D"1em"=
 xmlns=3D"http://www.w3.org/2000/svg"><path d=3D"M20 21v-2a4 4 0 0 0-4-4H8a=
4 4 0 0 0-4 4v2"></path><circle cx=3D"12" cy=3D"7" r=3D"4"></circle></svg><=
/div></div></div></div></div><div class=3D"relative flex w-full flex-col"><=
div class=3D"font-semibold select-none">Anonymous</div><div class=3D"flex-c=
ol gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"><div d=
ata-message-author-role=3D"user" data-message-id=3D"aaa2720e-458f-4645-9426=
-982071cc4148" class=3D"min-h-[20px] text-message flex flex-col items-start=
 gap-3 whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 overflow-=
x-auto"><div class=3D""> I don't want to give users the freedom to draw how=
ever they want. I want them ONLY  to draw straight lines across grid axises=
</div></div></div></div></div></div></div></div><div class=3D"w-full text-t=
oken-text-primary" data-testid=3D"conversation-turn-5" style=3D"--avatar-co=
lor: #19c37d;"><div class=3D"px-4 py-2 justify-center text-base md:gap-6 m-=
auto"><div class=3D"flex flex-1 text-base mx-auto gap-3 md:max-w-3xl lg:max=
-w-[40rem] xl:max-w-[48rem] group"><div class=3D"flex-shrink-0 flex flex-co=
l relative items-end"><div><div class=3D"pt-0.5"><div class=3D"gizmo-shadow=
-stroke flex h-6 w-6 items-center justify-center overflow-hidden rounded-fu=
ll"><div class=3D"relative p-1 rounded-sm h-9 w-9 text-white flex items-cen=
ter justify-center" style=3D"background-color: rgb(25, 195, 125); width: 24=
px; height: 24px;"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fi=
ll=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-sm" role=3D"=
img"><text x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.870=
7C37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9=
.91076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864=
 3.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.=
4257 1.36341C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.4=
95044 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.691=
7 7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.7=
3073 11.0782 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.4=
228C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 =
26.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.1=
8791 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973=
 14.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40=
.2144 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.44=
18 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 =
34.8167 32.6547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.68=
4C39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 1=
8.4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.=
6994 36.1501C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C=
26.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.5=
124 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 =
29.9656 21.0359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.98=
42 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 2=
2.4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.=
9832C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975=
 30.8408 14.1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.007=
3 30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29=
.0556C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.90=
96 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 =
6.39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10=
.3327C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.037=
8 8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 2=
0.9404L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.15=
05 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5=
.32135 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.3=
413 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142=
 12.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25=
.7111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.161=
3C37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27=
.0432 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.60=
47 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 2=
0.7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.305=
5 15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26=
.906 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.155=
4 25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 1=
6.0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.25=
025C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364=
 6.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35=
.3826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9=
981C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122=
 19.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.=
58696C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.85=
24 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C2=
3.0427 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.698=
78 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 =
10.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.=
9985L20.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentColor"></path>=
</svg></div></div></div></div></div><div class=3D"relative flex w-full flex=
-col agent-turn"><div class=3D"font-semibold select-none">ChatGPT</div><div=
 class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col ma=
x-w-full"><div data-message-author-role=3D"assistant" data-message-id=3D"80=
adbf1e-74d3-4826-ba12-9a7e9b3abd1f" class=3D"min-h-[20px] text-message flex=
 flex-col items-start gap-3 whitespace-pre-wrap break-words [.text-message+=
&amp;]:mt-5 overflow-x-auto"><div class=3D"markdown prose w-full break-word=
s dark:prose-invert dark"><p>To restrict users to draw only straight lines =
across grid axes, you need to modify the mouse event listeners to snap the =
drawing to the grid axes. Here's the modified code:</p><pre><div class=3D"d=
ark bg-gray-950 rounded-md"><div class=3D"flex items-center relative text-t=
oken-text-secondary bg-token-main-surface-secondary px-4 py-2 text-xs font-=
sans justify-between rounded-t-md"><span>java</span><span class=3D"" data-s=
tate=3D"closed"><button class=3D"flex gap-1 items-center"><svg width=3D"24"=
 height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.o=
rg/2000/svg" class=3D"icon-sm"><path fill-rule=3D"evenodd" clip-rule=3D"eve=
nodd" d=3D"M12 4C10.8954 4 10 4.89543 10 6H14C14 4.89543 13.1046 4 12 4ZM8.=
53513 4C9.22675 2.8044 10.5194 2 12 2C13.4806 2 14.7733 2.8044 15.4649 4H17=
C18.6569 4 20 5.34315 20 7V19C20 20.6569 18.6569 22 17 22H7C5.34315 22 4 20=
.6569 4 19V7C4 5.34315 5.34315 4 7 4H8.53513ZM8 6H7C6.44772 6 6 6.44772 6 7=
V19C6 19.5523 6.44772 20 7 20H17C17.5523 20 18 19.5523 18 19V7C18 6.44772 1=
7.5523 6 17 6H16C16 7.10457 15.1046 8 14 8H10C8.89543 8 8 7.10457 8 6Z" fil=
l=3D"currentColor"></path></svg>Copy code</button></span></div><div class=
=3D"p-4 overflow-y-auto"><code class=3D"!whitespace-pre hljs language-java"=
><span class=3D"hljs-keyword">import</span> javax.imageio.ImageIO;
<span class=3D"hljs-keyword">import</span> javax.swing.*;
<span class=3D"hljs-keyword">import</span> java.awt.*;
<span class=3D"hljs-keyword">import</span> java.awt.event.*;
<span class=3D"hljs-keyword">import</span> java.awt.image.BufferedImage;
<span class=3D"hljs-keyword">import</span> java.io.File;
<span class=3D"hljs-keyword">import</span> java.io.IOException;

<span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword">cla=
ss</span> <span class=3D"hljs-title class_">FloorPlanDesigner</span> <span =
class=3D"hljs-keyword">extends</span> <span class=3D"hljs-title class_">JFr=
ame</span> {

    <span class=3D"hljs-keyword">private</span> BufferedImage canvas;
    <span class=3D"hljs-keyword">private</span> Point startPoint;
    <span class=3D"hljs-keyword">private</span> Point endPoint;
    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-type">i=
nt</span> <span class=3D"hljs-variable">gridSize</span> <span class=3D"hljs=
-operator">=3D</span> <span class=3D"hljs-number">20</span>; <span class=3D=
"hljs-comment">// Size of grid cells</span>
    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-type">F=
loorElementType</span> <span class=3D"hljs-variable">currentElementType</sp=
an> <span class=3D"hljs-operator">=3D</span> FloorElementType.WALL; <span c=
lass=3D"hljs-comment">// Default to drawing walls</span>

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword"=
>enum</span> <span class=3D"hljs-title class_">FloorElementType</span> {
        WALL(Color.BLACK),
        WINDOW(Color.BLUE),
        DOOR(Color.RED);

        <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-key=
word">final</span> Color color;

        FloorElementType(Color color) {
            <span class=3D"hljs-built_in">this</span>.color =3D color;
        }

        <span class=3D"hljs-keyword">public</span> Color <span class=3D"hlj=
s-title function_">getColor</span><span class=3D"hljs-params">()</span> {
            <span class=3D"hljs-keyword">return</span> color;
        }
    }

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-title fu=
nction_">FloorPlanDesigner</span><span class=3D"hljs-params">()</span> {
        <span class=3D"hljs-built_in">super</span>(<span class=3D"hljs-stri=
ng">"Floor Plan Designer"</span>);
        initUI();
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">initUI</span><span class=
=3D"hljs-params">()</span> {
        canvas =3D <span class=3D"hljs-keyword">new</span> <span class=3D"h=
ljs-title class_">BufferedImage</span>(<span class=3D"hljs-number">800</spa=
n>, <span class=3D"hljs-number">600</span>, BufferedImage.TYPE_INT_ARGB);
        clearCanvas();

        <span class=3D"hljs-type">JPanel</span> <span class=3D"hljs-variabl=
e">panel</span> <span class=3D"hljs-operator">=3D</span> <span class=3D"hlj=
s-keyword">new</span> <span class=3D"hljs-title class_">JPanel</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">protected</span> <span class=3D"hl=
js-keyword">void</span> <span class=3D"hljs-title function_">paintComponent=
</span><span class=3D"hljs-params">(Graphics g)</span> {
                <span class=3D"hljs-built_in">super</span>.paintComponent(g=
);
                g.drawImage(canvas, <span class=3D"hljs-number">0</span>, <=
span class=3D"hljs-number">0</span>, <span class=3D"hljs-literal">null</spa=
n>);
            }
        };

        panel.setPreferredSize(<span class=3D"hljs-keyword">new</span> <spa=
n class=3D"hljs-title class_">Dimension</span>(<span class=3D"hljs-number">=
800</span>, <span class=3D"hljs-number">600</span>));
        panel.addMouseListener(<span class=3D"hljs-keyword">new</span> <spa=
n class=3D"hljs-title class_">MouseAdapter</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">mousePressed</spa=
n><span class=3D"hljs-params">(MouseEvent e)</span> {
                startPoint =3D getNearestGridPoint(e.getPoint());
                endPoint =3D startPoint;
                drawElement(startPoint, endPoint);
            }

            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">mouseReleased</sp=
an><span class=3D"hljs-params">(MouseEvent e)</span> {
                endPoint =3D getNearestGridPoint(e.getPoint());
                drawElement(startPoint, endPoint);
            }
        });

        add(panel);
        setupMenuBar();
        pack();
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(<span class=3D"hljs-literal">null</span>);
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">drawElement</span><span =
class=3D"hljs-params">(Point start, Point end)</span> {
        <span class=3D"hljs-type">Graphics2D</span> <span class=3D"hljs-var=
iable">g2d</span> <span class=3D"hljs-operator">=3D</span> canvas.createGra=
phics();
        g2d.setColor(currentElementType.getColor());
        g2d.setStroke(<span class=3D"hljs-keyword">new</span> <span class=
=3D"hljs-title class_">BasicStroke</span>(<span class=3D"hljs-number">2</sp=
an>));
        g2d.drawLine(start.x, start.y, end.x, end.y);
        g2d.dispose();
        repaint();
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">clearCanvas</span><span =
class=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">Graphics2D</span> <span class=3D"hljs-var=
iable">g2d</span> <span class=3D"hljs-operator">=3D</span> canvas.createGra=
phics();
        g2d.setComposite(AlphaComposite.Clear);
        g2d.fillRect(<span class=3D"hljs-number">0</span>, <span class=3D"h=
ljs-number">0</span>, canvas.getWidth(), canvas.getHeight());
        g2d.setComposite(AlphaComposite.SrcOver);
        g2d.dispose();
        repaint();
    }

    <span class=3D"hljs-keyword">private</span> Point <span class=3D"hljs-t=
itle function_">getNearestGridPoint</span><span class=3D"hljs-params">(Poin=
t point)</span> {
        <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">=
x</span> <span class=3D"hljs-operator">=3D</span> Math.round((<span class=
=3D"hljs-type">float</span>) point.x / gridSize) * gridSize;
        <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">=
y</span> <span class=3D"hljs-operator">=3D</span> Math.round((<span class=
=3D"hljs-type">float</span>) point.y / gridSize) * gridSize;
        <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-keyw=
ord">new</span> <span class=3D"hljs-title class_">Point</span>(x, y);
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">saveImage</span><span cl=
ass=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">JFileChooser</span> <span class=3D"hljs-v=
ariable">fileChooser</span> <span class=3D"hljs-operator">=3D</span> <span =
class=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JFileCh=
ooser</span>();
        fileChooser.setDialogTitle(<span class=3D"hljs-string">"Save Image"=
</span>);
        <span class=3D"hljs-keyword">if</span> (fileChooser.showSaveDialog(=
<span class=3D"hljs-built_in">this</span>) =3D=3D JFileChooser.APPROVE_OPTI=
ON) {
            <span class=3D"hljs-type">File</span> <span class=3D"hljs-varia=
ble">file</span> <span class=3D"hljs-operator">=3D</span> fileChooser.getSe=
lectedFile();
            <span class=3D"hljs-keyword">try</span> {
                ImageIO.write(canvas, <span class=3D"hljs-string">"PNG"</sp=
an>, file);
            } <span class=3D"hljs-keyword">catch</span> (IOException ex) {
                ex.printStackTrace();
            }
        }
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">setupMenuBar</span><span=
 class=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">JMenuBar</span> <span class=3D"hljs-varia=
ble">menuBar</span> <span class=3D"hljs-operator">=3D</span> <span class=3D=
"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuBar</span>=
();

        <span class=3D"hljs-type">JMenu</span> <span class=3D"hljs-variable=
">fileMenu</span> <span class=3D"hljs-operator">=3D</span> <span class=3D"h=
ljs-keyword">new</span> <span class=3D"hljs-title class_">JMenu</span>(<spa=
n class=3D"hljs-string">"File"</span>);
        <span class=3D"hljs-type">JMenuItem</span> <span class=3D"hljs-vari=
able">saveItem</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuItem</s=
pan>(<span class=3D"hljs-string">"Save"</span>);
        saveItem.addActionListener(e -&gt; saveImage());
        fileMenu.add(saveItem);

        <span class=3D"hljs-type">JMenuItem</span> <span class=3D"hljs-vari=
able">exitItem</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuItem</s=
pan>(<span class=3D"hljs-string">"Exit"</span>);
        exitItem.addActionListener(e -&gt; System.exit(<span class=3D"hljs-=
number">0</span>));
        fileMenu.add(exitItem);

        <span class=3D"hljs-type">JMenu</span> <span class=3D"hljs-variable=
">elementMenu</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenu</span>=
(<span class=3D"hljs-string">"Element"</span>);
        <span class=3D"hljs-type">ButtonGroup</span> <span class=3D"hljs-va=
riable">group</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">ButtonGroup<=
/span>();
        <span class=3D"hljs-keyword">for</span> (FloorElementType type : Fl=
oorElementType.values()) {
            <span class=3D"hljs-type">JRadioButtonMenuItem</span> <span cla=
ss=3D"hljs-variable">item</span> <span class=3D"hljs-operator">=3D</span> <=
span class=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JR=
adioButtonMenuItem</span>(type.name());
            item.addActionListener(e -&gt; currentElementType =3D type);
            group.add(item);
            elementMenu.add(item);
        }

        menuBar.add(fileMenu);
        menuBar.add(elementMenu);
        setJMenuBar(menuBar);
    }

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword"=
>static</span> <span class=3D"hljs-keyword">void</span> <span class=3D"hljs=
-title function_">main</span><span class=3D"hljs-params">(String[] args)</s=
pan> {
        SwingUtilities.invokeLater(() -&gt; <span class=3D"hljs-keyword">ne=
w</span> <span class=3D"hljs-title class_">FloorPlanDesigner</span>().setVi=
sible(<span class=3D"hljs-literal">true</span>));
    }
}
</code></div></div></pre><p>In this modified code, the <code>getNearestGrid=
Point</code> method calculates the nearest grid point based on the mouse ev=
ent's coordinates. When drawing, the start and end points are snapped to th=
ese grid points, ensuring that the lines drawn are always straight along th=
e grid axes.</p></div></div></div></div></div></div></div></div><div class=
=3D"w-full text-token-text-primary" data-testid=3D"conversation-turn-6" sty=
le=3D"--avatar-color: #19c37d;"><div class=3D"px-4 py-2 justify-center text=
-base md:gap-6 m-auto"><div class=3D"flex flex-1 text-base mx-auto gap-3 md=
:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem] group"><div class=3D"flex-shri=
nk-0 flex flex-col relative items-end"><div><div class=3D"pt-0.5"><div clas=
s=3D"gizmo-shadow-stroke flex h-6 w-6 items-center justify-center overflow-=
hidden rounded-full"><div class=3D"relative p-1 rounded-sm h-9 w-9 text-whi=
te flex items-center justify-center" style=3D"background-color: rgb(121, 13=
7, 255); width: 24px; height: 24px;"><svg stroke=3D"currentColor" fill=3D"n=
one" stroke-width=3D"2" viewBox=3D"0 0 24 24" stroke-linecap=3D"round" stro=
ke-linejoin=3D"round" class=3D"icon-sm" height=3D"1em" width=3D"1em" xmlns=
=3D"http://www.w3.org/2000/svg"><path d=3D"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 =
0 0-4 4v2"></path><circle cx=3D"12" cy=3D"7" r=3D"4"></circle></svg></div><=
/div></div></div></div><div class=3D"relative flex w-full flex-col"><div cl=
ass=3D"font-semibold select-none">Anonymous</div><div class=3D"flex-col gap=
-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"><div data-me=
ssage-author-role=3D"user" data-message-id=3D"aaa2ba4b-c851-4e2e-a89a-dceb9=
1b2447e" class=3D"min-h-[20px] text-message flex flex-col items-start gap-3=
 whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 overflow-x-auto=
"><div class=3D"">Can you add gridlines on the blank canvas</div></div></di=
v></div></div></div></div></div><div class=3D"w-full text-token-text-primar=
y" data-testid=3D"conversation-turn-7" style=3D"--avatar-color: #19c37d;"><=
div class=3D"px-4 py-2 justify-center text-base md:gap-6 m-auto"><div class=
=3D"flex flex-1 text-base mx-auto gap-3 md:max-w-3xl lg:max-w-[40rem] xl:ma=
x-w-[48rem] group"><div class=3D"flex-shrink-0 flex flex-col relative items=
-end"><div><div class=3D"pt-0.5"><div class=3D"gizmo-shadow-stroke flex h-6=
 w-6 items-center justify-center overflow-hidden rounded-full"><div class=
=3D"relative p-1 rounded-sm h-9 w-9 text-white flex items-center justify-ce=
nter" style=3D"background-color: rgb(25, 195, 125); width: 24px; height: 24=
px;"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xm=
lns=3D"http://www.w3.org/2000/svg" class=3D"icon-sm" role=3D"img"><text x=
=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C37.9808 15=
.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.67=
6 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.=
9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341=
C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044 14.089=
3 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.=
30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782=
 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0.944492=
 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81=
182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659=
 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.=
1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21.075=
5 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C3=
0.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6=
547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26=
.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.53=
24 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501=
C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3=
019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 =
30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0=
359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29=
.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.88=
49ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718=
 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.=
1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24=
.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24.711=
5 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 1=
2.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0=
064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.1988=
5 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20=
.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.9404L18.57=
23 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C1=
5.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.86=
01 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 =
13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.=
6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12.487=
9L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21=
.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35.974=
3 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 3=
2.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.43=
32 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35=
.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554=
 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10=
.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.94=
05C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 =
6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.=
2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826 12.166=
7 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 =
19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.=
8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12.746=
6 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 1=
9.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4.883=
79 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9=
.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2=
424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018=
 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentColor"></path></svg></div>=
</div></div></div></div><div class=3D"relative flex w-full flex-col agent-t=
urn"><div class=3D"font-semibold select-none">ChatGPT</div><div class=3D"fl=
ex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"><d=
iv data-message-author-role=3D"assistant" data-message-id=3D"9051439e-8e28-=
44ee-b96d-914c3d27b6aa" class=3D"min-h-[20px] text-message flex flex-col it=
ems-start gap-3 whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 =
overflow-x-auto"><div class=3D"markdown prose w-full break-words dark:prose=
-invert dark"><p>Sure, I'll add grid lines to the canvas. Here's the modifi=
ed code with grid lines:</p><pre><div class=3D"dark bg-gray-950 rounded-md"=
><div class=3D"flex items-center relative text-token-text-secondary bg-toke=
n-main-surface-secondary px-4 py-2 text-xs font-sans justify-between rounde=
d-t-md"><span>java</span><span class=3D"" data-state=3D"closed"><button cla=
ss=3D"flex gap-1 items-center"><svg width=3D"24" height=3D"24" viewBox=3D"0=
 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-=
sm"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M12 4C10.8954 4 =
10 4.89543 10 6H14C14 4.89543 13.1046 4 12 4ZM8.53513 4C9.22675 2.8044 10.5=
194 2 12 2C13.4806 2 14.7733 2.8044 15.4649 4H17C18.6569 4 20 5.34315 20 7V=
19C20 20.6569 18.6569 22 17 22H7C5.34315 22 4 20.6569 4 19V7C4 5.34315 5.34=
315 4 7 4H8.53513ZM8 6H7C6.44772 6 6 6.44772 6 7V19C6 19.5523 6.44772 20 7 =
20H17C17.5523 20 18 19.5523 18 19V7C18 6.44772 17.5523 6 17 6H16C16 7.10457=
 15.1046 8 14 8H10C8.89543 8 8 7.10457 8 6Z" fill=3D"currentColor"></path><=
/svg>Copy code</button></span></div><div class=3D"p-4 overflow-y-auto"><cod=
e class=3D"!whitespace-pre hljs language-java"><span class=3D"hljs-keyword"=
>import</span> javax.imageio.ImageIO;
<span class=3D"hljs-keyword">import</span> javax.swing.*;
<span class=3D"hljs-keyword">import</span> java.awt.*;
<span class=3D"hljs-keyword">import</span> java.awt.event.*;
<span class=3D"hljs-keyword">import</span> java.awt.image.BufferedImage;
<span class=3D"hljs-keyword">import</span> java.io.File;
<span class=3D"hljs-keyword">import</span> java.io.IOException;

<span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword">cla=
ss</span> <span class=3D"hljs-title class_">FloorPlanDesigner</span> <span =
class=3D"hljs-keyword">extends</span> <span class=3D"hljs-title class_">JFr=
ame</span> {

    <span class=3D"hljs-keyword">private</span> BufferedImage canvas;
    <span class=3D"hljs-keyword">private</span> Point startPoint;
    <span class=3D"hljs-keyword">private</span> Point endPoint;
    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-type">i=
nt</span> <span class=3D"hljs-variable">gridSize</span> <span class=3D"hljs=
-operator">=3D</span> <span class=3D"hljs-number">20</span>; <span class=3D=
"hljs-comment">// Size of grid cells</span>
    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-type">F=
loorElementType</span> <span class=3D"hljs-variable">currentElementType</sp=
an> <span class=3D"hljs-operator">=3D</span> FloorElementType.WALL; <span c=
lass=3D"hljs-comment">// Default to drawing walls</span>

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword"=
>enum</span> <span class=3D"hljs-title class_">FloorElementType</span> {
        WALL(Color.BLACK),
        WINDOW(Color.BLUE),
        DOOR(Color.RED);

        <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-key=
word">final</span> Color color;

        FloorElementType(Color color) {
            <span class=3D"hljs-built_in">this</span>.color =3D color;
        }

        <span class=3D"hljs-keyword">public</span> Color <span class=3D"hlj=
s-title function_">getColor</span><span class=3D"hljs-params">()</span> {
            <span class=3D"hljs-keyword">return</span> color;
        }
    }

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-title fu=
nction_">FloorPlanDesigner</span><span class=3D"hljs-params">()</span> {
        <span class=3D"hljs-built_in">super</span>(<span class=3D"hljs-stri=
ng">"Floor Plan Designer"</span>);
        initUI();
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">initUI</span><span class=
=3D"hljs-params">()</span> {
        canvas =3D <span class=3D"hljs-keyword">new</span> <span class=3D"h=
ljs-title class_">BufferedImage</span>(<span class=3D"hljs-number">800</spa=
n>, <span class=3D"hljs-number">600</span>, BufferedImage.TYPE_INT_ARGB);
        clearCanvas();

        <span class=3D"hljs-type">JPanel</span> <span class=3D"hljs-variabl=
e">panel</span> <span class=3D"hljs-operator">=3D</span> <span class=3D"hlj=
s-keyword">new</span> <span class=3D"hljs-title class_">JPanel</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">protected</span> <span class=3D"hl=
js-keyword">void</span> <span class=3D"hljs-title function_">paintComponent=
</span><span class=3D"hljs-params">(Graphics g)</span> {
                <span class=3D"hljs-built_in">super</span>.paintComponent(g=
);
                g.drawImage(canvas, <span class=3D"hljs-number">0</span>, <=
span class=3D"hljs-number">0</span>, <span class=3D"hljs-literal">null</spa=
n>);
                <span class=3D"hljs-comment">// Draw grid lines</span>
                g.setColor(Color.LIGHT_GRAY);
                <span class=3D"hljs-keyword">for</span> (<span class=3D"hlj=
s-type">int</span> <span class=3D"hljs-variable">x</span> <span class=3D"hl=
js-operator">=3D</span> <span class=3D"hljs-number">0</span>; x &lt; canvas=
.getWidth(); x +=3D gridSize) {
                    g.drawLine(x, <span class=3D"hljs-number">0</span>, x, =
canvas.getHeight());
                }
                <span class=3D"hljs-keyword">for</span> (<span class=3D"hlj=
s-type">int</span> <span class=3D"hljs-variable">y</span> <span class=3D"hl=
js-operator">=3D</span> <span class=3D"hljs-number">0</span>; y &lt; canvas=
.getHeight(); y +=3D gridSize) {
                    g.drawLine(<span class=3D"hljs-number">0</span>, y, can=
vas.getWidth(), y);
                }
            }
        };

        panel.setPreferredSize(<span class=3D"hljs-keyword">new</span> <spa=
n class=3D"hljs-title class_">Dimension</span>(<span class=3D"hljs-number">=
800</span>, <span class=3D"hljs-number">600</span>));
        panel.addMouseListener(<span class=3D"hljs-keyword">new</span> <spa=
n class=3D"hljs-title class_">MouseAdapter</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">mousePressed</spa=
n><span class=3D"hljs-params">(MouseEvent e)</span> {
                startPoint =3D getNearestGridPoint(e.getPoint());
                endPoint =3D startPoint;
                drawElement(startPoint, endPoint);
            }

            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">mouseReleased</sp=
an><span class=3D"hljs-params">(MouseEvent e)</span> {
                endPoint =3D getNearestGridPoint(e.getPoint());
                drawElement(startPoint, endPoint);
            }
        });

        add(panel);
        setupMenuBar();
        pack();
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(<span class=3D"hljs-literal">null</span>);
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">drawElement</span><span =
class=3D"hljs-params">(Point start, Point end)</span> {
        <span class=3D"hljs-type">Graphics2D</span> <span class=3D"hljs-var=
iable">g2d</span> <span class=3D"hljs-operator">=3D</span> canvas.createGra=
phics();
        g2d.setColor(currentElementType.getColor());
        g2d.setStroke(<span class=3D"hljs-keyword">new</span> <span class=
=3D"hljs-title class_">BasicStroke</span>(<span class=3D"hljs-number">2</sp=
an>));
        g2d.drawLine(start.x, start.y, end.x, end.y);
        g2d.dispose();
        repaint();
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">clearCanvas</span><span =
class=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">Graphics2D</span> <span class=3D"hljs-var=
iable">g2d</span> <span class=3D"hljs-operator">=3D</span> canvas.createGra=
phics();
        g2d.setComposite(AlphaComposite.Clear);
        g2d.fillRect(<span class=3D"hljs-number">0</span>, <span class=3D"h=
ljs-number">0</span>, canvas.getWidth(), canvas.getHeight());
        g2d.setComposite(AlphaComposite.SrcOver);
        g2d.dispose();
        repaint();
    }

    <span class=3D"hljs-keyword">private</span> Point <span class=3D"hljs-t=
itle function_">getNearestGridPoint</span><span class=3D"hljs-params">(Poin=
t point)</span> {
        <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">=
x</span> <span class=3D"hljs-operator">=3D</span> Math.round((<span class=
=3D"hljs-type">float</span>) point.x / gridSize) * gridSize;
        <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">=
y</span> <span class=3D"hljs-operator">=3D</span> Math.round((<span class=
=3D"hljs-type">float</span>) point.y / gridSize) * gridSize;
        <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-keyw=
ord">new</span> <span class=3D"hljs-title class_">Point</span>(x, y);
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">saveImage</span><span cl=
ass=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">JFileChooser</span> <span class=3D"hljs-v=
ariable">fileChooser</span> <span class=3D"hljs-operator">=3D</span> <span =
class=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JFileCh=
ooser</span>();
        fileChooser.setDialogTitle(<span class=3D"hljs-string">"Save Image"=
</span>);
        <span class=3D"hljs-keyword">if</span> (fileChooser.showSaveDialog(=
<span class=3D"hljs-built_in">this</span>) =3D=3D JFileChooser.APPROVE_OPTI=
ON) {
            <span class=3D"hljs-type">File</span> <span class=3D"hljs-varia=
ble">file</span> <span class=3D"hljs-operator">=3D</span> fileChooser.getSe=
lectedFile();
            <span class=3D"hljs-keyword">try</span> {
                ImageIO.write(canvas, <span class=3D"hljs-string">"PNG"</sp=
an>, file);
            } <span class=3D"hljs-keyword">catch</span> (IOException ex) {
                ex.printStackTrace();
            }
        }
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">setupMenuBar</span><span=
 class=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">JMenuBar</span> <span class=3D"hljs-varia=
ble">menuBar</span> <span class=3D"hljs-operator">=3D</span> <span class=3D=
"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuBar</span>=
();

        <span class=3D"hljs-type">JMenu</span> <span class=3D"hljs-variable=
">fileMenu</span> <span class=3D"hljs-operator">=3D</span> <span class=3D"h=
ljs-keyword">new</span> <span class=3D"hljs-title class_">JMenu</span>(<spa=
n class=3D"hljs-string">"File"</span>);
        <span class=3D"hljs-type">JMenuItem</span> <span class=3D"hljs-vari=
able">saveItem</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuItem</s=
pan>(<span class=3D"hljs-string">"Save"</span>);
        saveItem.addActionListener(e -&gt; saveImage());
        fileMenu.add(saveItem);

        <span class=3D"hljs-type">JMenuItem</span> <span class=3D"hljs-vari=
able">exitItem</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuItem</s=
pan>(<span class=3D"hljs-string">"Exit"</span>);
        exitItem.addActionListener(e -&gt; System.exit(<span class=3D"hljs-=
number">0</span>));
        fileMenu.add(exitItem);

        <span class=3D"hljs-type">JMenu</span> <span class=3D"hljs-variable=
">elementMenu</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenu</span>=
(<span class=3D"hljs-string">"Element"</span>);
        <span class=3D"hljs-type">ButtonGroup</span> <span class=3D"hljs-va=
riable">group</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">ButtonGroup<=
/span>();
        <span class=3D"hljs-keyword">for</span> (FloorElementType type : Fl=
oorElementType.values()) {
            <span class=3D"hljs-type">JRadioButtonMenuItem</span> <span cla=
ss=3D"hljs-variable">item</span> <span class=3D"hljs-operator">=3D</span> <=
span class=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JR=
adioButtonMenuItem</span>(type.name());
            item.addActionListener(e -&gt; currentElementType =3D type);
            group.add(item);
            elementMenu.add(item);
        }

        menuBar.add(fileMenu);
        menuBar.add(elementMenu);
        setJMenuBar(menuBar);
    }

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword"=
>static</span> <span class=3D"hljs-keyword">void</span> <span class=3D"hljs=
-title function_">main</span><span class=3D"hljs-params">(String[] args)</s=
pan> {
        SwingUtilities.invokeLater(() -&gt; <span class=3D"hljs-keyword">ne=
w</span> <span class=3D"hljs-title class_">FloorPlanDesigner</span>().setVi=
sible(<span class=3D"hljs-literal">true</span>));
    }
}
</code></div></div></pre><p>In this modified version, grid lines are drawn =
within the <code>paintComponent</code> method of the panel. They are drawn =
in light gray color and are positioned according to the grid size specified=
.</p></div></div></div></div></div></div></div></div><div class=3D"w-full t=
ext-token-text-primary" data-testid=3D"conversation-turn-8" style=3D"--avat=
ar-color: #19c37d;"><div class=3D"px-4 py-2 justify-center text-base md:gap=
-6 m-auto"><div class=3D"flex flex-1 text-base mx-auto gap-3 md:max-w-3xl l=
g:max-w-[40rem] xl:max-w-[48rem] group"><div class=3D"flex-shrink-0 flex fl=
ex-col relative items-end"><div><div class=3D"pt-0.5"><div class=3D"gizmo-s=
hadow-stroke flex h-6 w-6 items-center justify-center overflow-hidden round=
ed-full"><div class=3D"relative p-1 rounded-sm h-9 w-9 text-white flex item=
s-center justify-center" style=3D"background-color: rgb(121, 137, 255); wid=
th: 24px; height: 24px;"><svg stroke=3D"currentColor" fill=3D"none" stroke-=
width=3D"2" viewBox=3D"0 0 24 24" stroke-linecap=3D"round" stroke-linejoin=
=3D"round" class=3D"icon-sm" height=3D"1em" width=3D"1em" xmlns=3D"http://w=
ww.w3.org/2000/svg"><path d=3D"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"><=
/path><circle cx=3D"12" cy=3D"7" r=3D"4"></circle></svg></div></div></div><=
/div></div><div class=3D"relative flex w-full flex-col"><div class=3D"font-=
semibold select-none">Anonymous</div><div class=3D"flex-col gap-1 md:gap-3"=
><div class=3D"flex flex-grow flex-col max-w-full"><div data-message-author=
-role=3D"user" data-message-id=3D"aaa2185e-4558-43f2-abfa-965c32a8a5f0" cla=
ss=3D"min-h-[20px] text-message flex flex-col items-start gap-3 whitespace-=
pre-wrap break-words [.text-message+&amp;]:mt-5 overflow-x-auto"><div class=
=3D"">import javax.imageio.ImageIO;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

public class App extends JFrame {

    private BufferedImage canvas;
    private Point startPoint;
    private Point endPoint;
    private int gridSize =3D 20; // Size of grid cells
    private FloorElementType currentElementType =3D FloorElementType.WALL; =
// Default to drawing walls

    public enum FloorElementType {
        WALL(Color.BLACK),
        WINDOW(Color.BLUE),
        DOOR(Color.RED);

        private final Color color;

        FloorElementType(Color color) {
            this.color =3D color;
        }

        public Color getColor() {
            return color;
        }
    }

    public App() {
        super("Floor Plan Designer");
        initUI();
    }

    private void initUI() {
        canvas =3D new BufferedImage(800, 600, BufferedImage.TYPE_INT_ARGB)=
;
        clearCanvas();

        JPanel panel =3D new JPanel() {
            @Override
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
                g.drawImage(canvas, 0, 0, null);
            }
        };

        panel.setPreferredSize(new Dimension(800, 600));
        panel.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                startPoint =3D getNearestGridPoint(e.getPoint());
                endPoint =3D startPoint;
                drawElement(startPoint, endPoint);
            }

            @Override
            public void mouseReleased(MouseEvent e) {
                endPoint =3D getNearestGridPoint(e.getPoint());
                drawElement(startPoint, endPoint);
            }
        });

        add(panel);
        setupMenuBar();
        pack();
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
    }

    private void drawElement(Point start, Point end) {
        Graphics2D g2d =3D canvas.createGraphics();
        g2d.setColor(currentElementType.getColor());
        g2d.setStroke(new BasicStroke(2));
        g2d.drawLine(start.x, start.y, end.x, end.y);
        g2d.dispose();
        repaint();
    }

    private void clearCanvas() {
        Graphics2D g2d =3D canvas.createGraphics();
        g2d.setComposite(AlphaComposite.Clear);
        g2d.fillRect(0, 0, canvas.getWidth(), canvas.getHeight());
        g2d.setComposite(AlphaComposite.SrcOver);
        g2d.dispose();
        repaint();
    }

    private Point getNearestGridPoint(Point point) {
        int x =3D Math.round((float) point.x / gridSize) * gridSize;
        int y =3D Math.round((float) point.y / gridSize) * gridSize;
        return new Point(x, y);
    }

    private void saveImage() {
        JFileChooser fileChooser =3D new JFileChooser();
        fileChooser.setDialogTitle("Save Image");
        if (fileChooser.showSaveDialog(this) =3D=3D JFileChooser.APPROVE_OP=
TION) {
            File file =3D fileChooser.getSelectedFile();
            try {
                ImageIO.write(canvas, "PNG", file);
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
    }

    private void setupMenuBar() {
        JMenuBar menuBar =3D new JMenuBar();

        JMenu fileMenu =3D new JMenu("File");
        JMenuItem saveItem =3D new JMenuItem("Save");
        saveItem.addActionListener(e -&gt; saveImage());
        fileMenu.add(saveItem);

        JMenuItem exitItem =3D new JMenuItem("Exit");
        exitItem.addActionListener(e -&gt; System.exit(0));
        fileMenu.add(exitItem);

        JMenu elementMenu =3D new JMenu("Element");
        ButtonGroup group =3D new ButtonGroup();
        for (FloorElementType type : FloorElementType.values()) {
            JRadioButtonMenuItem item =3D new JRadioButtonMenuItem(type.nam=
e());
            item.addActionListener(e -&gt; currentElementType =3D type);
            group.add(item);
            elementMenu.add(item);
        }

        menuBar.add(fileMenu);
        menuBar.add(elementMenu);
        setJMenuBar(menuBar);
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -&gt; new App().setVisible(true));
    }
}
 use this code to add gridlines. my file must be named App</div></div></div=
></div></div></div></div></div><div class=3D"w-full text-token-text-primary=
" data-testid=3D"conversation-turn-9" style=3D"--avatar-color: #19c37d;"><d=
iv class=3D"px-4 py-2 justify-center text-base md:gap-6 m-auto"><div class=
=3D"flex flex-1 text-base mx-auto gap-3 md:max-w-3xl lg:max-w-[40rem] xl:ma=
x-w-[48rem] group"><div class=3D"flex-shrink-0 flex flex-col relative items=
-end"><div><div class=3D"pt-0.5"><div class=3D"gizmo-shadow-stroke flex h-6=
 w-6 items-center justify-center overflow-hidden rounded-full"><div class=
=3D"relative p-1 rounded-sm h-9 w-9 text-white flex items-center justify-ce=
nter" style=3D"background-color: rgb(25, 195, 125); width: 24px; height: 24=
px;"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xm=
lns=3D"http://www.w3.org/2000/svg" class=3D"icon-sm" role=3D"img"><text x=
=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C37.9808 15=
.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.67=
6 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.=
9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341=
C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044 14.089=
3 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.=
30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782=
 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0.944492=
 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81=
182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659=
 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.=
1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21.075=
5 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C3=
0.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6=
547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26=
.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.53=
24 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501=
C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3=
019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 =
30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0=
359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29=
.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.88=
49ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718=
 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.=
1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24=
.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24.711=
5 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 1=
2.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0=
064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.1988=
5 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20=
.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.9404L18.57=
23 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C1=
5.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.86=
01 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 =
13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.=
6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12.487=
9L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21=
.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35.974=
3 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 3=
2.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.43=
32 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35=
.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554=
 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10=
.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.94=
05C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 =
6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.=
2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826 12.166=
7 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 =
19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.=
8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12.746=
6 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 1=
9.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4.883=
79 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9=
.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2=
424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018=
 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentColor"></path></svg></div>=
</div></div></div></div><div class=3D"relative flex w-full flex-col agent-t=
urn"><div class=3D"font-semibold select-none">ChatGPT</div><div class=3D"fl=
ex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"><d=
iv data-message-author-role=3D"assistant" data-message-id=3D"6d6cb874-cfbe-=
4039-b085-d4b32666ba85" class=3D"min-h-[20px] text-message flex flex-col it=
ems-start gap-3 whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 =
overflow-x-auto"><div class=3D"markdown prose w-full break-words dark:prose=
-invert dark"><p>Certainly! Here's your modified <code>App.java</code> code=
 with grid lines added:</p><pre><div class=3D"dark bg-gray-950 rounded-md">=
<div class=3D"flex items-center relative text-token-text-secondary bg-token=
-main-surface-secondary px-4 py-2 text-xs font-sans justify-between rounded=
-t-md"><span>java</span><span class=3D"" data-state=3D"closed"><button clas=
s=3D"flex gap-1 items-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 =
0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-s=
m"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M12 4C10.8954 4 1=
0 4.89543 10 6H14C14 4.89543 13.1046 4 12 4ZM8.53513 4C9.22675 2.8044 10.51=
94 2 12 2C13.4806 2 14.7733 2.8044 15.4649 4H17C18.6569 4 20 5.34315 20 7V1=
9C20 20.6569 18.6569 22 17 22H7C5.34315 22 4 20.6569 4 19V7C4 5.34315 5.343=
15 4 7 4H8.53513ZM8 6H7C6.44772 6 6 6.44772 6 7V19C6 19.5523 6.44772 20 7 2=
0H17C17.5523 20 18 19.5523 18 19V7C18 6.44772 17.5523 6 17 6H16C16 7.10457 =
15.1046 8 14 8H10C8.89543 8 8 7.10457 8 6Z" fill=3D"currentColor"></path></=
svg>Copy code</button></span></div><div class=3D"p-4 overflow-y-auto"><code=
 class=3D"!whitespace-pre hljs language-java"><span class=3D"hljs-keyword">=
import</span> javax.imageio.ImageIO;
<span class=3D"hljs-keyword">import</span> javax.swing.*;
<span class=3D"hljs-keyword">import</span> java.awt.*;
<span class=3D"hljs-keyword">import</span> java.awt.event.*;
<span class=3D"hljs-keyword">import</span> java.awt.image.BufferedImage;
<span class=3D"hljs-keyword">import</span> java.io.File;
<span class=3D"hljs-keyword">import</span> java.io.IOException;

<span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword">cla=
ss</span> <span class=3D"hljs-title class_">App</span> <span class=3D"hljs-=
keyword">extends</span> <span class=3D"hljs-title class_">JFrame</span> {

    <span class=3D"hljs-keyword">private</span> BufferedImage canvas;
    <span class=3D"hljs-keyword">private</span> Point startPoint;
    <span class=3D"hljs-keyword">private</span> Point endPoint;
    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-type">i=
nt</span> <span class=3D"hljs-variable">gridSize</span> <span class=3D"hljs=
-operator">=3D</span> <span class=3D"hljs-number">20</span>; <span class=3D=
"hljs-comment">// Size of grid cells</span>
    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-type">F=
loorElementType</span> <span class=3D"hljs-variable">currentElementType</sp=
an> <span class=3D"hljs-operator">=3D</span> FloorElementType.WALL; <span c=
lass=3D"hljs-comment">// Default to drawing walls</span>

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword"=
>enum</span> <span class=3D"hljs-title class_">FloorElementType</span> {
        WALL(Color.BLACK),
        WINDOW(Color.BLUE),
        DOOR(Color.RED);

        <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-key=
word">final</span> Color color;

        FloorElementType(Color color) {
            <span class=3D"hljs-built_in">this</span>.color =3D color;
        }

        <span class=3D"hljs-keyword">public</span> Color <span class=3D"hlj=
s-title function_">getColor</span><span class=3D"hljs-params">()</span> {
            <span class=3D"hljs-keyword">return</span> color;
        }
    }

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-title fu=
nction_">App</span><span class=3D"hljs-params">()</span> {
        <span class=3D"hljs-built_in">super</span>(<span class=3D"hljs-stri=
ng">"Floor Plan Designer"</span>);
        initUI();
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">initUI</span><span class=
=3D"hljs-params">()</span> {
        canvas =3D <span class=3D"hljs-keyword">new</span> <span class=3D"h=
ljs-title class_">BufferedImage</span>(<span class=3D"hljs-number">800</spa=
n>, <span class=3D"hljs-number">600</span>, BufferedImage.TYPE_INT_ARGB);
        clearCanvas();

        <span class=3D"hljs-type">JPanel</span> <span class=3D"hljs-variabl=
e">panel</span> <span class=3D"hljs-operator">=3D</span> <span class=3D"hlj=
s-keyword">new</span> <span class=3D"hljs-title class_">JPanel</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">protected</span> <span class=3D"hl=
js-keyword">void</span> <span class=3D"hljs-title function_">paintComponent=
</span><span class=3D"hljs-params">(Graphics g)</span> {
                <span class=3D"hljs-built_in">super</span>.paintComponent(g=
);
                g.drawImage(canvas, <span class=3D"hljs-number">0</span>, <=
span class=3D"hljs-number">0</span>, <span class=3D"hljs-literal">null</spa=
n>);

                <span class=3D"hljs-comment">// Draw grid lines</span>
                g.setColor(Color.LIGHT_GRAY);
                <span class=3D"hljs-keyword">for</span> (<span class=3D"hlj=
s-type">int</span> <span class=3D"hljs-variable">x</span> <span class=3D"hl=
js-operator">=3D</span> <span class=3D"hljs-number">0</span>; x &lt; canvas=
.getWidth(); x +=3D gridSize) {
                    g.drawLine(x, <span class=3D"hljs-number">0</span>, x, =
canvas.getHeight());
                }
                <span class=3D"hljs-keyword">for</span> (<span class=3D"hlj=
s-type">int</span> <span class=3D"hljs-variable">y</span> <span class=3D"hl=
js-operator">=3D</span> <span class=3D"hljs-number">0</span>; y &lt; canvas=
.getHeight(); y +=3D gridSize) {
                    g.drawLine(<span class=3D"hljs-number">0</span>, y, can=
vas.getWidth(), y);
                }
            }
        };

        panel.setPreferredSize(<span class=3D"hljs-keyword">new</span> <spa=
n class=3D"hljs-title class_">Dimension</span>(<span class=3D"hljs-number">=
800</span>, <span class=3D"hljs-number">600</span>));
        panel.addMouseListener(<span class=3D"hljs-keyword">new</span> <spa=
n class=3D"hljs-title class_">MouseAdapter</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">mousePressed</spa=
n><span class=3D"hljs-params">(MouseEvent e)</span> {
                startPoint =3D getNearestGridPoint(e.getPoint());
                endPoint =3D startPoint;
                drawElement(startPoint, endPoint);
            }

            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">mouseReleased</sp=
an><span class=3D"hljs-params">(MouseEvent e)</span> {
                endPoint =3D getNearestGridPoint(e.getPoint());
                drawElement(startPoint, endPoint);
            }
        });

        add(panel);
        setupMenuBar();
        pack();
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(<span class=3D"hljs-literal">null</span>);
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">drawElement</span><span =
class=3D"hljs-params">(Point start, Point end)</span> {
        <span class=3D"hljs-type">Graphics2D</span> <span class=3D"hljs-var=
iable">g2d</span> <span class=3D"hljs-operator">=3D</span> canvas.createGra=
phics();
        g2d.setColor(currentElementType.getColor());
        g2d.setStroke(<span class=3D"hljs-keyword">new</span> <span class=
=3D"hljs-title class_">BasicStroke</span>(<span class=3D"hljs-number">2</sp=
an>));
        g2d.drawLine(start.x, start.y, end.x, end.y);
        g2d.dispose();
        repaint();
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">clearCanvas</span><span =
class=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">Graphics2D</span> <span class=3D"hljs-var=
iable">g2d</span> <span class=3D"hljs-operator">=3D</span> canvas.createGra=
phics();
        g2d.setComposite(AlphaComposite.Clear);
        g2d.fillRect(<span class=3D"hljs-number">0</span>, <span class=3D"h=
ljs-number">0</span>, canvas.getWidth(), canvas.getHeight());
        g2d.setComposite(AlphaComposite.SrcOver);
        g2d.dispose();
        repaint();
    }

    <span class=3D"hljs-keyword">private</span> Point <span class=3D"hljs-t=
itle function_">getNearestGridPoint</span><span class=3D"hljs-params">(Poin=
t point)</span> {
        <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">=
x</span> <span class=3D"hljs-operator">=3D</span> Math.round((<span class=
=3D"hljs-type">float</span>) point.x / gridSize) * gridSize;
        <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">=
y</span> <span class=3D"hljs-operator">=3D</span> Math.round((<span class=
=3D"hljs-type">float</span>) point.y / gridSize) * gridSize;
        <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-keyw=
ord">new</span> <span class=3D"hljs-title class_">Point</span>(x, y);
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">saveImage</span><span cl=
ass=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">JFileChooser</span> <span class=3D"hljs-v=
ariable">fileChooser</span> <span class=3D"hljs-operator">=3D</span> <span =
class=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JFileCh=
ooser</span>();
        fileChooser.setDialogTitle(<span class=3D"hljs-string">"Save Image"=
</span>);
        <span class=3D"hljs-keyword">if</span> (fileChooser.showSaveDialog(=
<span class=3D"hljs-built_in">this</span>) =3D=3D JFileChooser.APPROVE_OPTI=
ON) {
            <span class=3D"hljs-type">File</span> <span class=3D"hljs-varia=
ble">file</span> <span class=3D"hljs-operator">=3D</span> fileChooser.getSe=
lectedFile();
            <span class=3D"hljs-keyword">try</span> {
                ImageIO.write(canvas, <span class=3D"hljs-string">"PNG"</sp=
an>, file);
            } <span class=3D"hljs-keyword">catch</span> (IOException ex) {
                ex.printStackTrace();
            }
        }
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">setupMenuBar</span><span=
 class=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">JMenuBar</span> <span class=3D"hljs-varia=
ble">menuBar</span> <span class=3D"hljs-operator">=3D</span> <span class=3D=
"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuBar</span>=
();

        <span class=3D"hljs-type">JMenu</span> <span class=3D"hljs-variable=
">fileMenu</span> <span class=3D"hljs-operator">=3D</span> <span class=3D"h=
ljs-keyword">new</span> <span class=3D"hljs-title class_">JMenu</span>(<spa=
n class=3D"hljs-string">"File"</span>);
        <span class=3D"hljs-type">JMenuItem</span> <span class=3D"hljs-vari=
able">saveItem</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuItem</s=
pan>(<span class=3D"hljs-string">"Save"</span>);
        saveItem.addActionListener(e -&gt; saveImage());
        fileMenu.add(saveItem);

        <span class=3D"hljs-type">JMenuItem</span> <span class=3D"hljs-vari=
able">exitItem</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuItem</s=
pan>(<span class=3D"hljs-string">"Exit"</span>);
        exitItem.addActionListener(e -&gt; System.exit(<span class=3D"hljs-=
number">0</span>));
        fileMenu.add(exitItem);

        <span class=3D"hljs-type">JMenu</span> <span class=3D"hljs-variable=
">elementMenu</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenu</span>=
(<span class=3D"hljs-string">"Element"</span>);
        <span class=3D"hljs-type">ButtonGroup</span> <span class=3D"hljs-va=
riable">group</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">ButtonGroup<=
/span>();
        <span class=3D"hljs-keyword">for</span> (FloorElementType type : Fl=
oorElementType.values()) {
            <span class=3D"hljs-type">JRadioButtonMenuItem</span> <span cla=
ss=3D"hljs-variable">item</span> <span class=3D"hljs-operator">=3D</span> <=
span class=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JR=
adioButtonMenuItem</span>(type.name());
            item.addActionListener(e -&gt; currentElementType =3D type);
            group.add(item);
            elementMenu.add(item);
        }

        menuBar.add(fileMenu);
        menuBar.add(elementMenu);
        setJMenuBar(menuBar);
    }

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword"=
>static</span> <span class=3D"hljs-keyword">void</span> <span class=3D"hljs=
-title function_">main</span><span class=3D"hljs-params">(String[] args)</s=
pan> {
        SwingUtilities.invokeLater(() -&gt; <span class=3D"hljs-keyword">ne=
w</span> <span class=3D"hljs-title class_">App</span>().setVisible(<span cl=
ass=3D"hljs-literal">true</span>));
    }
}
</code></div></div></pre><p>This code adds light gray grid lines to the can=
vas. The grid lines are drawn in the <code>paintComponent</code> method of =
the panel. The grid size is specified by the <code>gridSize</code> variable=
.</p></div></div></div></div></div></div></div></div><div class=3D"w-full t=
ext-token-text-primary" data-testid=3D"conversation-turn-10" style=3D"--ava=
tar-color: #19c37d;"><div class=3D"px-4 py-2 justify-center text-base md:ga=
p-6 m-auto"><div class=3D"flex flex-1 text-base mx-auto gap-3 md:max-w-3xl =
lg:max-w-[40rem] xl:max-w-[48rem] group"><div class=3D"flex-shrink-0 flex f=
lex-col relative items-end"><div><div class=3D"pt-0.5"><div class=3D"gizmo-=
shadow-stroke flex h-6 w-6 items-center justify-center overflow-hidden roun=
ded-full"><div class=3D"relative p-1 rounded-sm h-9 w-9 text-white flex ite=
ms-center justify-center" style=3D"background-color: rgb(121, 137, 255); wi=
dth: 24px; height: 24px;"><svg stroke=3D"currentColor" fill=3D"none" stroke=
-width=3D"2" viewBox=3D"0 0 24 24" stroke-linecap=3D"round" stroke-linejoin=
=3D"round" class=3D"icon-sm" height=3D"1em" width=3D"1em" xmlns=3D"http://w=
ww.w3.org/2000/svg"><path d=3D"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"><=
/path><circle cx=3D"12" cy=3D"7" r=3D"4"></circle></svg></div></div></div><=
/div></div><div class=3D"relative flex w-full flex-col"><div class=3D"font-=
semibold select-none">Anonymous</div><div class=3D"flex-col gap-1 md:gap-3"=
><div class=3D"flex flex-grow flex-col max-w-full"><div data-message-author=
-role=3D"user" data-message-id=3D"aaa2889a-1e51-4dce-9798-90efdec5147c" cla=
ss=3D"min-h-[20px] text-message flex flex-col items-start gap-3 whitespace-=
pre-wrap break-words [.text-message+&amp;]:mt-5 overflow-x-auto"><div class=
=3D"">Now, can you make it so they can only draw straight lines ALONG the g=
rid lines. They shouldn't be able to draw anywhere that is blank space on t=
he canvas</div></div></div></div></div></div></div></div><div class=3D"w-fu=
ll text-token-text-primary" data-testid=3D"conversation-turn-11" style=3D"-=
-avatar-color: #19c37d;"><div class=3D"px-4 py-2 justify-center text-base m=
d:gap-6 m-auto"><div class=3D"flex flex-1 text-base mx-auto gap-3 md:max-w-=
3xl lg:max-w-[40rem] xl:max-w-[48rem] group"><div class=3D"flex-shrink-0 fl=
ex flex-col relative items-end"><div><div class=3D"pt-0.5"><div class=3D"gi=
zmo-shadow-stroke flex h-6 w-6 items-center justify-center overflow-hidden =
rounded-full"><div class=3D"relative p-1 rounded-sm h-9 w-9 text-white flex=
 items-center justify-center" style=3D"background-color: rgb(25, 195, 125);=
 width: 24px; height: 24px;"><svg width=3D"41" height=3D"41" viewBox=3D"0 0=
 41 41" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-sm=
" role=3D"img"><text x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5=
324 16.8707C37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744=
 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.49=
85C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1=
.94125 22.4257 1.36341C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C1=
6.1708 0.495044 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.4=
4666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 1=
0.0087 2.73073 11.0782 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.7=
21698 18.4228C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.475=
9 2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 3=
2.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.89=
07 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C=
19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.=
8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.502=
7 33.2332 34.8167 32.6547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.=
7752 28.684C39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517=
 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 3=
7.2733 17.6994 36.1501C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.900=
4 31.4156C26.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26=
.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.954=
1 21.0198 29.9656 21.0359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.=
3889C29.9842 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838=
 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5=
.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.72=
48C13.8975 30.8408 14.1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8=
408 15.0073 30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 =
24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.=
7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.3878=
5 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 =
8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19=
351 20.0378 8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267=
 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.=
5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046=
 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.=
30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.49=
81C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 =
12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6=
606 20.1613C37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 =
36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.=
6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586=
 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.05=
56ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 =
10.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9=
948 10.1554 25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753=
 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24=
.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.315=
89 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 =
10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10=
.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.94=
41 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 =
11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.2=
1869 17.8524 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034=
 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.=
7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.487=
7 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 1=
7.9975V22.9985L20.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentColo=
r"></path></svg></div></div></div></div></div><div class=3D"relative flex w=
-full flex-col agent-turn"><div class=3D"font-semibold select-none">ChatGPT=
</div><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow f=
lex-col max-w-full"><div data-message-author-role=3D"assistant" data-messag=
e-id=3D"4bea96ea-6239-44d5-970f-bf0152c6d12d" class=3D"min-h-[20px] text-me=
ssage flex flex-col items-start gap-3 whitespace-pre-wrap break-words [.tex=
t-message+&amp;]:mt-5 overflow-x-auto"><div class=3D"markdown prose w-full =
break-words dark:prose-invert dark"><p>To enable drawing only along the gri=
d lines and prevent drawing in blank spaces on the canvas, we need to adjus=
t the logic in the mouse event listeners. Specifically, we'll need to ensur=
e that the start and end points of the lines are always aligned with the gr=
id lines. Here's the modified code:</p><pre><div class=3D"dark bg-gray-950 =
rounded-md"><div class=3D"flex items-center relative text-token-text-second=
ary bg-token-main-surface-secondary px-4 py-2 text-xs font-sans justify-bet=
ween rounded-t-md"><span>java</span><span class=3D"" data-state=3D"closed">=
<button class=3D"flex gap-1 items-center"><svg width=3D"24" height=3D"24" v=
iewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" cla=
ss=3D"icon-sm"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M12 4=
C10.8954 4 10 4.89543 10 6H14C14 4.89543 13.1046 4 12 4ZM8.53513 4C9.22675 =
2.8044 10.5194 2 12 2C13.4806 2 14.7733 2.8044 15.4649 4H17C18.6569 4 20 5.=
34315 20 7V19C20 20.6569 18.6569 22 17 22H7C5.34315 22 4 20.6569 4 19V7C4 5=
.34315 5.34315 4 7 4H8.53513ZM8 6H7C6.44772 6 6 6.44772 6 7V19C6 19.5523 6.=
44772 20 7 20H17C17.5523 20 18 19.5523 18 19V7C18 6.44772 17.5523 6 17 6H16=
C16 7.10457 15.1046 8 14 8H10C8.89543 8 8 7.10457 8 6Z" fill=3D"currentColo=
r"></path></svg>Copy code</button></span></div><div class=3D"p-4 overflow-y=
-auto"><code class=3D"!whitespace-pre hljs language-java"><span class=3D"hl=
js-keyword">import</span> javax.imageio.ImageIO;
<span class=3D"hljs-keyword">import</span> javax.swing.*;
<span class=3D"hljs-keyword">import</span> java.awt.*;
<span class=3D"hljs-keyword">import</span> java.awt.event.*;
<span class=3D"hljs-keyword">import</span> java.awt.image.BufferedImage;
<span class=3D"hljs-keyword">import</span> java.io.File;
<span class=3D"hljs-keyword">import</span> java.io.IOException;

<span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword">cla=
ss</span> <span class=3D"hljs-title class_">App</span> <span class=3D"hljs-=
keyword">extends</span> <span class=3D"hljs-title class_">JFrame</span> {

    <span class=3D"hljs-keyword">private</span> BufferedImage canvas;
    <span class=3D"hljs-keyword">private</span> Point startPoint;
    <span class=3D"hljs-keyword">private</span> Point endPoint;
    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-type">i=
nt</span> <span class=3D"hljs-variable">gridSize</span> <span class=3D"hljs=
-operator">=3D</span> <span class=3D"hljs-number">20</span>; <span class=3D=
"hljs-comment">// Size of grid cells</span>
    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-type">F=
loorElementType</span> <span class=3D"hljs-variable">currentElementType</sp=
an> <span class=3D"hljs-operator">=3D</span> FloorElementType.WALL; <span c=
lass=3D"hljs-comment">// Default to drawing walls</span>

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword"=
>enum</span> <span class=3D"hljs-title class_">FloorElementType</span> {
        WALL(Color.BLACK),
        WINDOW(Color.BLUE),
        DOOR(Color.RED);

        <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-key=
word">final</span> Color color;

        FloorElementType(Color color) {
            <span class=3D"hljs-built_in">this</span>.color =3D color;
        }

        <span class=3D"hljs-keyword">public</span> Color <span class=3D"hlj=
s-title function_">getColor</span><span class=3D"hljs-params">()</span> {
            <span class=3D"hljs-keyword">return</span> color;
        }
    }

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-title fu=
nction_">App</span><span class=3D"hljs-params">()</span> {
        <span class=3D"hljs-built_in">super</span>(<span class=3D"hljs-stri=
ng">"Floor Plan Designer"</span>);
        initUI();
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">initUI</span><span class=
=3D"hljs-params">()</span> {
        canvas =3D <span class=3D"hljs-keyword">new</span> <span class=3D"h=
ljs-title class_">BufferedImage</span>(<span class=3D"hljs-number">800</spa=
n>, <span class=3D"hljs-number">600</span>, BufferedImage.TYPE_INT_ARGB);
        clearCanvas();

        <span class=3D"hljs-type">JPanel</span> <span class=3D"hljs-variabl=
e">panel</span> <span class=3D"hljs-operator">=3D</span> <span class=3D"hlj=
s-keyword">new</span> <span class=3D"hljs-title class_">JPanel</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">protected</span> <span class=3D"hl=
js-keyword">void</span> <span class=3D"hljs-title function_">paintComponent=
</span><span class=3D"hljs-params">(Graphics g)</span> {
                <span class=3D"hljs-built_in">super</span>.paintComponent(g=
);
                g.drawImage(canvas, <span class=3D"hljs-number">0</span>, <=
span class=3D"hljs-number">0</span>, <span class=3D"hljs-literal">null</spa=
n>);

                <span class=3D"hljs-comment">// Draw grid lines</span>
                g.setColor(Color.LIGHT_GRAY);
                <span class=3D"hljs-keyword">for</span> (<span class=3D"hlj=
s-type">int</span> <span class=3D"hljs-variable">x</span> <span class=3D"hl=
js-operator">=3D</span> <span class=3D"hljs-number">0</span>; x &lt; canvas=
.getWidth(); x +=3D gridSize) {
                    g.drawLine(x, <span class=3D"hljs-number">0</span>, x, =
canvas.getHeight());
                }
                <span class=3D"hljs-keyword">for</span> (<span class=3D"hlj=
s-type">int</span> <span class=3D"hljs-variable">y</span> <span class=3D"hl=
js-operator">=3D</span> <span class=3D"hljs-number">0</span>; y &lt; canvas=
.getHeight(); y +=3D gridSize) {
                    g.drawLine(<span class=3D"hljs-number">0</span>, y, can=
vas.getWidth(), y);
                }
            }
        };

        panel.setPreferredSize(<span class=3D"hljs-keyword">new</span> <spa=
n class=3D"hljs-title class_">Dimension</span>(<span class=3D"hljs-number">=
800</span>, <span class=3D"hljs-number">600</span>));
        panel.addMouseListener(<span class=3D"hljs-keyword">new</span> <spa=
n class=3D"hljs-title class_">MouseAdapter</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">mousePressed</spa=
n><span class=3D"hljs-params">(MouseEvent e)</span> {
                startPoint =3D getNearestGridPoint(e.getPoint());
                endPoint =3D startPoint;
            }

            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">mouseReleased</sp=
an><span class=3D"hljs-params">(MouseEvent e)</span> {
                endPoint =3D getNearestGridPoint(e.getPoint());
                drawElement(startPoint, endPoint);
            }
        });

        panel.addMouseMotionListener(<span class=3D"hljs-keyword">new</span=
> <span class=3D"hljs-title class_">MouseMotionAdapter</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">mouseDragged</spa=
n><span class=3D"hljs-params">(MouseEvent e)</span> {
                endPoint =3D getNearestGridPoint(e.getPoint());
                drawElement(startPoint, endPoint);
            }
        });

        add(panel);
        setupMenuBar();
        pack();
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(<span class=3D"hljs-literal">null</span>);
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">drawElement</span><span =
class=3D"hljs-params">(Point start, Point end)</span> {
        <span class=3D"hljs-keyword">if</span> (isInCanvasBounds(start) &am=
p;&amp; isInCanvasBounds(end)) {
            <span class=3D"hljs-type">Graphics2D</span> <span class=3D"hljs=
-variable">g2d</span> <span class=3D"hljs-operator">=3D</span> canvas.creat=
eGraphics();
            g2d.setColor(currentElementType.getColor());
            g2d.setStroke(<span class=3D"hljs-keyword">new</span> <span cla=
ss=3D"hljs-title class_">BasicStroke</span>(<span class=3D"hljs-number">2</=
span>));
            g2d.drawLine(start.x, start.y, end.x, end.y);
            g2d.dispose();
            repaint();
        }
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-type">b=
oolean</span> <span class=3D"hljs-title function_">isInCanvasBounds</span><=
span class=3D"hljs-params">(Point point)</span> {
        <span class=3D"hljs-keyword">return</span> point.x &gt;=3D <span cl=
ass=3D"hljs-number">0</span> &amp;&amp; point.x &lt; canvas.getWidth() &amp=
;&amp;
               point.y &gt;=3D <span class=3D"hljs-number">0</span> &amp;&a=
mp; point.y &lt; canvas.getHeight();
    }

    <span class=3D"hljs-keyword">private</span> Point <span class=3D"hljs-t=
itle function_">getNearestGridPoint</span><span class=3D"hljs-params">(Poin=
t point)</span> {
        <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">=
x</span> <span class=3D"hljs-operator">=3D</span> Math.round((<span class=
=3D"hljs-type">float</span>) point.x / gridSize) * gridSize;
        <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">=
y</span> <span class=3D"hljs-operator">=3D</span> Math.round((<span class=
=3D"hljs-type">float</span>) point.y / gridSize) * gridSize;
        <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-keyw=
ord">new</span> <span class=3D"hljs-title class_">Point</span>(x, y);
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">clearCanvas</span><span =
class=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">Graphics2D</span> <span class=3D"hljs-var=
iable">g2d</span> <span class=3D"hljs-operator">=3D</span> canvas.createGra=
phics();
        g2d.setComposite(AlphaComposite.Clear);
        g2d.fillRect(<span class=3D"hljs-number">0</span>, <span class=3D"h=
ljs-number">0</span>, canvas.getWidth(), canvas.getHeight());
        g2d.setComposite(AlphaComposite.SrcOver);
        g2d.dispose();
        repaint();
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">saveImage</span><span cl=
ass=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">JFileChooser</span> <span class=3D"hljs-v=
ariable">fileChooser</span> <span class=3D"hljs-operator">=3D</span> <span =
class=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JFileCh=
ooser</span>();
        fileChooser.setDialogTitle(<span class=3D"hljs-string">"Save Image"=
</span>);
        <span class=3D"hljs-keyword">if</span> (fileChooser.showSaveDialog(=
<span class=3D"hljs-built_in">this</span>) =3D=3D JFileChooser.APPROVE_OPTI=
ON) {
            <span class=3D"hljs-type">File</span> <span class=3D"hljs-varia=
ble">file</span> <span class=3D"hljs-operator">=3D</span> fileChooser.getSe=
lectedFile();
            <span class=3D"hljs-keyword">try</span> {
                ImageIO.write(canvas, <span class=3D"hljs-string">"PNG"</sp=
an>, file);
            } <span class=3D"hljs-keyword">catch</span> (IOException ex) {
                ex.printStackTrace();
            }
        }
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">setupMenuBar</span><span=
 class=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">JMenuBar</span> <span class=3D"hljs-varia=
ble">menuBar</span> <span class=3D"hljs-operator">=3D</span> <span class=3D=
"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuBar</span>=
();

        <span class=3D"hljs-type">JMenu</span> <span class=3D"hljs-variable=
">fileMenu</span> <span class=3D"hljs-operator">=3D</span> <span class=3D"h=
ljs-keyword">new</span> <span class=3D"hljs-title class_">JMenu</span>(<spa=
n class=3D"hljs-string">"File"</span>);
        <span class=3D"hljs-type">JMenuItem</span> <span class=3D"hljs-vari=
able">saveItem</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuItem</s=
pan>(<span class=3D"hljs-string">"Save"</span>);
        saveItem.addActionListener(e -&gt; saveImage());
        fileMenu.add(saveItem);

        <span class=3D"hljs-type">JMenuItem</span> <span class=3D"hljs-vari=
able">exitItem</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuItem</s=
pan>(<span class=3D"hljs-string">"Exit"</span>);
        exitItem.addActionListener(e -&gt; System.exit(<span class=3D"hljs-=
number">0</span>));
        fileMenu.add(exitItem);

        <span class=3D"hljs-type">JMenu</span> <span class=3D"hljs-variable=
">elementMenu</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenu</span>=
(<span class=3D"hljs-string">"Element"</span>);
        <span class=3D"hljs-type">ButtonGroup</span> <span class=3D"hljs-va=
riable">group</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">ButtonGroup<=
/span>();
        <span class=3D"hljs-keyword">for</span> (FloorElementType type : Fl=
oorElementType.values()) {
            <span class=3D"hljs-type">JRadioButtonMenuItem</span> <span cla=
ss=3D"hljs-variable">item</span> <span class=3D"hljs-operator">=3D</span> <=
span class=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JR=
adioButtonMenuItem</span>(type.name());
            item.addActionListener(e -&gt; currentElementType =3D type);
            group.add(item);
            elementMenu.add(item);
        }

        menuBar.add(fileMenu);
        menuBar.add(elementMenu);
        setJMenuBar(menuBar);
    }

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword"=
>static</span> <span class=3D"hljs-keyword">void</span> <span class=3D"hljs=
-title function_">main</span><span class=3D"hljs-params">(String[] args)</s=
pan> {
        SwingUtilities.invokeLater(() -&gt; <span class=3D"hljs-keyword">ne=
w</span> <span class=3D"hljs-title class_">App</span>().setVisible(<span cl=
ass=3D"hljs-literal">true</span>));
    }
}
</code></div></div></pre><p>In this version, the <code>mousePressed</code>,=
 <code>mouseReleased</code>, and <code>mouseDragged</code> methods have bee=
n adjusted to ensure that the start and end points of the lines are always =
aligned with the grid lines. Additionally, the <code>drawElement</code> met=
hod now checks if the start and end points are within the canvas bounds bef=
ore drawing the line, preventing drawing in blank spaces outside the canvas=
.</p></div></div></div></div></div></div></div></div><div class=3D"w-full t=
ext-token-text-primary" data-testid=3D"conversation-turn-12" style=3D"--ava=
tar-color: #19c37d;"><div class=3D"px-4 py-2 justify-center text-base md:ga=
p-6 m-auto"><div class=3D"flex flex-1 text-base mx-auto gap-3 md:max-w-3xl =
lg:max-w-[40rem] xl:max-w-[48rem] group"><div class=3D"flex-shrink-0 flex f=
lex-col relative items-end"><div><div class=3D"pt-0.5"><div class=3D"gizmo-=
shadow-stroke flex h-6 w-6 items-center justify-center overflow-hidden roun=
ded-full"><div class=3D"relative p-1 rounded-sm h-9 w-9 text-white flex ite=
ms-center justify-center" style=3D"background-color: rgb(121, 137, 255); wi=
dth: 24px; height: 24px;"><svg stroke=3D"currentColor" fill=3D"none" stroke=
-width=3D"2" viewBox=3D"0 0 24 24" stroke-linecap=3D"round" stroke-linejoin=
=3D"round" class=3D"icon-sm" height=3D"1em" width=3D"1em" xmlns=3D"http://w=
ww.w3.org/2000/svg"><path d=3D"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"><=
/path><circle cx=3D"12" cy=3D"7" r=3D"4"></circle></svg></div></div></div><=
/div></div><div class=3D"relative flex w-full flex-col"><div class=3D"font-=
semibold select-none">Anonymous</div><div class=3D"flex-col gap-1 md:gap-3"=
><div class=3D"flex flex-grow flex-col max-w-full"><div data-message-author=
-role=3D"user" data-message-id=3D"aaa26165-9360-4f91-98a5-7d7827f66d12" cla=
ss=3D"min-h-[20px] text-message flex flex-col items-start gap-3 whitespace-=
pre-wrap break-words [.text-message+&amp;]:mt-5 overflow-x-auto"><div class=
=3D"">There is an issue where they can draw diagonal lines (since this logi=
c seems to be that you can draw lines between grid intersection points. Alt=
hough this is correct, it should not let users draw diagonal lines)</div></=
div></div></div></div></div></div></div><div class=3D"w-full text-token-tex=
t-primary" data-testid=3D"conversation-turn-13" style=3D"--avatar-color: #1=
9c37d;"><div class=3D"px-4 py-2 justify-center text-base md:gap-6 m-auto"><=
div class=3D"flex flex-1 text-base mx-auto gap-3 md:max-w-3xl lg:max-w-[40r=
em] xl:max-w-[48rem] group"><div class=3D"flex-shrink-0 flex flex-col relat=
ive items-end"><div><div class=3D"pt-0.5"><div class=3D"gizmo-shadow-stroke=
 flex h-6 w-6 items-center justify-center overflow-hidden rounded-full"><di=
v class=3D"relative p-1 rounded-sm h-9 w-9 text-white flex items-center jus=
tify-center" style=3D"background-color: rgb(25, 195, 125); width: 24px; hei=
ght: 24px;"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=3D"n=
one" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-sm" role=3D"img"><t=
ext x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C37.98=
08 15.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.91076 =
36.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.6294=
1 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.=
36341C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044 1=
4.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.478=
15C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11=
.0782 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0.9=
44492 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.9026=
 2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 34=
.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.978=
9 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144 2=
1.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38.5=
772C30.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.8167=
 32.6547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.84=
58 26.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.4544 =
37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 36=
.1501C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.1003=
 31.3019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 26.=
5549 30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.9656=
 21.0359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32.3=
75 29.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.4978 =
37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C5.=
55718 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.840=
8 14.1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.72=
48L24.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556C2=
4.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34.7=
416 12.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.39227=
 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327C8=
.19885 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.253=
34 20.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.9404L=
18.5723 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28.5=
173C15.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.32135 =
22.8601 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4.2=
9707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.487=
2 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111 1=
2.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.31=
94 21.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432 3=
5.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30.5=
947 32.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.7328 =
32.4332 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.01=
28C35.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 10=
.1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.79=
63 10.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.0837 =
11.9405C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C25.=
4053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.7807=
7 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826 1=
2.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.=
8576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.925=
4 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696C1=
2.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.99=
464 19.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.0427 =
4.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14.5=
366 9.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.7175=
L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L20=
.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentColor"></path></svg><=
/div></div></div></div></div><div class=3D"relative flex w-full flex-col ag=
ent-turn"><div class=3D"font-semibold select-none">ChatGPT</div><div class=
=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-fu=
ll"><div data-message-author-role=3D"assistant" data-message-id=3D"6b912eff=
-79c8-4156-9433-2eadc27a00d7" class=3D"min-h-[20px] text-message flex flex-=
col items-start gap-3 whitespace-pre-wrap break-words [.text-message+&amp;]=
:mt-5 overflow-x-auto"><div class=3D"markdown prose w-full break-words dark=
:prose-invert dark"><p>To prevent users from drawing diagonal lines, we nee=
d to adjust the logic so that the start and end points are aligned either h=
orizontally or vertically with the grid lines. We can achieve this by calcu=
lating the distance between the start and end points along the x and y axes=
 and ensuring that only one of them changes while the other remains constan=
t. Here's the modified code:</p><pre><div class=3D"dark bg-gray-950 rounded=
-md"><div class=3D"flex items-center relative text-token-text-secondary bg-=
token-main-surface-secondary px-4 py-2 text-xs font-sans justify-between ro=
unded-t-md"><span>java</span><span class=3D"" data-state=3D"closed"><button=
 class=3D"flex gap-1 items-center"><svg width=3D"24" height=3D"24" viewBox=
=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"=
icon-sm"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M12 4C10.89=
54 4 10 4.89543 10 6H14C14 4.89543 13.1046 4 12 4ZM8.53513 4C9.22675 2.8044=
 10.5194 2 12 2C13.4806 2 14.7733 2.8044 15.4649 4H17C18.6569 4 20 5.34315 =
20 7V19C20 20.6569 18.6569 22 17 22H7C5.34315 22 4 20.6569 4 19V7C4 5.34315=
 5.34315 4 7 4H8.53513ZM8 6H7C6.44772 6 6 6.44772 6 7V19C6 19.5523 6.44772 =
20 7 20H17C17.5523 20 18 19.5523 18 19V7C18 6.44772 17.5523 6 17 6H16C16 7.=
10457 15.1046 8 14 8H10C8.89543 8 8 7.10457 8 6Z" fill=3D"currentColor"></p=
ath></svg>Copy code</button></span></div><div class=3D"p-4 overflow-y-auto"=
><code class=3D"!whitespace-pre hljs language-java"><span class=3D"hljs-key=
word">import</span> javax.imageio.ImageIO;
<span class=3D"hljs-keyword">import</span> javax.swing.*;
<span class=3D"hljs-keyword">import</span> java.awt.*;
<span class=3D"hljs-keyword">import</span> java.awt.event.*;
<span class=3D"hljs-keyword">import</span> java.awt.image.BufferedImage;
<span class=3D"hljs-keyword">import</span> java.io.File;
<span class=3D"hljs-keyword">import</span> java.io.IOException;

<span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword">cla=
ss</span> <span class=3D"hljs-title class_">App</span> <span class=3D"hljs-=
keyword">extends</span> <span class=3D"hljs-title class_">JFrame</span> {

    <span class=3D"hljs-keyword">private</span> BufferedImage canvas;
    <span class=3D"hljs-keyword">private</span> Point startPoint;
    <span class=3D"hljs-keyword">private</span> Point endPoint;
    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-type">i=
nt</span> <span class=3D"hljs-variable">gridSize</span> <span class=3D"hljs=
-operator">=3D</span> <span class=3D"hljs-number">20</span>; <span class=3D=
"hljs-comment">// Size of grid cells</span>
    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-type">F=
loorElementType</span> <span class=3D"hljs-variable">currentElementType</sp=
an> <span class=3D"hljs-operator">=3D</span> FloorElementType.WALL; <span c=
lass=3D"hljs-comment">// Default to drawing walls</span>

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword"=
>enum</span> <span class=3D"hljs-title class_">FloorElementType</span> {
        WALL(Color.BLACK),
        WINDOW(Color.BLUE),
        DOOR(Color.RED);

        <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-key=
word">final</span> Color color;

        FloorElementType(Color color) {
            <span class=3D"hljs-built_in">this</span>.color =3D color;
        }

        <span class=3D"hljs-keyword">public</span> Color <span class=3D"hlj=
s-title function_">getColor</span><span class=3D"hljs-params">()</span> {
            <span class=3D"hljs-keyword">return</span> color;
        }
    }

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-title fu=
nction_">App</span><span class=3D"hljs-params">()</span> {
        <span class=3D"hljs-built_in">super</span>(<span class=3D"hljs-stri=
ng">"Floor Plan Designer"</span>);
        initUI();
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">initUI</span><span class=
=3D"hljs-params">()</span> {
        canvas =3D <span class=3D"hljs-keyword">new</span> <span class=3D"h=
ljs-title class_">BufferedImage</span>(<span class=3D"hljs-number">800</spa=
n>, <span class=3D"hljs-number">600</span>, BufferedImage.TYPE_INT_ARGB);
        clearCanvas();

        <span class=3D"hljs-type">JPanel</span> <span class=3D"hljs-variabl=
e">panel</span> <span class=3D"hljs-operator">=3D</span> <span class=3D"hlj=
s-keyword">new</span> <span class=3D"hljs-title class_">JPanel</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">protected</span> <span class=3D"hl=
js-keyword">void</span> <span class=3D"hljs-title function_">paintComponent=
</span><span class=3D"hljs-params">(Graphics g)</span> {
                <span class=3D"hljs-built_in">super</span>.paintComponent(g=
);
                g.drawImage(canvas, <span class=3D"hljs-number">0</span>, <=
span class=3D"hljs-number">0</span>, <span class=3D"hljs-literal">null</spa=
n>);

                <span class=3D"hljs-comment">// Draw grid lines</span>
                g.setColor(Color.LIGHT_GRAY);
                <span class=3D"hljs-keyword">for</span> (<span class=3D"hlj=
s-type">int</span> <span class=3D"hljs-variable">x</span> <span class=3D"hl=
js-operator">=3D</span> <span class=3D"hljs-number">0</span>; x &lt; canvas=
.getWidth(); x +=3D gridSize) {
                    g.drawLine(x, <span class=3D"hljs-number">0</span>, x, =
canvas.getHeight());
                }
                <span class=3D"hljs-keyword">for</span> (<span class=3D"hlj=
s-type">int</span> <span class=3D"hljs-variable">y</span> <span class=3D"hl=
js-operator">=3D</span> <span class=3D"hljs-number">0</span>; y &lt; canvas=
.getHeight(); y +=3D gridSize) {
                    g.drawLine(<span class=3D"hljs-number">0</span>, y, can=
vas.getWidth(), y);
                }
            }
        };

        panel.setPreferredSize(<span class=3D"hljs-keyword">new</span> <spa=
n class=3D"hljs-title class_">Dimension</span>(<span class=3D"hljs-number">=
800</span>, <span class=3D"hljs-number">600</span>));
        panel.addMouseListener(<span class=3D"hljs-keyword">new</span> <spa=
n class=3D"hljs-title class_">MouseAdapter</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">mousePressed</spa=
n><span class=3D"hljs-params">(MouseEvent e)</span> {
                startPoint =3D getNearestGridPoint(e.getPoint());
                endPoint =3D startPoint;
            }

            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">mouseReleased</sp=
an><span class=3D"hljs-params">(MouseEvent e)</span> {
                endPoint =3D getNearestGridPoint(e.getPoint());
                drawElement(startPoint, endPoint);
            }
        });

        panel.addMouseMotionListener(<span class=3D"hljs-keyword">new</span=
> <span class=3D"hljs-title class_">MouseMotionAdapter</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">mouseDragged</spa=
n><span class=3D"hljs-params">(MouseEvent e)</span> {
                <span class=3D"hljs-type">Point</span> <span class=3D"hljs-=
variable">currentPoint</span> <span class=3D"hljs-operator">=3D</span> getN=
earestGridPoint(e.getPoint());
                <span class=3D"hljs-keyword">if</span> (currentPoint.x =3D=
=3D startPoint.x || currentPoint.y =3D=3D startPoint.y) {
                    endPoint =3D currentPoint;
                    drawElement(startPoint, endPoint);
                }
            }
        });

        add(panel);
        setupMenuBar();
        pack();
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(<span class=3D"hljs-literal">null</span>);
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">drawElement</span><span =
class=3D"hljs-params">(Point start, Point end)</span> {
        <span class=3D"hljs-keyword">if</span> (isInCanvasBounds(start) &am=
p;&amp; isInCanvasBounds(end)) {
            <span class=3D"hljs-type">Graphics2D</span> <span class=3D"hljs=
-variable">g2d</span> <span class=3D"hljs-operator">=3D</span> canvas.creat=
eGraphics();
            g2d.setColor(currentElementType.getColor());
            g2d.setStroke(<span class=3D"hljs-keyword">new</span> <span cla=
ss=3D"hljs-title class_">BasicStroke</span>(<span class=3D"hljs-number">2</=
span>));
            g2d.drawLine(start.x, start.y, end.x, end.y);
            g2d.dispose();
            repaint();
        }
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-type">b=
oolean</span> <span class=3D"hljs-title function_">isInCanvasBounds</span><=
span class=3D"hljs-params">(Point point)</span> {
        <span class=3D"hljs-keyword">return</span> point.x &gt;=3D <span cl=
ass=3D"hljs-number">0</span> &amp;&amp; point.x &lt; canvas.getWidth() &amp=
;&amp;
               point.y &gt;=3D <span class=3D"hljs-number">0</span> &amp;&a=
mp; point.y &lt; canvas.getHeight();
    }

    <span class=3D"hljs-keyword">private</span> Point <span class=3D"hljs-t=
itle function_">getNearestGridPoint</span><span class=3D"hljs-params">(Poin=
t point)</span> {
        <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">=
x</span> <span class=3D"hljs-operator">=3D</span> Math.round((<span class=
=3D"hljs-type">float</span>) point.x / gridSize) * gridSize;
        <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">=
y</span> <span class=3D"hljs-operator">=3D</span> Math.round((<span class=
=3D"hljs-type">float</span>) point.y / gridSize) * gridSize;
        <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-keyw=
ord">new</span> <span class=3D"hljs-title class_">Point</span>(x, y);
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">clearCanvas</span><span =
class=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">Graphics2D</span> <span class=3D"hljs-var=
iable">g2d</span> <span class=3D"hljs-operator">=3D</span> canvas.createGra=
phics();
        g2d.setComposite(AlphaComposite.Clear);
        g2d.fillRect(<span class=3D"hljs-number">0</span>, <span class=3D"h=
ljs-number">0</span>, canvas.getWidth(), canvas.getHeight());
        g2d.setComposite(AlphaComposite.SrcOver);
        g2d.dispose();
        repaint();
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">saveImage</span><span cl=
ass=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">JFileChooser</span> <span class=3D"hljs-v=
ariable">fileChooser</span> <span class=3D"hljs-operator">=3D</span> <span =
class=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JFileCh=
ooser</span>();
        fileChooser.setDialogTitle(<span class=3D"hljs-string">"Save Image"=
</span>);
        <span class=3D"hljs-keyword">if</span> (fileChooser.showSaveDialog(=
<span class=3D"hljs-built_in">this</span>) =3D=3D JFileChooser.APPROVE_OPTI=
ON) {
            <span class=3D"hljs-type">File</span> <span class=3D"hljs-varia=
ble">file</span> <span class=3D"hljs-operator">=3D</span> fileChooser.getSe=
lectedFile();
            <span class=3D"hljs-keyword">try</span> {
                ImageIO.write(canvas, <span class=3D"hljs-string">"PNG"</sp=
an>, file);
            } <span class=3D"hljs-keyword">catch</span> (IOException ex) {
                ex.printStackTrace();
            }
        }
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">setupMenuBar</span><span=
 class=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">JMenuBar</span> <span class=3D"hljs-varia=
ble">menuBar</span> <span class=3D"hljs-operator">=3D</span> <span class=3D=
"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuBar</span>=
();

        <span class=3D"hljs-type">JMenu</span> <span class=3D"hljs-variable=
">fileMenu</span> <span class=3D"hljs-operator">=3D</span> <span class=3D"h=
ljs-keyword">new</span> <span class=3D"hljs-title class_">JMenu</span>(<spa=
n class=3D"hljs-string">"File"</span>);
        <span class=3D"hljs-type">JMenuItem</span> <span class=3D"hljs-vari=
able">saveItem</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuItem</s=
pan>(<span class=3D"hljs-string">"Save"</span>);
        saveItem.addActionListener(e -&gt; saveImage());
        fileMenu.add(saveItem);

        <span class=3D"hljs-type">JMenuItem</span> <span class=3D"hljs-vari=
able">exitItem</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuItem</s=
pan>(<span class=3D"hljs-string">"Exit"</span>);
        exitItem.addActionListener(e -&gt; System.exit(<span class=3D"hljs-=
number">0</span>));
        fileMenu.add(exitItem);

        <span class=3D"hljs-type">JMenu</span> <span class=3D"hljs-variable=
">elementMenu</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenu</span>=
(<span class=3D"hljs-string">"Element"</span>);
        <span class=3D"hljs-type">ButtonGroup</span> <span class=3D"hljs-va=
riable">group</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">ButtonGroup<=
/span>();
        <span class=3D"hljs-keyword">for</span> (FloorElementType type : Fl=
oorElementType.values()) {
            <span class=3D"hljs-type">JRadioButtonMenuItem</span> <span cla=
ss=3D"hljs-variable">item</span> <span class=3D"hljs-operator">=3D</span> <=
span class=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JR=
adioButtonMenuItem</span>(type.name());
            item.addActionListener(e -&gt; currentElementType =3D type);
            group.add(item);
            elementMenu.add(item);
        }

        menuBar.add(fileMenu);
        menuBar.add(elementMenu);
        setJMenuBar(menuBar);
    }

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword"=
>static</span> <span class=3D"hljs-keyword">void</span> <span class=3D"hljs=
-title function_">main</span><span class=3D"hljs-params">(String[] args)</s=
pan> {
        SwingUtilities.invokeLater(() -&gt; <span class=3D"hljs-keyword">ne=
w</span> <span class=3D"hljs-title class_">App</span>().setVisible(<span cl=
ass=3D"hljs-literal">true</span>));
    }
}
</code></div></div></pre><p>In this version, the <code>mouseDragged</code> =
method ensures that only one of the coordinates (x or y) changes while drag=
ging the mouse, preventing diagonal lines from being drawn. If the current =
point aligns with either the start point along the x-axis or the y-axis, th=
e line is drawn. Otherwise, no action is taken.</p></div></div></div></div>=
</div></div></div></div><div class=3D"w-full text-token-text-primary" data-=
testid=3D"conversation-turn-14" style=3D"--avatar-color: #19c37d;"><div cla=
ss=3D"px-4 py-2 justify-center text-base md:gap-6 m-auto"><div class=3D"fle=
x flex-1 text-base mx-auto gap-3 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48=
rem] group"><div class=3D"flex-shrink-0 flex flex-col relative items-end"><=
div><div class=3D"pt-0.5"><div class=3D"gizmo-shadow-stroke flex h-6 w-6 it=
ems-center justify-center overflow-hidden rounded-full"><div class=3D"relat=
ive p-1 rounded-sm h-9 w-9 text-white flex items-center justify-center" sty=
le=3D"background-color: rgb(121, 137, 255); width: 24px; height: 24px;"><sv=
g stroke=3D"currentColor" fill=3D"none" stroke-width=3D"2" viewBox=3D"0 0 2=
4 24" stroke-linecap=3D"round" stroke-linejoin=3D"round" class=3D"icon-sm" =
height=3D"1em" width=3D"1em" xmlns=3D"http://www.w3.org/2000/svg"><path d=
=3D"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path><circle cx=3D"12" cy=
=3D"7" r=3D"4"></circle></svg></div></div></div></div></div><div class=3D"r=
elative flex w-full flex-col"><div class=3D"font-semibold select-none">Anon=
ymous</div><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-g=
row flex-col max-w-full"><div data-message-author-role=3D"user" data-messag=
e-id=3D"aaa2fc83-550b-42be-b0fe-993c202a2648" class=3D"min-h-[20px] text-me=
ssage flex flex-col items-start gap-3 whitespace-pre-wrap break-words [.tex=
t-message+&amp;]:mt-5 overflow-x-auto"><div class=3D"">It is a bit better. =
However, when I let go of my mouse click, you can still create a diagonal l=
ine</div></div></div></div></div></div></div></div><div class=3D"w-full tex=
t-token-text-primary" data-testid=3D"conversation-turn-15" style=3D"--avata=
r-color: #19c37d;"><div class=3D"px-4 py-2 justify-center text-base md:gap-=
6 m-auto"><div class=3D"flex flex-1 text-base mx-auto gap-3 md:max-w-3xl lg=
:max-w-[40rem] xl:max-w-[48rem] group"><div class=3D"flex-shrink-0 flex fle=
x-col relative items-end"><div><div class=3D"pt-0.5"><div class=3D"gizmo-sh=
adow-stroke flex h-6 w-6 items-center justify-center overflow-hidden rounde=
d-full"><div class=3D"relative p-1 rounded-sm h-9 w-9 text-white flex items=
-center justify-center" style=3D"background-color: rgb(25, 195, 125); width=
: 24px; height: 24px;"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41=
" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-sm" role=
=3D"img"><text x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16=
.8707C37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.39=
34 9.91076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.=
0864 3.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125=
 22.4257 1.36341C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708=
 0.495044 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8=
.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087=
 2.73073 11.0782 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 =
18.4228C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66=
413 26.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138=
C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.=
5973 14.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.670=
9 40.2144 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 2=
8.4418 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2=
332 34.8167 32.6547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 2=
8.684C39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.96=
39 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733=
 17.6994 36.1501C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4=
156C26.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 =
30.5124 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0=
198 29.9656 21.0359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C2=
9.9842 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.88=
06 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804=
 25.9832C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.=
8975 30.8408 14.1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15=
.0073 30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.719=
9 29.0556C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C1=
4.9096 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7=
263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.1988=
5 10.3327C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20=
.0378 8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.848=
63 20.9404L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 1=
5.1505 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.85=
57C5.32135 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 =
15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.=
6142 12.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.480=
1 25.7111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20=
.1613C37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.838=
2 27.0432 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C3=
2.6047 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.54=
74 20.7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35=
.3055 15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.271=
2C26.906 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10=
.1554 25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.95=
85 16.0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 =
7.25025C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.=
0364 6.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.853=
1C35.3826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 =
19.9981C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.=
8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.981=
9 6.58696C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 1=
7.8524 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.850=
67C23.0427 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9=
.69878 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2=
479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975=
V22.9985L20.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentColor"></p=
ath></svg></div></div></div></div></div><div class=3D"relative flex w-full =
flex-col agent-turn"><div class=3D"font-semibold select-none">ChatGPT</div>=
<div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-co=
l max-w-full"><div data-message-author-role=3D"assistant" data-message-id=
=3D"24ec4890-b379-45be-97e2-22b47cb456a9" class=3D"min-h-[20px] text-messag=
e flex flex-col items-start gap-3 whitespace-pre-wrap break-words [.text-me=
ssage+&amp;]:mt-5 overflow-x-auto"><div class=3D"markdown prose w-full brea=
k-words dark:prose-invert dark"><p>To completely prevent diagonal lines, we=
 need to ensure that the line drawn after releasing the mouse click aligns =
with either the x-axis or the y-axis. We can modify the logic in the <code>=
mouseReleased</code> method to achieve this. Here's the updated code:</p><p=
re><div class=3D"dark bg-gray-950 rounded-md"><div class=3D"flex items-cent=
er relative text-token-text-secondary bg-token-main-surface-secondary px-4 =
py-2 text-xs font-sans justify-between rounded-t-md"><span>java</span><span=
 class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-center"=
><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=
=3D"http://www.w3.org/2000/svg" class=3D"icon-sm"><path fill-rule=3D"evenod=
d" clip-rule=3D"evenodd" d=3D"M12 4C10.8954 4 10 4.89543 10 6H14C14 4.89543=
 13.1046 4 12 4ZM8.53513 4C9.22675 2.8044 10.5194 2 12 2C13.4806 2 14.7733 =
2.8044 15.4649 4H17C18.6569 4 20 5.34315 20 7V19C20 20.6569 18.6569 22 17 2=
2H7C5.34315 22 4 20.6569 4 19V7C4 5.34315 5.34315 4 7 4H8.53513ZM8 6H7C6.44=
772 6 6 6.44772 6 7V19C6 19.5523 6.44772 20 7 20H17C17.5523 20 18 19.5523 1=
8 19V7C18 6.44772 17.5523 6 17 6H16C16 7.10457 15.1046 8 14 8H10C8.89543 8 =
8 7.10457 8 6Z" fill=3D"currentColor"></path></svg>Copy code</button></span=
></div><div class=3D"p-4 overflow-y-auto"><code class=3D"!whitespace-pre hl=
js language-java"><span class=3D"hljs-keyword">import</span> javax.imageio.=
ImageIO;
<span class=3D"hljs-keyword">import</span> javax.swing.*;
<span class=3D"hljs-keyword">import</span> java.awt.*;
<span class=3D"hljs-keyword">import</span> java.awt.event.*;
<span class=3D"hljs-keyword">import</span> java.awt.image.BufferedImage;
<span class=3D"hljs-keyword">import</span> java.io.File;
<span class=3D"hljs-keyword">import</span> java.io.IOException;

<span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword">cla=
ss</span> <span class=3D"hljs-title class_">App</span> <span class=3D"hljs-=
keyword">extends</span> <span class=3D"hljs-title class_">JFrame</span> {

    <span class=3D"hljs-keyword">private</span> BufferedImage canvas;
    <span class=3D"hljs-keyword">private</span> Point startPoint;
    <span class=3D"hljs-keyword">private</span> Point endPoint;
    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-type">i=
nt</span> <span class=3D"hljs-variable">gridSize</span> <span class=3D"hljs=
-operator">=3D</span> <span class=3D"hljs-number">20</span>; <span class=3D=
"hljs-comment">// Size of grid cells</span>
    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-type">F=
loorElementType</span> <span class=3D"hljs-variable">currentElementType</sp=
an> <span class=3D"hljs-operator">=3D</span> FloorElementType.WALL; <span c=
lass=3D"hljs-comment">// Default to drawing walls</span>

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword"=
>enum</span> <span class=3D"hljs-title class_">FloorElementType</span> {
        WALL(Color.BLACK),
        WINDOW(Color.BLUE),
        DOOR(Color.RED);

        <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-key=
word">final</span> Color color;

        FloorElementType(Color color) {
            <span class=3D"hljs-built_in">this</span>.color =3D color;
        }

        <span class=3D"hljs-keyword">public</span> Color <span class=3D"hlj=
s-title function_">getColor</span><span class=3D"hljs-params">()</span> {
            <span class=3D"hljs-keyword">return</span> color;
        }
    }

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-title fu=
nction_">App</span><span class=3D"hljs-params">()</span> {
        <span class=3D"hljs-built_in">super</span>(<span class=3D"hljs-stri=
ng">"Floor Plan Designer"</span>);
        initUI();
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">initUI</span><span class=
=3D"hljs-params">()</span> {
        canvas =3D <span class=3D"hljs-keyword">new</span> <span class=3D"h=
ljs-title class_">BufferedImage</span>(<span class=3D"hljs-number">800</spa=
n>, <span class=3D"hljs-number">600</span>, BufferedImage.TYPE_INT_ARGB);
        clearCanvas();

        <span class=3D"hljs-type">JPanel</span> <span class=3D"hljs-variabl=
e">panel</span> <span class=3D"hljs-operator">=3D</span> <span class=3D"hlj=
s-keyword">new</span> <span class=3D"hljs-title class_">JPanel</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">protected</span> <span class=3D"hl=
js-keyword">void</span> <span class=3D"hljs-title function_">paintComponent=
</span><span class=3D"hljs-params">(Graphics g)</span> {
                <span class=3D"hljs-built_in">super</span>.paintComponent(g=
);
                g.drawImage(canvas, <span class=3D"hljs-number">0</span>, <=
span class=3D"hljs-number">0</span>, <span class=3D"hljs-literal">null</spa=
n>);

                <span class=3D"hljs-comment">// Draw grid lines</span>
                g.setColor(Color.LIGHT_GRAY);
                <span class=3D"hljs-keyword">for</span> (<span class=3D"hlj=
s-type">int</span> <span class=3D"hljs-variable">x</span> <span class=3D"hl=
js-operator">=3D</span> <span class=3D"hljs-number">0</span>; x &lt; canvas=
.getWidth(); x +=3D gridSize) {
                    g.drawLine(x, <span class=3D"hljs-number">0</span>, x, =
canvas.getHeight());
                }
                <span class=3D"hljs-keyword">for</span> (<span class=3D"hlj=
s-type">int</span> <span class=3D"hljs-variable">y</span> <span class=3D"hl=
js-operator">=3D</span> <span class=3D"hljs-number">0</span>; y &lt; canvas=
.getHeight(); y +=3D gridSize) {
                    g.drawLine(<span class=3D"hljs-number">0</span>, y, can=
vas.getWidth(), y);
                }
            }
        };

        panel.setPreferredSize(<span class=3D"hljs-keyword">new</span> <spa=
n class=3D"hljs-title class_">Dimension</span>(<span class=3D"hljs-number">=
800</span>, <span class=3D"hljs-number">600</span>));
        panel.addMouseListener(<span class=3D"hljs-keyword">new</span> <spa=
n class=3D"hljs-title class_">MouseAdapter</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">mousePressed</spa=
n><span class=3D"hljs-params">(MouseEvent e)</span> {
                startPoint =3D getNearestGridPoint(e.getPoint());
                endPoint =3D startPoint;
            }

            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">mouseReleased</sp=
an><span class=3D"hljs-params">(MouseEvent e)</span> {
                endPoint =3D getNearestGridPoint(e.getPoint());
                <span class=3D"hljs-keyword">if</span> (startPoint.x =3D=3D=
 endPoint.x || startPoint.y =3D=3D endPoint.y) {
                    drawElement(startPoint, endPoint);
                }
            }
        });

        panel.addMouseMotionListener(<span class=3D"hljs-keyword">new</span=
> <span class=3D"hljs-title class_">MouseMotionAdapter</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">mouseDragged</spa=
n><span class=3D"hljs-params">(MouseEvent e)</span> {
                <span class=3D"hljs-type">Point</span> <span class=3D"hljs-=
variable">currentPoint</span> <span class=3D"hljs-operator">=3D</span> getN=
earestGridPoint(e.getPoint());
                <span class=3D"hljs-keyword">if</span> (currentPoint.x =3D=
=3D startPoint.x || currentPoint.y =3D=3D startPoint.y) {
                    endPoint =3D currentPoint;
                    drawElement(startPoint, endPoint);
                }
            }
        });

        add(panel);
        setupMenuBar();
        pack();
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(<span class=3D"hljs-literal">null</span>);
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">drawElement</span><span =
class=3D"hljs-params">(Point start, Point end)</span> {
        <span class=3D"hljs-keyword">if</span> (isInCanvasBounds(start) &am=
p;&amp; isInCanvasBounds(end)) {
            <span class=3D"hljs-type">Graphics2D</span> <span class=3D"hljs=
-variable">g2d</span> <span class=3D"hljs-operator">=3D</span> canvas.creat=
eGraphics();
            g2d.setColor(currentElementType.getColor());
            g2d.setStroke(<span class=3D"hljs-keyword">new</span> <span cla=
ss=3D"hljs-title class_">BasicStroke</span>(<span class=3D"hljs-number">2</=
span>));
            g2d.drawLine(start.x, start.y, end.x, end.y);
            g2d.dispose();
            repaint();
        }
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-type">b=
oolean</span> <span class=3D"hljs-title function_">isInCanvasBounds</span><=
span class=3D"hljs-params">(Point point)</span> {
        <span class=3D"hljs-keyword">return</span> point.x &gt;=3D <span cl=
ass=3D"hljs-number">0</span> &amp;&amp; point.x &lt; canvas.getWidth() &amp=
;&amp;
               point.y &gt;=3D <span class=3D"hljs-number">0</span> &amp;&a=
mp; point.y &lt; canvas.getHeight();
    }

    <span class=3D"hljs-keyword">private</span> Point <span class=3D"hljs-t=
itle function_">getNearestGridPoint</span><span class=3D"hljs-params">(Poin=
t point)</span> {
        <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">=
x</span> <span class=3D"hljs-operator">=3D</span> Math.round((<span class=
=3D"hljs-type">float</span>) point.x / gridSize) * gridSize;
        <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">=
y</span> <span class=3D"hljs-operator">=3D</span> Math.round((<span class=
=3D"hljs-type">float</span>) point.y / gridSize) * gridSize;
        <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-keyw=
ord">new</span> <span class=3D"hljs-title class_">Point</span>(x, y);
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">clearCanvas</span><span =
class=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">Graphics2D</span> <span class=3D"hljs-var=
iable">g2d</span> <span class=3D"hljs-operator">=3D</span> canvas.createGra=
phics();
        g2d.setComposite(AlphaComposite.Clear);
        g2d.fillRect(<span class=3D"hljs-number">0</span>, <span class=3D"h=
ljs-number">0</span>, canvas.getWidth(), canvas.getHeight());
        g2d.setComposite(AlphaComposite.SrcOver);
        g2d.dispose();
        repaint();
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">saveImage</span><span cl=
ass=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">JFileChooser</span> <span class=3D"hljs-v=
ariable">fileChooser</span> <span class=3D"hljs-operator">=3D</span> <span =
class=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JFileCh=
ooser</span>();
        fileChooser.setDialogTitle(<span class=3D"hljs-string">"Save Image"=
</span>);
        <span class=3D"hljs-keyword">if</span> (fileChooser.showSaveDialog(=
<span class=3D"hljs-built_in">this</span>) =3D=3D JFileChooser.APPROVE_OPTI=
ON) {
            <span class=3D"hljs-type">File</span> <span class=3D"hljs-varia=
ble">file</span> <span class=3D"hljs-operator">=3D</span> fileChooser.getSe=
lectedFile();
            <span class=3D"hljs-keyword">try</span> {
                ImageIO.write(canvas, <span class=3D"hljs-string">"PNG"</sp=
an>, file);
            } <span class=3D"hljs-keyword">catch</span> (IOException ex) {
                ex.printStackTrace();
            }
        }
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">setupMenuBar</span><span=
 class=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">JMenuBar</span> <span class=3D"hljs-varia=
ble">menuBar</span> <span class=3D"hljs-operator">=3D</span> <span class=3D=
"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuBar</span>=
();

        <span class=3D"hljs-type">JMenu</span> <span class=3D"hljs-variable=
">fileMenu</span> <span class=3D"hljs-operator">=3D</span> <span class=3D"h=
ljs-keyword">new</span> <span class=3D"hljs-title class_">JMenu</span>(<spa=
n class=3D"hljs-string">"File"</span>);
        <span class=3D"hljs-type">JMenuItem</span> <span class=3D"hljs-vari=
able">saveItem</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuItem</s=
pan>(<span class=3D"hljs-string">"Save"</span>);
        saveItem.addActionListener(e -&gt; saveImage());
        fileMenu.add(saveItem);

        <span class=3D"hljs-type">JMenuItem</span> <span class=3D"hljs-vari=
able">exitItem</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuItem</s=
pan>(<span class=3D"hljs-string">"Exit"</span>);
        exitItem.addActionListener(e -&gt; System.exit(<span class=3D"hljs-=
number">0</span>));
        fileMenu.add(exitItem);

        <span class=3D"hljs-type">JMenu</span> <span class=3D"hljs-variable=
">elementMenu</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenu</span>=
(<span class=3D"hljs-string">"Element"</span>);
        <span class=3D"hljs-type">ButtonGroup</span> <span class=3D"hljs-va=
riable">group</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">ButtonGroup<=
/span>();
        <span class=3D"hljs-keyword">for</span> (FloorElementType type : Fl=
oorElementType.values()) {
            <span class=3D"hljs-type">JRadioButtonMenuItem</span> <span cla=
ss=3D"hljs-variable">item</span> <span class=3D"hljs-operator">=3D</span> <=
span class=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JR=
adioButtonMenuItem</span>(type.name());
            item.addActionListener(e -&gt; currentElementType =3D type);
            group.add(item);
            elementMenu.add(item);
        }

        menuBar.add(fileMenu);
        menuBar.add(elementMenu);
        setJMenuBar(menuBar);
    }

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword"=
>static</span> <span class=3D"hljs-keyword">void</span> <span class=3D"hljs=
-title function_">main</span><span class=3D"hljs-params">(String[] args)</s=
pan> {
        SwingUtilities.invokeLater(() -&gt; <span class=3D"hljs-keyword">ne=
w</span> <span class=3D"hljs-title class_">App</span>().setVisible(<span cl=
ass=3D"hljs-literal">true</span>));
    }
}
</code></div></div></pre><p>In this version, I've updated the <code>mouseRe=
leased</code> method to ensure that only one of the coordinates (x or y) ch=
anges between the start and end points, effectively preventing diagonal lin=
es from being drawn. If both the x and y coordinates change, indicating a d=
iagonal line, no action is taken.</p></div></div></div></div></div></div></=
div></div><div class=3D"w-full text-token-text-primary" data-testid=3D"conv=
ersation-turn-16" style=3D"--avatar-color: #19c37d;"><div class=3D"px-4 py-=
2 justify-center text-base md:gap-6 m-auto"><div class=3D"flex flex-1 text-=
base mx-auto gap-3 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem] group"><d=
iv class=3D"flex-shrink-0 flex flex-col relative items-end"><div><div class=
=3D"pt-0.5"><div class=3D"gizmo-shadow-stroke flex h-6 w-6 items-center jus=
tify-center overflow-hidden rounded-full"><div class=3D"relative p-1 rounde=
d-sm h-9 w-9 text-white flex items-center justify-center" style=3D"backgrou=
nd-color: rgb(121, 137, 255); width: 24px; height: 24px;"><svg stroke=3D"cu=
rrentColor" fill=3D"none" stroke-width=3D"2" viewBox=3D"0 0 24 24" stroke-l=
inecap=3D"round" stroke-linejoin=3D"round" class=3D"icon-sm" height=3D"1em"=
 width=3D"1em" xmlns=3D"http://www.w3.org/2000/svg"><path d=3D"M20 21v-2a4 =
4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path><circle cx=3D"12" cy=3D"7" r=3D"4"></=
circle></svg></div></div></div></div></div><div class=3D"relative flex w-fu=
ll flex-col"><div class=3D"font-semibold select-none">Anonymous</div><div c=
lass=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-=
w-full"><div data-message-author-role=3D"user" data-message-id=3D"aaa2c600-=
ed6c-42f9-be41-ea8b1ebf5860" class=3D"min-h-[20px] text-message flex flex-c=
ol items-start gap-3 whitespace-pre-wrap break-words [.text-message+&amp;]:=
mt-5 overflow-x-auto"><div class=3D"">How can I make the application window=
 adjust to the user's monitor size, rather than using an initial size of 80=
0 x 600</div></div></div></div></div></div></div></div><div class=3D"w-full=
 text-token-text-primary" data-testid=3D"conversation-turn-17" style=3D"--a=
vatar-color: #19c37d;"><div class=3D"px-4 py-2 justify-center text-base md:=
gap-6 m-auto"><div class=3D"flex flex-1 text-base mx-auto gap-3 md:max-w-3x=
l lg:max-w-[40rem] xl:max-w-[48rem] group"><div class=3D"flex-shrink-0 flex=
 flex-col relative items-end"><div><div class=3D"pt-0.5"><div class=3D"gizm=
o-shadow-stroke flex h-6 w-6 items-center justify-center overflow-hidden ro=
unded-full"><div class=3D"relative p-1 rounded-sm h-9 w-9 text-white flex i=
tems-center justify-center" style=3D"background-color: rgb(25, 195, 125); w=
idth: 24px; height: 24px;"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 4=
1 41" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-sm" =
role=3D"img"><text x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.532=
4 16.8707C37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 3=
7.3934 9.91076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985=
C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.9=
4125 22.4257 1.36341C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C16.=
1708 0.495044 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.446=
66 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.=
0087 2.73073 11.0782 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.721=
698 18.4228C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 =
2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.=
3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907=
 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19=
.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.83=
21 28.4418 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 =
33.2332 34.8167 32.6547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.77=
52 28.684C39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 3=
8.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.=
2733 17.6994 36.1501C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 =
31.4156C26.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5=
563 30.5124 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 =
21.0198 29.9656 21.0359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.38=
89C29.9842 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 3=
7.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.4=
9804 25.9832C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248=
C13.8975 30.8408 14.1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.840=
8 15.0073 30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24=
.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.74=
97C14.9096 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 =
32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.=
19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.1935=
1 20.0378 8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8=
.84863 20.9404L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.51=
55 15.1505 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 2=
3.8557C5.32135 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30=
624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981=
C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12=
.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.660=
6 20.1613C37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36=
.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.66=
41C32.6047 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 3=
2.5474 20.7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556=
ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10=
.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.994=
8 10.1554 25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 1=
1.9585 16.0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1=
719 7.25025C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589=
 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10=
.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8=
752 19.9981C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441=
 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11=
.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.218=
69 17.8524 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4=
.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.70=
25 9.69878 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 =
14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.=
9975V22.9985L20.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentColor"=
></path></svg></div></div></div></div></div><div class=3D"relative flex w-f=
ull flex-col agent-turn"><div class=3D"font-semibold select-none">ChatGPT</=
div><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow fle=
x-col max-w-full"><div data-message-author-role=3D"assistant" data-message-=
id=3D"0f67e48d-264f-4e45-b988-ccc6b974b509" class=3D"min-h-[20px] text-mess=
age flex flex-col items-start gap-3 whitespace-pre-wrap break-words [.text-=
message+&amp;]:mt-5 overflow-x-auto"><div class=3D"markdown prose w-full br=
eak-words dark:prose-invert dark"><p>To make the application window adjust =
to the user's monitor size, you can set the size of the frame to be maximiz=
ed initially. Here's how you can modify the <code>initUI()</code> method to=
 achieve this:</p><pre><div class=3D"dark bg-gray-950 rounded-md"><div clas=
s=3D"flex items-center relative text-token-text-secondary bg-token-main-sur=
face-secondary px-4 py-2 text-xs font-sans justify-between rounded-t-md"><s=
pan>java</span><span class=3D"" data-state=3D"closed"><button class=3D"flex=
 gap-1 items-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" =
fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-sm"><path =
fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M12 4C10.8954 4 10 4.89543=
 10 6H14C14 4.89543 13.1046 4 12 4ZM8.53513 4C9.22675 2.8044 10.5194 2 12 2=
C13.4806 2 14.7733 2.8044 15.4649 4H17C18.6569 4 20 5.34315 20 7V19C20 20.6=
569 18.6569 22 17 22H7C5.34315 22 4 20.6569 4 19V7C4 5.34315 5.34315 4 7 4H=
8.53513ZM8 6H7C6.44772 6 6 6.44772 6 7V19C6 19.5523 6.44772 20 7 20H17C17.5=
523 20 18 19.5523 18 19V7C18 6.44772 17.5523 6 17 6H16C16 7.10457 15.1046 8=
 14 8H10C8.89543 8 8 7.10457 8 6Z" fill=3D"currentColor"></path></svg>Copy =
code</button></span></div><div class=3D"p-4 overflow-y-auto"><code class=3D=
"!whitespace-pre hljs language-java"><span class=3D"hljs-keyword">private</=
span> <span class=3D"hljs-keyword">void</span> <span class=3D"hljs-title fu=
nction_">initUI</span><span class=3D"hljs-params">()</span> {
    canvas =3D <span class=3D"hljs-keyword">new</span> <span class=3D"hljs-=
title class_">BufferedImage</span>(<span class=3D"hljs-number">800</span>, =
<span class=3D"hljs-number">600</span>, BufferedImage.TYPE_INT_ARGB);
    clearCanvas();

    <span class=3D"hljs-type">JPanel</span> <span class=3D"hljs-variable">p=
anel</span> <span class=3D"hljs-operator">=3D</span> <span class=3D"hljs-ke=
yword">new</span> <span class=3D"hljs-title class_">JPanel</span>() {
        <span class=3D"hljs-meta">@Override</span>
        <span class=3D"hljs-keyword">protected</span> <span class=3D"hljs-k=
eyword">void</span> <span class=3D"hljs-title function_">paintComponent</sp=
an><span class=3D"hljs-params">(Graphics g)</span> {
            <span class=3D"hljs-built_in">super</span>.paintComponent(g);
            g.drawImage(canvas, <span class=3D"hljs-number">0</span>, <span=
 class=3D"hljs-number">0</span>, <span class=3D"hljs-literal">null</span>);

            <span class=3D"hljs-comment">// Draw grid lines</span>
            g.setColor(Color.LIGHT_GRAY);
            <span class=3D"hljs-keyword">for</span> (<span class=3D"hljs-ty=
pe">int</span> <span class=3D"hljs-variable">x</span> <span class=3D"hljs-o=
perator">=3D</span> <span class=3D"hljs-number">0</span>; x &lt; canvas.get=
Width(); x +=3D gridSize) {
                g.drawLine(x, <span class=3D"hljs-number">0</span>, x, canv=
as.getHeight());
            }
            <span class=3D"hljs-keyword">for</span> (<span class=3D"hljs-ty=
pe">int</span> <span class=3D"hljs-variable">y</span> <span class=3D"hljs-o=
perator">=3D</span> <span class=3D"hljs-number">0</span>; y &lt; canvas.get=
Height(); y +=3D gridSize) {
                g.drawLine(<span class=3D"hljs-number">0</span>, y, canvas.=
getWidth(), y);
            }
        }
    };

    panel.setPreferredSize(<span class=3D"hljs-keyword">new</span> <span cl=
ass=3D"hljs-title class_">Dimension</span>(<span class=3D"hljs-number">800<=
/span>, <span class=3D"hljs-number">600</span>));
    panel.addMouseListener(<span class=3D"hljs-keyword">new</span> <span cl=
ass=3D"hljs-title class_">MouseAdapter</span>() {
        <span class=3D"hljs-meta">@Override</span>
        <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyw=
ord">void</span> <span class=3D"hljs-title function_">mousePressed</span><s=
pan class=3D"hljs-params">(MouseEvent e)</span> {
            startPoint =3D getNearestGridPoint(e.getPoint());
            endPoint =3D startPoint;
        }

        <span class=3D"hljs-meta">@Override</span>
        <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyw=
ord">void</span> <span class=3D"hljs-title function_">mouseReleased</span><=
span class=3D"hljs-params">(MouseEvent e)</span> {
            endPoint =3D getNearestGridPoint(e.getPoint());
            <span class=3D"hljs-keyword">if</span> (startPoint.x =3D=3D end=
Point.x || startPoint.y =3D=3D endPoint.y) {
                drawElement(startPoint, endPoint);
            }
        }
    });

    panel.addMouseMotionListener(<span class=3D"hljs-keyword">new</span> <s=
pan class=3D"hljs-title class_">MouseMotionAdapter</span>() {
        <span class=3D"hljs-meta">@Override</span>
        <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyw=
ord">void</span> <span class=3D"hljs-title function_">mouseDragged</span><s=
pan class=3D"hljs-params">(MouseEvent e)</span> {
            <span class=3D"hljs-type">Point</span> <span class=3D"hljs-vari=
able">currentPoint</span> <span class=3D"hljs-operator">=3D</span> getNeare=
stGridPoint(e.getPoint());
            <span class=3D"hljs-keyword">if</span> (currentPoint.x =3D=3D s=
tartPoint.x || currentPoint.y =3D=3D startPoint.y) {
                endPoint =3D currentPoint;
                drawElement(startPoint, endPoint);
            }
        }
    });

    add(panel);
    setupMenuBar();
    setExtendedState(JFrame.MAXIMIZED_BOTH); <span class=3D"hljs-comment">/=
/ Maximize the frame</span>
    setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    setLocationRelativeTo(<span class=3D"hljs-literal">null</span>);
}
</code></div></div></pre><p>With <code>setExtendedState(JFrame.MAXIMIZED_BO=
TH)</code>, the frame will be maximized to fill the user's monitor when the=
 application starts. This way, the application window will adjust to the us=
er's monitor size automatically.</p></div></div></div></div></div></div></d=
iv></div><div class=3D"w-full text-token-text-primary" data-testid=3D"conve=
rsation-turn-18" style=3D"--avatar-color: #19c37d;"><div class=3D"px-4 py-2=
 justify-center text-base md:gap-6 m-auto"><div class=3D"flex flex-1 text-b=
ase mx-auto gap-3 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem] group"><di=
v class=3D"flex-shrink-0 flex flex-col relative items-end"><div><div class=
=3D"pt-0.5"><div class=3D"gizmo-shadow-stroke flex h-6 w-6 items-center jus=
tify-center overflow-hidden rounded-full"><div class=3D"relative p-1 rounde=
d-sm h-9 w-9 text-white flex items-center justify-center" style=3D"backgrou=
nd-color: rgb(121, 137, 255); width: 24px; height: 24px;"><svg stroke=3D"cu=
rrentColor" fill=3D"none" stroke-width=3D"2" viewBox=3D"0 0 24 24" stroke-l=
inecap=3D"round" stroke-linejoin=3D"round" class=3D"icon-sm" height=3D"1em"=
 width=3D"1em" xmlns=3D"http://www.w3.org/2000/svg"><path d=3D"M20 21v-2a4 =
4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path><circle cx=3D"12" cy=3D"7" r=3D"4"></=
circle></svg></div></div></div></div></div><div class=3D"relative flex w-fu=
ll flex-col"><div class=3D"font-semibold select-none">Anonymous</div><div c=
lass=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-=
w-full"><div data-message-author-role=3D"user" data-message-id=3D"aaa2ba6f-=
1a0d-4795-b112-b903d5630d1e" class=3D"min-h-[20px] text-message flex flex-c=
ol items-start gap-3 whitespace-pre-wrap break-words [.text-message+&amp;]:=
mt-5 overflow-x-auto"><div class=3D"">Show me the whole file</div></div></d=
iv></div></div></div></div></div><div class=3D"w-full text-token-text-prima=
ry" data-testid=3D"conversation-turn-19" style=3D"--avatar-color: #19c37d;"=
><div class=3D"px-4 py-2 justify-center text-base md:gap-6 m-auto"><div cla=
ss=3D"flex flex-1 text-base mx-auto gap-3 md:max-w-3xl lg:max-w-[40rem] xl:=
max-w-[48rem] group"><div class=3D"flex-shrink-0 flex flex-col relative ite=
ms-end"><div><div class=3D"pt-0.5"><div class=3D"gizmo-shadow-stroke flex h=
-6 w-6 items-center justify-center overflow-hidden rounded-full"><div class=
=3D"relative p-1 rounded-sm h-9 w-9 text-white flex items-center justify-ce=
nter" style=3D"background-color: rgb(25, 195, 125); width: 24px; height: 24=
px;"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xm=
lns=3D"http://www.w3.org/2000/svg" class=3D"icon-sm" role=3D"img"><text x=
=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C37.9808 15=
.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.67=
6 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.=
9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341=
C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044 14.089=
3 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.=
30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782=
 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0.944492=
 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81=
182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659=
 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.=
1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21.075=
5 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C3=
0.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6=
547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26=
.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.53=
24 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501=
C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3=
019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 =
30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0=
359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29=
.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.88=
49ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718=
 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.=
1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24=
.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24.711=
5 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 1=
2.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0=
064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.1988=
5 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20=
.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.9404L18.57=
23 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C1=
5.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.86=
01 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 =
13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.=
6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12.487=
9L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21=
.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35.974=
3 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 3=
2.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.43=
32 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35=
.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554=
 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10=
.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.94=
05C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 =
6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.=
2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826 12.166=
7 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 =
19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.=
8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12.746=
6 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 1=
9.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4.883=
79 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9=
.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2=
424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018=
 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentColor"></path></svg></div>=
</div></div></div></div><div class=3D"relative flex w-full flex-col agent-t=
urn"><div class=3D"font-semibold select-none">ChatGPT</div><div class=3D"fl=
ex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"><d=
iv data-message-author-role=3D"assistant" data-message-id=3D"9a18c5cd-bae7-=
4b59-b895-49a00ddaa75d" class=3D"min-h-[20px] text-message flex flex-col it=
ems-start gap-3 whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 =
overflow-x-auto"><div class=3D"markdown prose w-full break-words dark:prose=
-invert dark"><p>Here's the full <code>App.java</code> file with the adjust=
ments to make the application window adjust to the user's monitor size:</p>=
<pre><div class=3D"dark bg-gray-950 rounded-md"><div class=3D"flex items-ce=
nter relative text-token-text-secondary bg-token-main-surface-secondary px-=
4 py-2 text-xs font-sans justify-between rounded-t-md"><span>java</span><sp=
an class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cente=
r"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmln=
s=3D"http://www.w3.org/2000/svg" class=3D"icon-sm"><path fill-rule=3D"eveno=
dd" clip-rule=3D"evenodd" d=3D"M12 4C10.8954 4 10 4.89543 10 6H14C14 4.8954=
3 13.1046 4 12 4ZM8.53513 4C9.22675 2.8044 10.5194 2 12 2C13.4806 2 14.7733=
 2.8044 15.4649 4H17C18.6569 4 20 5.34315 20 7V19C20 20.6569 18.6569 22 17 =
22H7C5.34315 22 4 20.6569 4 19V7C4 5.34315 5.34315 4 7 4H8.53513ZM8 6H7C6.4=
4772 6 6 6.44772 6 7V19C6 19.5523 6.44772 20 7 20H17C17.5523 20 18 19.5523 =
18 19V7C18 6.44772 17.5523 6 17 6H16C16 7.10457 15.1046 8 14 8H10C8.89543 8=
 8 7.10457 8 6Z" fill=3D"currentColor"></path></svg>Copy code</button></spa=
n></div><div class=3D"p-4 overflow-y-auto"><code class=3D"!whitespace-pre h=
ljs language-java"><span class=3D"hljs-keyword">import</span> javax.imageio=
.ImageIO;
<span class=3D"hljs-keyword">import</span> javax.swing.*;
<span class=3D"hljs-keyword">import</span> java.awt.*;
<span class=3D"hljs-keyword">import</span> java.awt.event.*;
<span class=3D"hljs-keyword">import</span> java.awt.image.BufferedImage;
<span class=3D"hljs-keyword">import</span> java.io.File;
<span class=3D"hljs-keyword">import</span> java.io.IOException;

<span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword">cla=
ss</span> <span class=3D"hljs-title class_">App</span> <span class=3D"hljs-=
keyword">extends</span> <span class=3D"hljs-title class_">JFrame</span> {

    <span class=3D"hljs-keyword">private</span> BufferedImage canvas;
    <span class=3D"hljs-keyword">private</span> Point startPoint;
    <span class=3D"hljs-keyword">private</span> Point endPoint;
    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-type">i=
nt</span> <span class=3D"hljs-variable">gridSize</span> <span class=3D"hljs=
-operator">=3D</span> <span class=3D"hljs-number">20</span>; <span class=3D=
"hljs-comment">// Size of grid cells</span>
    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-type">F=
loorElementType</span> <span class=3D"hljs-variable">currentElementType</sp=
an> <span class=3D"hljs-operator">=3D</span> FloorElementType.WALL; <span c=
lass=3D"hljs-comment">// Default to drawing walls</span>

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword"=
>enum</span> <span class=3D"hljs-title class_">FloorElementType</span> {
        WALL(Color.BLACK),
        WINDOW(Color.BLUE),
        DOOR(Color.RED);

        <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-key=
word">final</span> Color color;

        FloorElementType(Color color) {
            <span class=3D"hljs-built_in">this</span>.color =3D color;
        }

        <span class=3D"hljs-keyword">public</span> Color <span class=3D"hlj=
s-title function_">getColor</span><span class=3D"hljs-params">()</span> {
            <span class=3D"hljs-keyword">return</span> color;
        }
    }

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-title fu=
nction_">App</span><span class=3D"hljs-params">()</span> {
        <span class=3D"hljs-built_in">super</span>(<span class=3D"hljs-stri=
ng">"Floor Plan Designer"</span>);
        initUI();
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">initUI</span><span class=
=3D"hljs-params">()</span> {
        canvas =3D <span class=3D"hljs-keyword">new</span> <span class=3D"h=
ljs-title class_">BufferedImage</span>(<span class=3D"hljs-number">800</spa=
n>, <span class=3D"hljs-number">600</span>, BufferedImage.TYPE_INT_ARGB);
        clearCanvas();

        <span class=3D"hljs-type">JPanel</span> <span class=3D"hljs-variabl=
e">panel</span> <span class=3D"hljs-operator">=3D</span> <span class=3D"hlj=
s-keyword">new</span> <span class=3D"hljs-title class_">JPanel</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">protected</span> <span class=3D"hl=
js-keyword">void</span> <span class=3D"hljs-title function_">paintComponent=
</span><span class=3D"hljs-params">(Graphics g)</span> {
                <span class=3D"hljs-built_in">super</span>.paintComponent(g=
);
                g.drawImage(canvas, <span class=3D"hljs-number">0</span>, <=
span class=3D"hljs-number">0</span>, <span class=3D"hljs-literal">null</spa=
n>);

                <span class=3D"hljs-comment">// Draw grid lines</span>
                g.setColor(Color.LIGHT_GRAY);
                <span class=3D"hljs-keyword">for</span> (<span class=3D"hlj=
s-type">int</span> <span class=3D"hljs-variable">x</span> <span class=3D"hl=
js-operator">=3D</span> <span class=3D"hljs-number">0</span>; x &lt; canvas=
.getWidth(); x +=3D gridSize) {
                    g.drawLine(x, <span class=3D"hljs-number">0</span>, x, =
canvas.getHeight());
                }
                <span class=3D"hljs-keyword">for</span> (<span class=3D"hlj=
s-type">int</span> <span class=3D"hljs-variable">y</span> <span class=3D"hl=
js-operator">=3D</span> <span class=3D"hljs-number">0</span>; y &lt; canvas=
.getHeight(); y +=3D gridSize) {
                    g.drawLine(<span class=3D"hljs-number">0</span>, y, can=
vas.getWidth(), y);
                }
            }
        };

        panel.setPreferredSize(<span class=3D"hljs-keyword">new</span> <spa=
n class=3D"hljs-title class_">Dimension</span>(<span class=3D"hljs-number">=
800</span>, <span class=3D"hljs-number">600</span>));
        panel.addMouseListener(<span class=3D"hljs-keyword">new</span> <spa=
n class=3D"hljs-title class_">MouseAdapter</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">mousePressed</spa=
n><span class=3D"hljs-params">(MouseEvent e)</span> {
                startPoint =3D getNearestGridPoint(e.getPoint());
                endPoint =3D startPoint;
            }

            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">mouseReleased</sp=
an><span class=3D"hljs-params">(MouseEvent e)</span> {
                endPoint =3D getNearestGridPoint(e.getPoint());
                <span class=3D"hljs-keyword">if</span> (startPoint.x =3D=3D=
 endPoint.x || startPoint.y =3D=3D endPoint.y) {
                    drawElement(startPoint, endPoint);
                }
            }
        });

        panel.addMouseMotionListener(<span class=3D"hljs-keyword">new</span=
> <span class=3D"hljs-title class_">MouseMotionAdapter</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">mouseDragged</spa=
n><span class=3D"hljs-params">(MouseEvent e)</span> {
                <span class=3D"hljs-type">Point</span> <span class=3D"hljs-=
variable">currentPoint</span> <span class=3D"hljs-operator">=3D</span> getN=
earestGridPoint(e.getPoint());
                <span class=3D"hljs-keyword">if</span> (currentPoint.x =3D=
=3D startPoint.x || currentPoint.y =3D=3D startPoint.y) {
                    endPoint =3D currentPoint;
                    drawElement(startPoint, endPoint);
                }
            }
        });

        add(panel);
        setupMenuBar();
        setExtendedState(JFrame.MAXIMIZED_BOTH); <span class=3D"hljs-commen=
t">// Maximize the frame</span>
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(<span class=3D"hljs-literal">null</span>);
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">drawElement</span><span =
class=3D"hljs-params">(Point start, Point end)</span> {
        <span class=3D"hljs-keyword">if</span> (isInCanvasBounds(start) &am=
p;&amp; isInCanvasBounds(end)) {
            <span class=3D"hljs-type">Graphics2D</span> <span class=3D"hljs=
-variable">g2d</span> <span class=3D"hljs-operator">=3D</span> canvas.creat=
eGraphics();
            g2d.setColor(currentElementType.getColor());
            g2d.setStroke(<span class=3D"hljs-keyword">new</span> <span cla=
ss=3D"hljs-title class_">BasicStroke</span>(<span class=3D"hljs-number">2</=
span>));
            g2d.drawLine(start.x, start.y, end.x, end.y);
            g2d.dispose();
            repaint();
        }
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-type">b=
oolean</span> <span class=3D"hljs-title function_">isInCanvasBounds</span><=
span class=3D"hljs-params">(Point point)</span> {
        <span class=3D"hljs-keyword">return</span> point.x &gt;=3D <span cl=
ass=3D"hljs-number">0</span> &amp;&amp; point.x &lt; canvas.getWidth() &amp=
;&amp;
               point.y &gt;=3D <span class=3D"hljs-number">0</span> &amp;&a=
mp; point.y &lt; canvas.getHeight();
    }

    <span class=3D"hljs-keyword">private</span> Point <span class=3D"hljs-t=
itle function_">getNearestGridPoint</span><span class=3D"hljs-params">(Poin=
t point)</span> {
        <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">=
x</span> <span class=3D"hljs-operator">=3D</span> Math.round((<span class=
=3D"hljs-type">float</span>) point.x / gridSize) * gridSize;
        <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">=
y</span> <span class=3D"hljs-operator">=3D</span> Math.round((<span class=
=3D"hljs-type">float</span>) point.y / gridSize) * gridSize;
        <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-keyw=
ord">new</span> <span class=3D"hljs-title class_">Point</span>(x, y);
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">clearCanvas</span><span =
class=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">Graphics2D</span> <span class=3D"hljs-var=
iable">g2d</span> <span class=3D"hljs-operator">=3D</span> canvas.createGra=
phics();
        g2d.setComposite(AlphaComposite.Clear);
        g2d.fillRect(<span class=3D"hljs-number">0</span>, <span class=3D"h=
ljs-number">0</span>, canvas.getWidth(), canvas.getHeight());
        g2d.setComposite(AlphaComposite.SrcOver);
        g2d.dispose();
        repaint();
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">saveImage</span><span cl=
ass=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">JFileChooser</span> <span class=3D"hljs-v=
ariable">fileChooser</span> <span class=3D"hljs-operator">=3D</span> <span =
class=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JFileCh=
ooser</span>();
        fileChooser.setDialogTitle(<span class=3D"hljs-string">"Save Image"=
</span>);
        <span class=3D"hljs-keyword">if</span> (fileChooser.showSaveDialog(=
<span class=3D"hljs-built_in">this</span>) =3D=3D JFileChooser.APPROVE_OPTI=
ON) {
            <span class=3D"hljs-type">File</span> <span class=3D"hljs-varia=
ble">file</span> <span class=3D"hljs-operator">=3D</span> fileChooser.getSe=
lectedFile();
            <span class=3D"hljs-keyword">try</span> {
                ImageIO.write(canvas, <span class=3D"hljs-string">"PNG"</sp=
an>, file);
            } <span class=3D"hljs-keyword">catch</span> (IOException ex) {
                ex.printStackTrace();
            }
        }
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">setupMenuBar</span><span=
 class=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">JMenuBar</span> <span class=3D"hljs-varia=
ble">menuBar</span> <span class=3D"hljs-operator">=3D</span> <span class=3D=
"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuBar</span>=
();

        <span class=3D"hljs-type">JMenu</span> <span class=3D"hljs-variable=
">fileMenu</span> <span class=3D"hljs-operator">=3D</span> <span class=3D"h=
ljs-keyword">new</span> <span class=3D"hljs-title class_">JMenu</span>(<spa=
n class=3D"hljs-string">"File"</span>);
        <span class=3D"hljs-type">JMenuItem</span> <span class=3D"hljs-vari=
able">saveItem</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuItem</s=
pan>(<span class=3D"hljs-string">"Save"</span>);
        saveItem.addActionListener(e -&gt; saveImage());
        fileMenu.add(saveItem);

        <span class=3D"hljs-type">JMenuItem</span> <span class=3D"hljs-vari=
able">exitItem</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuItem</s=
pan>(<span class=3D"hljs-string">"Exit"</span>);
        exitItem.addActionListener(e -&gt; System.exit(<span class=3D"hljs-=
number">0</span>));
        fileMenu.add(exitItem);

        <span class=3D"hljs-type">JMenu</span> <span class=3D"hljs-variable=
">elementMenu</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenu</span>=
(<span class=3D"hljs-string">"Element"</span>);
        <span class=3D"hljs-type">ButtonGroup</span> <span class=3D"hljs-va=
riable">group</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">ButtonGroup<=
/span>();
        <span class=3D"hljs-keyword">for</span> (FloorElementType type : Fl=
oorElementType.values()) {
            <span class=3D"hljs-type">JRadioButtonMenuItem</span> <span cla=
ss=3D"hljs-variable">item</span> <span class=3D"hljs-operator">=3D</span> <=
span class=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JR=
adioButtonMenuItem</span>(type.name());
            item.addActionListener(e -&gt; currentElementType =3D type);
            group.add(item);
            elementMenu.add(item);
        }

        menuBar.add(fileMenu);
        menuBar.add(elementMenu);
        setJMenuBar(menuBar);
    }

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword"=
>static</span> <span class=3D"hljs-keyword">void</span> <span class=3D"hljs=
-title function_">main</span><span class=3D"hljs-params">(String[] args)</s=
pan> {
        SwingUtilities.invokeLater(() -&gt; <span class=3D"hljs-keyword">ne=
w</span> <span class=3D"hljs-title class_">App</span>().setVisible(<span cl=
ass=3D"hljs-literal">true</span>));
    }
}
</code></div></div></pre><p>Now, the application window will be maximized t=
o fill the user's monitor when it starts.</p></div></div></div></div></div>=
</div></div></div><div class=3D"w-full text-token-text-primary" data-testid=
=3D"conversation-turn-20" style=3D"--avatar-color: #19c37d;"><div class=3D"=
px-4 py-2 justify-center text-base md:gap-6 m-auto"><div class=3D"flex flex=
-1 text-base mx-auto gap-3 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem] g=
roup"><div class=3D"flex-shrink-0 flex flex-col relative items-end"><div><d=
iv class=3D"pt-0.5"><div class=3D"gizmo-shadow-stroke flex h-6 w-6 items-ce=
nter justify-center overflow-hidden rounded-full"><div class=3D"relative p-=
1 rounded-sm h-9 w-9 text-white flex items-center justify-center" style=3D"=
background-color: rgb(121, 137, 255); width: 24px; height: 24px;"><svg stro=
ke=3D"currentColor" fill=3D"none" stroke-width=3D"2" viewBox=3D"0 0 24 24" =
stroke-linecap=3D"round" stroke-linejoin=3D"round" class=3D"icon-sm" height=
=3D"1em" width=3D"1em" xmlns=3D"http://www.w3.org/2000/svg"><path d=3D"M20 =
21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path><circle cx=3D"12" cy=3D"7" r=
=3D"4"></circle></svg></div></div></div></div></div><div class=3D"relative =
flex w-full flex-col"><div class=3D"font-semibold select-none">Anonymous</d=
iv><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex=
-col max-w-full"><div data-message-author-role=3D"user" data-message-id=3D"=
aaa2c721-9f3c-4093-abd8-d7a5ff043424" class=3D"min-h-[20px] text-message fl=
ex flex-col items-start gap-3 whitespace-pre-wrap break-words [.text-messag=
e+&amp;]:mt-5 overflow-x-auto"><div class=3D"">the grid doesn't expand to t=
he whole window though. please fix this</div></div></div></div></div></div>=
</div></div><div class=3D"w-full text-token-text-primary" data-testid=3D"co=
nversation-turn-21" style=3D"--avatar-color: #19c37d;"><div class=3D"px-4 p=
y-2 justify-center text-base md:gap-6 m-auto"><div class=3D"flex flex-1 tex=
t-base mx-auto gap-3 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem] group">=
<div class=3D"flex-shrink-0 flex flex-col relative items-end"><div><div cla=
ss=3D"pt-0.5"><div class=3D"gizmo-shadow-stroke flex h-6 w-6 items-center j=
ustify-center overflow-hidden rounded-full"><div class=3D"relative p-1 roun=
ded-sm h-9 w-9 text-white flex items-center justify-center" style=3D"backgr=
ound-color: rgb(25, 195, 125); width: 24px; height: 24px;"><svg width=3D"41=
" height=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://www.w3.=
org/2000/svg" class=3D"icon-sm" role=3D"img"><text x=3D"-9999" y=3D"-9999">=
ChatGPT</text><path d=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 3=
7.9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.834=
04 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.=
85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.72=
49 0.491269 18.3058 0.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.422=
14C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8=
.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.95646=
4 14.1591 0.498905 16.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.544=
9 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.=
7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321=
 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17=
.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.49=
98C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 =
35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.1=
15 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 4=
0.0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.=
8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.8666=
 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.3=
813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213=
 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.98=
42 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 3=
5.6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.5=
1397 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.081=
8 5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.=
902C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C24=
.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.08=
93 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 =
34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.=
17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.52=
28 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8=
.48312 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.49=
79C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 =
28.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.55=
289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556=
L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12=
.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.99=
67 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 37=
.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.30=
86 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 =
30.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.33=
48 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 1=
4.9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.450=
4 10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V1=
1.9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.1=
048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376=
 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.=
40939 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.30=
55 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763=
 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10=
.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.426=
59 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3=
.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.86=
68 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C=
14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.=
9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.9985=
V17.9991Z" fill=3D"currentColor"></path></svg></div></div></div></div></div=
><div class=3D"relative flex w-full flex-col agent-turn"><div class=3D"font=
-semibold select-none">ChatGPT</div><div class=3D"flex-col gap-1 md:gap-3">=
<div class=3D"flex flex-grow flex-col max-w-full"><div data-message-author-=
role=3D"assistant" data-message-id=3D"f59bb741-d563-4922-b1bb-897f7c498e3a"=
 class=3D"min-h-[20px] text-message flex flex-col items-start gap-3 whitesp=
ace-pre-wrap break-words [.text-message+&amp;]:mt-5 overflow-x-auto"><div c=
lass=3D"markdown prose w-full break-words dark:prose-invert dark"><p>To ens=
ure that the grid expands to fill the entire window, you need to adjust the=
 size of the grid lines based on the size of the window. You can calculate =
the number of grid lines needed to cover the width and height of the canvas=
, and then adjust the spacing accordingly. Here's the updated <code>paintCo=
mponent</code> method to achieve this:</p><pre><div class=3D"dark bg-gray-9=
50 rounded-md"><div class=3D"flex items-center relative text-token-text-sec=
ondary bg-token-main-surface-secondary px-4 py-2 text-xs font-sans justify-=
between rounded-t-md"><span>java</span><span class=3D"" data-state=3D"close=
d"><button class=3D"flex gap-1 items-center"><svg width=3D"24" height=3D"24=
" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" =
class=3D"icon-sm"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M1=
2 4C10.8954 4 10 4.89543 10 6H14C14 4.89543 13.1046 4 12 4ZM8.53513 4C9.226=
75 2.8044 10.5194 2 12 2C13.4806 2 14.7733 2.8044 15.4649 4H17C18.6569 4 20=
 5.34315 20 7V19C20 20.6569 18.6569 22 17 22H7C5.34315 22 4 20.6569 4 19V7C=
4 5.34315 5.34315 4 7 4H8.53513ZM8 6H7C6.44772 6 6 6.44772 6 7V19C6 19.5523=
 6.44772 20 7 20H17C17.5523 20 18 19.5523 18 19V7C18 6.44772 17.5523 6 17 6=
H16C16 7.10457 15.1046 8 14 8H10C8.89543 8 8 7.10457 8 6Z" fill=3D"currentC=
olor"></path></svg>Copy code</button></span></div><div class=3D"p-4 overflo=
w-y-auto"><code class=3D"!whitespace-pre hljs language-java"><span class=3D=
"hljs-meta">@Override</span>
<span class=3D"hljs-keyword">protected</span> <span class=3D"hljs-keyword">=
void</span> <span class=3D"hljs-title function_">paintComponent</span><span=
 class=3D"hljs-params">(Graphics g)</span> {
    <span class=3D"hljs-built_in">super</span>.paintComponent(g);
    g.drawImage(canvas, <span class=3D"hljs-number">0</span>, <span class=
=3D"hljs-number">0</span>, <span class=3D"hljs-literal">null</span>);

    <span class=3D"hljs-comment">// Calculate the number of grid lines need=
ed to cover the width and height of the canvas</span>
    <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">numV=
erticalLines</span> <span class=3D"hljs-operator">=3D</span> canvas.getWidt=
h() / gridSize;
    <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">numH=
orizontalLines</span> <span class=3D"hljs-operator">=3D</span> canvas.getHe=
ight() / gridSize;

    <span class=3D"hljs-comment">// Draw grid lines</span>
    g.setColor(Color.LIGHT_GRAY);
    <span class=3D"hljs-keyword">for</span> (<span class=3D"hljs-type">int<=
/span> <span class=3D"hljs-variable">x</span> <span class=3D"hljs-operator"=
>=3D</span> <span class=3D"hljs-number">0</span>; x &lt;=3D numVerticalLine=
s; x++) {
        <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">=
lineX</span> <span class=3D"hljs-operator">=3D</span> x * gridSize;
        g.drawLine(lineX, <span class=3D"hljs-number">0</span>, lineX, canv=
as.getHeight());
    }
    <span class=3D"hljs-keyword">for</span> (<span class=3D"hljs-type">int<=
/span> <span class=3D"hljs-variable">y</span> <span class=3D"hljs-operator"=
>=3D</span> <span class=3D"hljs-number">0</span>; y &lt;=3D numHorizontalLi=
nes; y++) {
        <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">=
lineY</span> <span class=3D"hljs-operator">=3D</span> y * gridSize;
        g.drawLine(<span class=3D"hljs-number">0</span>, lineY, canvas.getW=
idth(), lineY);
    }
}
</code></div></div></pre><p>With this change, the grid lines will expand to=
 fill the entire window based on the size of the canvas and the grid size.<=
/p></div></div></div></div></div></div></div></div><div class=3D"w-full tex=
t-token-text-primary" data-testid=3D"conversation-turn-22" style=3D"--avata=
r-color: #19c37d;"><div class=3D"px-4 py-2 justify-center text-base md:gap-=
6 m-auto"><div class=3D"flex flex-1 text-base mx-auto gap-3 md:max-w-3xl lg=
:max-w-[40rem] xl:max-w-[48rem] group"><div class=3D"flex-shrink-0 flex fle=
x-col relative items-end"><div><div class=3D"pt-0.5"><div class=3D"gizmo-sh=
adow-stroke flex h-6 w-6 items-center justify-center overflow-hidden rounde=
d-full"><div class=3D"relative p-1 rounded-sm h-9 w-9 text-white flex items=
-center justify-center" style=3D"background-color: rgb(121, 137, 255); widt=
h: 24px; height: 24px;"><svg stroke=3D"currentColor" fill=3D"none" stroke-w=
idth=3D"2" viewBox=3D"0 0 24 24" stroke-linecap=3D"round" stroke-linejoin=
=3D"round" class=3D"icon-sm" height=3D"1em" width=3D"1em" xmlns=3D"http://w=
ww.w3.org/2000/svg"><path d=3D"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"><=
/path><circle cx=3D"12" cy=3D"7" r=3D"4"></circle></svg></div></div></div><=
/div></div><div class=3D"relative flex w-full flex-col"><div class=3D"font-=
semibold select-none">Anonymous</div><div class=3D"flex-col gap-1 md:gap-3"=
><div class=3D"flex flex-grow flex-col max-w-full"><div data-message-author=
-role=3D"user" data-message-id=3D"aaa29463-83de-472a-9322-1e4e066da5a0" cla=
ss=3D"min-h-[20px] text-message flex flex-col items-start gap-3 whitespace-=
pre-wrap break-words [.text-message+&amp;]:mt-5 overflow-x-auto"><div class=
=3D"">redo this. it's not filling up the whole window. here's the code I ha=
ve import javax.imageio.ImageIO;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

public class App extends JFrame {

    private BufferedImage canvas;
    private Point startPoint;
    private Point endPoint;
    private int gridSize =3D 20; // Size of grid cells
    private FloorElementType currentElementType =3D FloorElementType.WALL; =
// Default to drawing walls

    public enum FloorElementType {
        WALL(Color.BLACK),
        WINDOW(Color.BLUE),
        DOOR(Color.RED);

        private final Color color;

        FloorElementType(Color color) {
            this.color =3D color;
        }

        public Color getColor() {
            return color;
        }
    }

    public App() {
        super("Floor Plan Designer");
        initUI();
    }

    private void initUI() {
        canvas =3D new BufferedImage(800, 600, BufferedImage.TYPE_INT_ARGB)=
;
        clearCanvas();

        JPanel panel =3D new JPanel() {
            @Override
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
                g.drawImage(canvas, 0, 0, null);

                // Calculate the number of grid lines needed to cover the w=
idth and height of the canvas
                int numVerticalLines =3D canvas.getWidth() / gridSize;
                int numHorizontalLines =3D canvas.getHeight() / gridSize;

                // Draw grid lines
                g.setColor(Color.LIGHT_GRAY);
                for (int x =3D 0; x &lt;=3D numVerticalLines; x++) {
                    int lineX =3D x * gridSize;
                    g.drawLine(lineX, 0, lineX, canvas.getHeight());
                }
                for (int y =3D 0; y &lt;=3D numHorizontalLines; y++) {
                    int lineY =3D y * gridSize;
                    g.drawLine(0, lineY, canvas.getWidth(), lineY);
                }
            }
        };

        panel.setPreferredSize(new Dimension(800, 600));
        panel.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                startPoint =3D getNearestGridPoint(e.getPoint());
                endPoint =3D startPoint;
            }

            @Override
            public void mouseReleased(MouseEvent e) {
                endPoint =3D getNearestGridPoint(e.getPoint());
                if (startPoint.x =3D=3D endPoint.x || startPoint.y =3D=3D e=
ndPoint.y) {
                    drawElement(startPoint, endPoint);
                }
            }
        });

        panel.addMouseMotionListener(new MouseMotionAdapter() {
            @Override
            public void mouseDragged(MouseEvent e) {
                Point currentPoint =3D getNearestGridPoint(e.getPoint());
                if (currentPoint.x =3D=3D startPoint.x || currentPoint.y =
=3D=3D startPoint.y) {
                    endPoint =3D currentPoint;
                    drawElement(startPoint, endPoint);
                }
            }
        });

        add(panel);
        setupMenuBar();
        setExtendedState(JFrame.MAXIMIZED_BOTH); // Maximize the frame
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
    }

    private void drawElement(Point start, Point end) {
        if (isInCanvasBounds(start) &amp;&amp; isInCanvasBounds(end)) {
            Graphics2D g2d =3D canvas.createGraphics();
            g2d.setColor(currentElementType.getColor());
            g2d.setStroke(new BasicStroke(2));
            g2d.drawLine(start.x, start.y, end.x, end.y);
            g2d.dispose();
            repaint();
        }
    }

    private boolean isInCanvasBounds(Point point) {
        return point.x &gt;=3D 0 &amp;&amp; point.x &lt; canvas.getWidth() =
&amp;&amp;
                point.y &gt;=3D 0 &amp;&amp; point.y &lt; canvas.getHeight(=
);
    }

    private Point getNearestGridPoint(Point point) {
        int x =3D Math.round((float) point.x / gridSize) * gridSize;
        int y =3D Math.round((float) point.y / gridSize) * gridSize;
        return new Point(x, y);
    }

    private void clearCanvas() {
        Graphics2D g2d =3D canvas.createGraphics();
        g2d.setComposite(AlphaComposite.Clear);
        g2d.fillRect(0, 0, canvas.getWidth(), canvas.getHeight());
        g2d.setComposite(AlphaComposite.SrcOver);
        g2d.dispose();
        repaint();
    }

    private void saveImage() {
        JFileChooser fileChooser =3D new JFileChooser();
        fileChooser.setDialogTitle("Save Image");
        if (fileChooser.showSaveDialog(this) =3D=3D JFileChooser.APPROVE_OP=
TION) {
            File file =3D fileChooser.getSelectedFile();
            try {
                ImageIO.write(canvas, "PNG", file);
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
    }

    private void setupMenuBar() {
        JMenuBar menuBar =3D new JMenuBar();

        JMenu fileMenu =3D new JMenu("File");
        JMenuItem saveItem =3D new JMenuItem("Save");
        saveItem.addActionListener(e -&gt; saveImage());
        fileMenu.add(saveItem);

        JMenuItem exitItem =3D new JMenuItem("Exit");
        exitItem.addActionListener(e -&gt; System.exit(0));
        fileMenu.add(exitItem);

        JMenu elementMenu =3D new JMenu("Element");
        ButtonGroup group =3D new ButtonGroup();
        for (FloorElementType type : FloorElementType.values()) {
            JRadioButtonMenuItem item =3D new JRadioButtonMenuItem(type.nam=
e());
            item.addActionListener(e -&gt; currentElementType =3D type);
            group.add(item);
            elementMenu.add(item);
        }

        menuBar.add(fileMenu);
        menuBar.add(elementMenu);
        setJMenuBar(menuBar);
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -&gt; new App().setVisible(true));
    }
}
</div></div></div></div></div></div></div></div><div class=3D"w-full text-t=
oken-text-primary" data-testid=3D"conversation-turn-23" style=3D"--avatar-c=
olor: #19c37d;"><div class=3D"px-4 py-2 justify-center text-base md:gap-6 m=
-auto"><div class=3D"flex flex-1 text-base mx-auto gap-3 md:max-w-3xl lg:ma=
x-w-[40rem] xl:max-w-[48rem] group"><div class=3D"flex-shrink-0 flex flex-c=
ol relative items-end"><div><div class=3D"pt-0.5"><div class=3D"gizmo-shado=
w-stroke flex h-6 w-6 items-center justify-center overflow-hidden rounded-f=
ull"><div class=3D"relative p-1 rounded-sm h-9 w-9 text-white flex items-ce=
nter justify-center" style=3D"background-color: rgb(25, 195, 125); width: 2=
4px; height: 24px;"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41" f=
ill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-sm" role=3D=
"img"><text x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.87=
07C37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 =
9.91076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.086=
4 3.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22=
.4257 1.36341C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.=
495044 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.69=
17 7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.=
73073 11.0782 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.=
4228C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413=
 26.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.=
18791 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.597=
3 14.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 4=
0.2144 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4=
418 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332=
 34.8167 32.6547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.6=
84C39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 =
18.4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17=
.6994 36.1501C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156=
C26.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.=
5124 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198=
 29.9656 21.0359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9=
842 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 =
22.4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25=
.9832C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.897=
5 30.8408 14.1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.00=
73 30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 2=
9.0556C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9=
096 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263=
 6.39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 1=
0.3327C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.03=
78 8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 =
20.9404L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1=
505 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C=
5.32135 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.=
3413 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.614=
2 12.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 2=
5.7111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.16=
13C37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 2=
7.0432 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6=
047 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 =
20.7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.30=
55 15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C2=
6.906 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.15=
54 25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 =
16.0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.2=
5025C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.036=
4 6.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C3=
5.3826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.=
9981C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.812=
2 19.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6=
.58696C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8=
524 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C=
23.0427 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69=
878 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479=
 10.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22=
.9985L20.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentColor"></path=
></svg></div></div></div></div></div><div class=3D"relative flex w-full fle=
x-col agent-turn"><div class=3D"font-semibold select-none">ChatGPT</div><di=
v class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col m=
ax-w-full"><div data-message-author-role=3D"assistant" data-message-id=3D"5=
1cfb736-f101-4c4c-aaa2-257db499213f" class=3D"min-h-[20px] text-message fle=
x flex-col items-start gap-3 whitespace-pre-wrap break-words [.text-message=
+&amp;]:mt-5 overflow-x-auto"><div class=3D"markdown prose w-full break-wor=
ds dark:prose-invert dark"><p>To ensure that the grid fills the entire wind=
ow, we need to adjust the calculation of the grid lines based on the size o=
f the panel rather than the canvas size. Here's the updated <code>paintComp=
onent</code> method:</p><pre><div class=3D"dark bg-gray-950 rounded-md"><di=
v class=3D"flex items-center relative text-token-text-secondary bg-token-ma=
in-surface-secondary px-4 py-2 text-xs font-sans justify-between rounded-t-=
md"><span>java</span><span class=3D"" data-state=3D"closed"><button class=
=3D"flex gap-1 items-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0=
 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-sm=
"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M12 4C10.8954 4 10=
 4.89543 10 6H14C14 4.89543 13.1046 4 12 4ZM8.53513 4C9.22675 2.8044 10.519=
4 2 12 2C13.4806 2 14.7733 2.8044 15.4649 4H17C18.6569 4 20 5.34315 20 7V19=
C20 20.6569 18.6569 22 17 22H7C5.34315 22 4 20.6569 4 19V7C4 5.34315 5.3431=
5 4 7 4H8.53513ZM8 6H7C6.44772 6 6 6.44772 6 7V19C6 19.5523 6.44772 20 7 20=
H17C17.5523 20 18 19.5523 18 19V7C18 6.44772 17.5523 6 17 6H16C16 7.10457 1=
5.1046 8 14 8H10C8.89543 8 8 7.10457 8 6Z" fill=3D"currentColor"></path></s=
vg>Copy code</button></span></div><div class=3D"p-4 overflow-y-auto"><code =
class=3D"!whitespace-pre hljs language-java"><span class=3D"hljs-meta">@Ove=
rride</span>
<span class=3D"hljs-keyword">protected</span> <span class=3D"hljs-keyword">=
void</span> <span class=3D"hljs-title function_">paintComponent</span><span=
 class=3D"hljs-params">(Graphics g)</span> {
    <span class=3D"hljs-built_in">super</span>.paintComponent(g);
    g.drawImage(canvas, <span class=3D"hljs-number">0</span>, <span class=
=3D"hljs-number">0</span>, <span class=3D"hljs-literal">null</span>);

    <span class=3D"hljs-comment">// Calculate the number of grid lines need=
ed to cover the width and height of the panel</span>
    <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">numV=
erticalLines</span> <span class=3D"hljs-operator">=3D</span> getWidth() / g=
ridSize;
    <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">numH=
orizontalLines</span> <span class=3D"hljs-operator">=3D</span> getHeight() =
/ gridSize;

    <span class=3D"hljs-comment">// Draw grid lines</span>
    g.setColor(Color.LIGHT_GRAY);
    <span class=3D"hljs-keyword">for</span> (<span class=3D"hljs-type">int<=
/span> <span class=3D"hljs-variable">x</span> <span class=3D"hljs-operator"=
>=3D</span> <span class=3D"hljs-number">0</span>; x &lt;=3D numVerticalLine=
s; x++) {
        <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">=
lineX</span> <span class=3D"hljs-operator">=3D</span> x * gridSize;
        g.drawLine(lineX, <span class=3D"hljs-number">0</span>, lineX, getH=
eight());
    }
    <span class=3D"hljs-keyword">for</span> (<span class=3D"hljs-type">int<=
/span> <span class=3D"hljs-variable">y</span> <span class=3D"hljs-operator"=
>=3D</span> <span class=3D"hljs-number">0</span>; y &lt;=3D numHorizontalLi=
nes; y++) {
        <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">=
lineY</span> <span class=3D"hljs-operator">=3D</span> y * gridSize;
        g.drawLine(<span class=3D"hljs-number">0</span>, lineY, getWidth(),=
 lineY);
    }
}
</code></div></div></pre><p>This will ensure that the grid lines fill the e=
ntire window, regardless of its size.</p></div></div></div></div></div></di=
v></div></div><div class=3D"w-full text-token-text-primary" data-testid=3D"=
conversation-turn-24" style=3D"--avatar-color: #19c37d;"><div class=3D"px-4=
 py-2 justify-center text-base md:gap-6 m-auto"><div class=3D"flex flex-1 t=
ext-base mx-auto gap-3 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem] group=
"><div class=3D"flex-shrink-0 flex flex-col relative items-end"><div><div c=
lass=3D"pt-0.5"><div class=3D"gizmo-shadow-stroke flex h-6 w-6 items-center=
 justify-center overflow-hidden rounded-full"><div class=3D"relative p-1 ro=
unded-sm h-9 w-9 text-white flex items-center justify-center" style=3D"back=
ground-color: rgb(121, 137, 255); width: 24px; height: 24px;"><svg stroke=
=3D"currentColor" fill=3D"none" stroke-width=3D"2" viewBox=3D"0 0 24 24" st=
roke-linecap=3D"round" stroke-linejoin=3D"round" class=3D"icon-sm" height=
=3D"1em" width=3D"1em" xmlns=3D"http://www.w3.org/2000/svg"><path d=3D"M20 =
21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path><circle cx=3D"12" cy=3D"7" r=
=3D"4"></circle></svg></div></div></div></div></div><div class=3D"relative =
flex w-full flex-col"><div class=3D"font-semibold select-none">Anonymous</d=
iv><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex=
-col max-w-full"><div data-message-author-role=3D"user" data-message-id=3D"=
aaa2cc44-2920-4625-937d-539b10b8394c" class=3D"min-h-[20px] text-message fl=
ex flex-col items-start gap-3 whitespace-pre-wrap break-words [.text-messag=
e+&amp;]:mt-5 overflow-x-auto"><div class=3D"">Show me the whole file</div>=
</div></div></div></div></div></div></div><div class=3D"w-full text-token-t=
ext-primary" data-testid=3D"conversation-turn-25" style=3D"--avatar-color: =
#19c37d;"><div class=3D"px-4 py-2 justify-center text-base md:gap-6 m-auto"=
><div class=3D"flex flex-1 text-base mx-auto gap-3 md:max-w-3xl lg:max-w-[4=
0rem] xl:max-w-[48rem] group"><div class=3D"flex-shrink-0 flex flex-col rel=
ative items-end"><div><div class=3D"pt-0.5"><div class=3D"gizmo-shadow-stro=
ke flex h-6 w-6 items-center justify-center overflow-hidden rounded-full"><=
div class=3D"relative p-1 rounded-sm h-9 w-9 text-white flex items-center j=
ustify-center" style=3D"background-color: rgb(25, 195, 125); width: 24px; h=
eight: 24px;"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=3D=
"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-sm" role=3D"img">=
<text x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C37.=
9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.9107=
6 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62=
941 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 =
1.36341C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044=
 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.4=
7815C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 =
11.0782 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0=
.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.90=
26 2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 =
34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.9=
789 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144=
 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38=
.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.81=
67 32.6547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.=
8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.454=
4 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 =
36.1501C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.10=
03 31.3019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 2=
6.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.96=
56 21.0359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32=
.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.497=
8 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C=
5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.8=
408 14.1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.=
7248L24.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556=
C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34=
.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.392=
27 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327=
C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.2=
5334 20.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.940=
4L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28=
.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.3213=
5 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4=
.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.4=
872 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111=
 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.=
3194 21.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432=
 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30=
.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.732=
8 32.4332 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.=
0128C35.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 =
10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.=
7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.083=
7 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C2=
5.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.78=
077 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826=
 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C1=
0.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.9=
254 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696=
C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.=
99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.042=
7 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14=
.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.71=
75L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L=
20.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentColor"></path></svg=
></div></div></div></div></div><div class=3D"relative flex w-full flex-col =
agent-turn"><div class=3D"font-semibold select-none">ChatGPT</div><div clas=
s=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-f=
ull"><div data-message-author-role=3D"assistant" data-message-id=3D"bf821af=
d-961b-4221-87a0-eb47cb653573" class=3D"min-h-[20px] text-message flex flex=
-col items-start gap-3 whitespace-pre-wrap break-words [.text-message+&amp;=
]:mt-5 overflow-x-auto"><div class=3D"markdown prose w-full break-words dar=
k:prose-invert dark"><p>Here's the complete <code>App.java</code> file with=
 the adjustment to ensure that the grid fills the entire window:</p><pre><d=
iv class=3D"dark bg-gray-950 rounded-md"><div class=3D"flex items-center re=
lative text-token-text-secondary bg-token-main-surface-secondary px-4 py-2 =
text-xs font-sans justify-between rounded-t-md"><span>java</span><span clas=
s=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-center"><svg=
 width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"ht=
tp://www.w3.org/2000/svg" class=3D"icon-sm"><path fill-rule=3D"evenodd" cli=
p-rule=3D"evenodd" d=3D"M12 4C10.8954 4 10 4.89543 10 6H14C14 4.89543 13.10=
46 4 12 4ZM8.53513 4C9.22675 2.8044 10.5194 2 12 2C13.4806 2 14.7733 2.8044=
 15.4649 4H17C18.6569 4 20 5.34315 20 7V19C20 20.6569 18.6569 22 17 22H7C5.=
34315 22 4 20.6569 4 19V7C4 5.34315 5.34315 4 7 4H8.53513ZM8 6H7C6.44772 6 =
6 6.44772 6 7V19C6 19.5523 6.44772 20 7 20H17C17.5523 20 18 19.5523 18 19V7=
C18 6.44772 17.5523 6 17 6H16C16 7.10457 15.1046 8 14 8H10C8.89543 8 8 7.10=
457 8 6Z" fill=3D"currentColor"></path></svg>Copy code</button></span></div=
><div class=3D"p-4 overflow-y-auto"><code class=3D"!whitespace-pre hljs lan=
guage-java"><span class=3D"hljs-keyword">import</span> javax.imageio.ImageI=
O;
<span class=3D"hljs-keyword">import</span> javax.swing.*;
<span class=3D"hljs-keyword">import</span> java.awt.*;
<span class=3D"hljs-keyword">import</span> java.awt.event.*;
<span class=3D"hljs-keyword">import</span> java.awt.image.BufferedImage;
<span class=3D"hljs-keyword">import</span> java.io.File;
<span class=3D"hljs-keyword">import</span> java.io.IOException;

<span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword">cla=
ss</span> <span class=3D"hljs-title class_">App</span> <span class=3D"hljs-=
keyword">extends</span> <span class=3D"hljs-title class_">JFrame</span> {

    <span class=3D"hljs-keyword">private</span> BufferedImage canvas;
    <span class=3D"hljs-keyword">private</span> Point startPoint;
    <span class=3D"hljs-keyword">private</span> Point endPoint;
    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-type">i=
nt</span> <span class=3D"hljs-variable">gridSize</span> <span class=3D"hljs=
-operator">=3D</span> <span class=3D"hljs-number">20</span>; <span class=3D=
"hljs-comment">// Size of grid cells</span>
    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-type">F=
loorElementType</span> <span class=3D"hljs-variable">currentElementType</sp=
an> <span class=3D"hljs-operator">=3D</span> FloorElementType.WALL; <span c=
lass=3D"hljs-comment">// Default to drawing walls</span>

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword"=
>enum</span> <span class=3D"hljs-title class_">FloorElementType</span> {
        WALL(Color.BLACK),
        WINDOW(Color.BLUE),
        DOOR(Color.RED);

        <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-key=
word">final</span> Color color;

        FloorElementType(Color color) {
            <span class=3D"hljs-built_in">this</span>.color =3D color;
        }

        <span class=3D"hljs-keyword">public</span> Color <span class=3D"hlj=
s-title function_">getColor</span><span class=3D"hljs-params">()</span> {
            <span class=3D"hljs-keyword">return</span> color;
        }
    }

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-title fu=
nction_">App</span><span class=3D"hljs-params">()</span> {
        <span class=3D"hljs-built_in">super</span>(<span class=3D"hljs-stri=
ng">"Floor Plan Designer"</span>);
        initUI();
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">initUI</span><span class=
=3D"hljs-params">()</span> {
        canvas =3D <span class=3D"hljs-keyword">new</span> <span class=3D"h=
ljs-title class_">BufferedImage</span>(<span class=3D"hljs-number">800</spa=
n>, <span class=3D"hljs-number">600</span>, BufferedImage.TYPE_INT_ARGB);
        clearCanvas();

        <span class=3D"hljs-type">JPanel</span> <span class=3D"hljs-variabl=
e">panel</span> <span class=3D"hljs-operator">=3D</span> <span class=3D"hlj=
s-keyword">new</span> <span class=3D"hljs-title class_">JPanel</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">protected</span> <span class=3D"hl=
js-keyword">void</span> <span class=3D"hljs-title function_">paintComponent=
</span><span class=3D"hljs-params">(Graphics g)</span> {
                <span class=3D"hljs-built_in">super</span>.paintComponent(g=
);
                g.drawImage(canvas, <span class=3D"hljs-number">0</span>, <=
span class=3D"hljs-number">0</span>, <span class=3D"hljs-literal">null</spa=
n>);

                <span class=3D"hljs-comment">// Calculate the number of gri=
d lines needed to cover the width and height of the panel</span>
                <span class=3D"hljs-type">int</span> <span class=3D"hljs-va=
riable">numVerticalLines</span> <span class=3D"hljs-operator">=3D</span> ge=
tWidth() / gridSize;
                <span class=3D"hljs-type">int</span> <span class=3D"hljs-va=
riable">numHorizontalLines</span> <span class=3D"hljs-operator">=3D</span> =
getHeight() / gridSize;

                <span class=3D"hljs-comment">// Draw grid lines</span>
                g.setColor(Color.LIGHT_GRAY);
                <span class=3D"hljs-keyword">for</span> (<span class=3D"hlj=
s-type">int</span> <span class=3D"hljs-variable">x</span> <span class=3D"hl=
js-operator">=3D</span> <span class=3D"hljs-number">0</span>; x &lt;=3D num=
VerticalLines; x++) {
                    <span class=3D"hljs-type">int</span> <span class=3D"hlj=
s-variable">lineX</span> <span class=3D"hljs-operator">=3D</span> x * gridS=
ize;
                    g.drawLine(lineX, <span class=3D"hljs-number">0</span>,=
 lineX, getHeight());
                }
                <span class=3D"hljs-keyword">for</span> (<span class=3D"hlj=
s-type">int</span> <span class=3D"hljs-variable">y</span> <span class=3D"hl=
js-operator">=3D</span> <span class=3D"hljs-number">0</span>; y &lt;=3D num=
HorizontalLines; y++) {
                    <span class=3D"hljs-type">int</span> <span class=3D"hlj=
s-variable">lineY</span> <span class=3D"hljs-operator">=3D</span> y * gridS=
ize;
                    g.drawLine(<span class=3D"hljs-number">0</span>, lineY,=
 getWidth(), lineY);
                }
            }
        };

        panel.setPreferredSize(<span class=3D"hljs-keyword">new</span> <spa=
n class=3D"hljs-title class_">Dimension</span>(<span class=3D"hljs-number">=
800</span>, <span class=3D"hljs-number">600</span>));
        panel.addMouseListener(<span class=3D"hljs-keyword">new</span> <spa=
n class=3D"hljs-title class_">MouseAdapter</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">mousePressed</spa=
n><span class=3D"hljs-params">(MouseEvent e)</span> {
                startPoint =3D getNearestGridPoint(e.getPoint());
                endPoint =3D startPoint;
            }

            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">mouseReleased</sp=
an><span class=3D"hljs-params">(MouseEvent e)</span> {
                endPoint =3D getNearestGridPoint(e.getPoint());
                <span class=3D"hljs-keyword">if</span> (startPoint.x =3D=3D=
 endPoint.x || startPoint.y =3D=3D endPoint.y) {
                    drawElement(startPoint, endPoint);
                }
            }
        });

        panel.addMouseMotionListener(<span class=3D"hljs-keyword">new</span=
> <span class=3D"hljs-title class_">MouseMotionAdapter</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">mouseDragged</spa=
n><span class=3D"hljs-params">(MouseEvent e)</span> {
                <span class=3D"hljs-type">Point</span> <span class=3D"hljs-=
variable">currentPoint</span> <span class=3D"hljs-operator">=3D</span> getN=
earestGridPoint(e.getPoint());
                <span class=3D"hljs-keyword">if</span> (currentPoint.x =3D=
=3D startPoint.x || currentPoint.y =3D=3D startPoint.y) {
                    endPoint =3D currentPoint;
                    drawElement(startPoint, endPoint);
                }
            }
        });

        add(panel);
        setupMenuBar();
        setExtendedState(JFrame.MAXIMIZED_BOTH); <span class=3D"hljs-commen=
t">// Maximize the frame</span>
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(<span class=3D"hljs-literal">null</span>);
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">drawElement</span><span =
class=3D"hljs-params">(Point start, Point end)</span> {
        <span class=3D"hljs-keyword">if</span> (isInCanvasBounds(start) &am=
p;&amp; isInCanvasBounds(end)) {
            <span class=3D"hljs-type">Graphics2D</span> <span class=3D"hljs=
-variable">g2d</span> <span class=3D"hljs-operator">=3D</span> canvas.creat=
eGraphics();
            g2d.setColor(currentElementType.getColor());
            g2d.setStroke(<span class=3D"hljs-keyword">new</span> <span cla=
ss=3D"hljs-title class_">BasicStroke</span>(<span class=3D"hljs-number">2</=
span>));
            g2d.drawLine(start.x, start.y, end.x, end.y);
            g2d.dispose();
            repaint();
        }
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-type">b=
oolean</span> <span class=3D"hljs-title function_">isInCanvasBounds</span><=
span class=3D"hljs-params">(Point point)</span> {
        <span class=3D"hljs-keyword">return</span> point.x &gt;=3D <span cl=
ass=3D"hljs-number">0</span> &amp;&amp; point.x &lt; canvas.getWidth() &amp=
;&amp;
               point.y &gt;=3D <span class=3D"hljs-number">0</span> &amp;&a=
mp; point.y &lt; canvas.getHeight();
    }

    <span class=3D"hljs-keyword">private</span> Point <span class=3D"hljs-t=
itle function_">getNearestGridPoint</span><span class=3D"hljs-params">(Poin=
t point)</span> {
        <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">=
x</span> <span class=3D"hljs-operator">=3D</span> Math.round((<span class=
=3D"hljs-type">float</span>) point.x / gridSize) * gridSize;
        <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">=
y</span> <span class=3D"hljs-operator">=3D</span> Math.round((<span class=
=3D"hljs-type">float</span>) point.y / gridSize) * gridSize;
        <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-keyw=
ord">new</span> <span class=3D"hljs-title class_">Point</span>(x, y);
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">clearCanvas</span><span =
class=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">Graphics2D</span> <span class=3D"hljs-var=
iable">g2d</span> <span class=3D"hljs-operator">=3D</span> canvas.createGra=
phics();
        g2d.setComposite(AlphaComposite.Clear);
        g2d.fillRect(<span class=3D"hljs-number">0</span>, <span class=3D"h=
ljs-number">0</span>, canvas.getWidth(), canvas.getHeight());
        g2d.setComposite(AlphaComposite.SrcOver);
        g2d.dispose();
        repaint();
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">saveImage</span><span cl=
ass=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">JFileChooser</span> <span class=3D"hljs-v=
ariable">fileChooser</span> <span class=3D"hljs-operator">=3D</span> <span =
class=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JFileCh=
ooser</span>();
        fileChooser.setDialogTitle(<span class=3D"hljs-string">"Save Image"=
</span>);
        <span class=3D"hljs-keyword">if</span> (fileChooser.showSaveDialog(=
<span class=3D"hljs-built_in">this</span>) =3D=3D JFileChooser.APPROVE_OPTI=
ON) {
            <span class=3D"hljs-type">File</span> <span class=3D"hljs-varia=
ble">file</span> <span class=3D"hljs-operator">=3D</span> fileChooser.getSe=
lectedFile();
            <span class=3D"hljs-keyword">try</span> {
                ImageIO.write(canvas, <span class=3D"hljs-string">"PNG"</sp=
an>, file);
            } <span class=3D"hljs-keyword">catch</span> (IOException ex) {
                ex.printStackTrace();
            }
        }
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">setupMenuBar</span><span=
 class=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">JMenuBar</span> <span class=3D"hljs-varia=
ble">menuBar</span> <span class=3D"hljs-operator">=3D</span> <span class=3D=
"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuBar</span>=
();

        <span class=3D"hljs-type">JMenu</span> <span class=3D"hljs-variable=
">fileMenu</span> <span class=3D"hljs-operator">=3D</span> <span class=3D"h=
ljs-keyword">new</span> <span class=3D"hljs-title class_">JMenu</span>(<spa=
n class=3D"hljs-string">"File"</span>);
        <span class=3D"hljs-type">JMenuItem</span> <span class=3D"hljs-vari=
able">saveItem</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuItem</s=
pan>(<span class=3D"hljs-string">"Save"</span>);
        saveItem.addActionListener(e -&gt; saveImage());
        fileMenu.add(saveItem);

        <span class=3D"hljs-type">JMenuItem</span> <span class=3D"hljs-vari=
able">exitItem</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuItem</s=
pan>(<span class=3D"hljs-string">"Exit"</span>);
        exitItem.addActionListener(e -&gt; System.exit(<span class=3D"hljs-=
number">0</span>));
        fileMenu.add(exitItem);

        <span class=3D"hljs-type">JMenu</span> <span class=3D"hljs-variable=
">elementMenu</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenu</span>=
(<span class=3D"hljs-string">"Element"</span>);
        <span class=3D"hljs-type">ButtonGroup</span> <span class=3D"hljs-va=
riable">group</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">ButtonGroup<=
/span>();
        <span class=3D"hljs-keyword">for</span> (FloorElementType type : Fl=
oorElementType.values()) {
            <span class=3D"hljs-type">JRadioButtonMenuItem</span> <span cla=
ss=3D"hljs-variable">item</span> <span class=3D"hljs-operator">=3D</span> <=
span class=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JR=
adioButtonMenuItem</span>(type.name());
            item.addActionListener(e -&gt; currentElementType =3D type);
            group.add(item);
            elementMenu.add(item);
        }

        menuBar.add(fileMenu);
        menuBar.add(elementMenu);
        setJMenuBar(menuBar);
    }

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword"=
>static</span> <span class=3D"hljs-keyword">void</span> <span class=3D"hljs=
-title function_">main</span><span class=3D"hljs-params">(String[] args)</s=
pan> {
        SwingUtilities.invokeLater(() -&gt; <span class=3D"hljs-keyword">ne=
w</span> <span class=3D"hljs-title class_">App</span>().setVisible(<span cl=
ass=3D"hljs-literal">true</span>));
    }
}
</code></div></div></pre><p>This version ensures that the grid fills the en=
tire window based on its size.</p></div></div></div></div></div></div></div=
></div><div class=3D"w-full text-token-text-primary" data-testid=3D"convers=
ation-turn-26" style=3D"--avatar-color: #19c37d;"><div class=3D"px-4 py-2 j=
ustify-center text-base md:gap-6 m-auto"><div class=3D"flex flex-1 text-bas=
e mx-auto gap-3 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem] group"><div =
class=3D"flex-shrink-0 flex flex-col relative items-end"><div><div class=3D=
"pt-0.5"><div class=3D"gizmo-shadow-stroke flex h-6 w-6 items-center justif=
y-center overflow-hidden rounded-full"><div class=3D"relative p-1 rounded-s=
m h-9 w-9 text-white flex items-center justify-center" style=3D"background-=
color: rgb(121, 137, 255); width: 24px; height: 24px;"><svg stroke=3D"curre=
ntColor" fill=3D"none" stroke-width=3D"2" viewBox=3D"0 0 24 24" stroke-line=
cap=3D"round" stroke-linejoin=3D"round" class=3D"icon-sm" height=3D"1em" wi=
dth=3D"1em" xmlns=3D"http://www.w3.org/2000/svg"><path d=3D"M20 21v-2a4 4 0=
 0 0-4-4H8a4 4 0 0 0-4 4v2"></path><circle cx=3D"12" cy=3D"7" r=3D"4"></cir=
cle></svg></div></div></div></div></div><div class=3D"relative flex w-full =
flex-col"><div class=3D"font-semibold select-none">Anonymous</div><div clas=
s=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-f=
ull"><div data-message-author-role=3D"user" data-message-id=3D"aaa222a3-61d=
5-40ec-8e2f-b36e9ef494e9" class=3D"min-h-[20px] text-message flex flex-col =
items-start gap-3 whitespace-pre-wrap break-words [.text-message+&amp;]:mt-=
5 overflow-x-auto"><div class=3D"">Although it fills up the whole canvas, t=
here are places in the canvas where I cannot draw. Please fix this</div></d=
iv></div></div></div></div></div></div><div class=3D"w-full text-token-text=
-primary" data-testid=3D"conversation-turn-27" style=3D"--avatar-color: #19=
c37d;"><div class=3D"px-4 py-2 justify-center text-base md:gap-6 m-auto"><d=
iv class=3D"flex flex-1 text-base mx-auto gap-3 md:max-w-3xl lg:max-w-[40re=
m] xl:max-w-[48rem] group"><div class=3D"flex-shrink-0 flex flex-col relati=
ve items-end"><div><div class=3D"pt-0.5"><div class=3D"gizmo-shadow-stroke =
flex h-6 w-6 items-center justify-center overflow-hidden rounded-full"><div=
 class=3D"relative p-1 rounded-sm h-9 w-9 text-white flex items-center just=
ify-center" style=3D"background-color: rgb(25, 195, 125); width: 24px; heig=
ht: 24px;"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=3D"no=
ne" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-sm" role=3D"img"><te=
xt x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C37.980=
8 15.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.91076 3=
6.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941=
 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.3=
6341C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044 14=
.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.4781=
5C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.=
0782 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0.94=
4492 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 =
2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.=
1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789=
 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21=
.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38.57=
72C30.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 =
32.6547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.845=
8 26.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.4544 3=
7.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.=
1501C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 =
31.3019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5=
549 30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 =
21.0359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32.37=
5 29.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.4978 3=
7.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C5.5=
5718 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.8408=
 14.1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.724=
8L24.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24=
.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34.74=
16 12.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 =
31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.=
19885 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.2533=
4 20.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.9404L1=
8.5723 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28.51=
73C15.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.32135 2=
2.8601 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29=
707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872=
 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12=
.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.319=
4 21.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35=
.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30.59=
47 32.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.7328 3=
2.4332 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.012=
8C35.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 10.=
1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.796=
3 10.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.0837 1=
1.9405C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4=
053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077=
 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826 12=
.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8=
576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254=
 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12=
.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.994=
64 19.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4=
.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14.53=
66 9.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L=
14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.=
4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentColor"></path></svg></=
div></div></div></div></div><div class=3D"relative flex w-full flex-col age=
nt-turn"><div class=3D"font-semibold select-none">ChatGPT</div><div class=
=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-fu=
ll"><div data-message-author-role=3D"assistant" data-message-id=3D"e827eac6=
-d07a-4959-b1e8-dd103cbb73e4" class=3D"min-h-[20px] text-message flex flex-=
col items-start gap-3 whitespace-pre-wrap break-words [.text-message+&amp;]=
:mt-5 overflow-x-auto"><div class=3D"markdown prose w-full break-words dark=
:prose-invert dark"><p>To allow drawing on the entire canvas, we need to ad=
just the calculation of the grid lines to cover the entire canvas area, inc=
luding the edges. We also need to adjust the calculation of the nearest gri=
d point to ensure that it falls within the canvas boundaries. Here's the up=
dated <code>paintComponent</code> method and <code>getNearestGridPoint</cod=
e> method:</p><pre><div class=3D"dark bg-gray-950 rounded-md"><div class=3D=
"flex items-center relative text-token-text-secondary bg-token-main-surface=
-secondary px-4 py-2 text-xs font-sans justify-between rounded-t-md"><span>=
java</span><span class=3D"" data-state=3D"closed"><button class=3D"flex gap=
-1 items-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=
=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-sm"><path fill=
-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M12 4C10.8954 4 10 4.89543 10 =
6H14C14 4.89543 13.1046 4 12 4ZM8.53513 4C9.22675 2.8044 10.5194 2 12 2C13.=
4806 2 14.7733 2.8044 15.4649 4H17C18.6569 4 20 5.34315 20 7V19C20 20.6569 =
18.6569 22 17 22H7C5.34315 22 4 20.6569 4 19V7C4 5.34315 5.34315 4 7 4H8.53=
513ZM8 6H7C6.44772 6 6 6.44772 6 7V19C6 19.5523 6.44772 20 7 20H17C17.5523 =
20 18 19.5523 18 19V7C18 6.44772 17.5523 6 17 6H16C16 7.10457 15.1046 8 14 =
8H10C8.89543 8 8 7.10457 8 6Z" fill=3D"currentColor"></path></svg>Copy code=
</button></span></div><div class=3D"p-4 overflow-y-auto"><code class=3D"!wh=
itespace-pre hljs language-java"><span class=3D"hljs-meta">@Override</span>
<span class=3D"hljs-keyword">protected</span> <span class=3D"hljs-keyword">=
void</span> <span class=3D"hljs-title function_">paintComponent</span><span=
 class=3D"hljs-params">(Graphics g)</span> {
    <span class=3D"hljs-built_in">super</span>.paintComponent(g);
    g.drawImage(canvas, <span class=3D"hljs-number">0</span>, <span class=
=3D"hljs-number">0</span>, <span class=3D"hljs-literal">null</span>);

    <span class=3D"hljs-comment">// Calculate the number of grid lines need=
ed to cover the width and height of the canvas</span>
    <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">numV=
erticalLines</span> <span class=3D"hljs-operator">=3D</span> (getWidth() + =
gridSize - <span class=3D"hljs-number">1</span>) / gridSize; <span class=3D=
"hljs-comment">// Adjusted for entire canvas coverage</span>
    <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">numH=
orizontalLines</span> <span class=3D"hljs-operator">=3D</span> (getHeight()=
 + gridSize - <span class=3D"hljs-number">1</span>) / gridSize; <span class=
=3D"hljs-comment">// Adjusted for entire canvas coverage</span>

    <span class=3D"hljs-comment">// Draw grid lines</span>
    g.setColor(Color.LIGHT_GRAY);
    <span class=3D"hljs-keyword">for</span> (<span class=3D"hljs-type">int<=
/span> <span class=3D"hljs-variable">x</span> <span class=3D"hljs-operator"=
>=3D</span> <span class=3D"hljs-number">0</span>; x &lt;=3D numVerticalLine=
s; x++) {
        <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">=
lineX</span> <span class=3D"hljs-operator">=3D</span> x * gridSize;
        g.drawLine(lineX, <span class=3D"hljs-number">0</span>, lineX, getH=
eight());
    }
    <span class=3D"hljs-keyword">for</span> (<span class=3D"hljs-type">int<=
/span> <span class=3D"hljs-variable">y</span> <span class=3D"hljs-operator"=
>=3D</span> <span class=3D"hljs-number">0</span>; y &lt;=3D numHorizontalLi=
nes; y++) {
        <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">=
lineY</span> <span class=3D"hljs-operator">=3D</span> y * gridSize;
        g.drawLine(<span class=3D"hljs-number">0</span>, lineY, getWidth(),=
 lineY);
    }
}

<span class=3D"hljs-keyword">private</span> Point <span class=3D"hljs-title=
 function_">getNearestGridPoint</span><span class=3D"hljs-params">(Point po=
int)</span> {
    <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">x</s=
pan> <span class=3D"hljs-operator">=3D</span> Math.round((<span class=3D"hl=
js-type">float</span>) point.x / gridSize) * gridSize;
    <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">y</s=
pan> <span class=3D"hljs-operator">=3D</span> Math.round((<span class=3D"hl=
js-type">float</span>) point.y / gridSize) * gridSize;

    <span class=3D"hljs-comment">// Adjust the point to stay within canvas =
bounds</span>
    x =3D Math.max(<span class=3D"hljs-number">0</span>, Math.min(x, canvas=
.getWidth() - gridSize));
    y =3D Math.max(<span class=3D"hljs-number">0</span>, Math.min(y, canvas=
.getHeight() - gridSize));

    <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-keyword"=
>new</span> <span class=3D"hljs-title class_">Point</span>(x, y);
}
</code></div></div></pre><p>With these adjustments, the grid lines will cov=
er the entire canvas area, and the nearest grid point calculation will ensu=
re that drawing is possible on every part of the canvas.</p></div></div></d=
iv></div></div></div></div></div><div class=3D"w-full text-token-text-prima=
ry" data-testid=3D"conversation-turn-28" style=3D"--avatar-color: #19c37d;"=
><div class=3D"px-4 py-2 justify-center text-base md:gap-6 m-auto"><div cla=
ss=3D"flex flex-1 text-base mx-auto gap-3 md:max-w-3xl lg:max-w-[40rem] xl:=
max-w-[48rem] group"><div class=3D"flex-shrink-0 flex flex-col relative ite=
ms-end"><div><div class=3D"pt-0.5"><div class=3D"gizmo-shadow-stroke flex h=
-6 w-6 items-center justify-center overflow-hidden rounded-full"><div class=
=3D"relative p-1 rounded-sm h-9 w-9 text-white flex items-center justify-ce=
nter" style=3D"background-color: rgb(121, 137, 255); width: 24px; height: 2=
4px;"><svg stroke=3D"currentColor" fill=3D"none" stroke-width=3D"2" viewBox=
=3D"0 0 24 24" stroke-linecap=3D"round" stroke-linejoin=3D"round" class=3D"=
icon-sm" height=3D"1em" width=3D"1em" xmlns=3D"http://www.w3.org/2000/svg">=
<path d=3D"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path><circle cx=3D"=
12" cy=3D"7" r=3D"4"></circle></svg></div></div></div></div></div><div clas=
s=3D"relative flex w-full flex-col"><div class=3D"font-semibold select-none=
">Anonymous</div><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex =
flex-grow flex-col max-w-full"><div data-message-author-role=3D"user" data-=
message-id=3D"aaa2c8de-f112-4168-9339-0f3b40916ee5" class=3D"min-h-[20px] t=
ext-message flex flex-col items-start gap-3 whitespace-pre-wrap break-words=
 [.text-message+&amp;]:mt-5 overflow-x-auto"><div class=3D"">Show me the wh=
ole file</div></div></div></div></div></div></div></div><div class=3D"w-ful=
l text-token-text-primary" data-testid=3D"conversation-turn-29" style=3D"--=
avatar-color: #19c37d;"><div class=3D"px-4 py-2 justify-center text-base md=
:gap-6 m-auto"><div class=3D"flex flex-1 text-base mx-auto gap-3 md:max-w-3=
xl lg:max-w-[40rem] xl:max-w-[48rem] group"><div class=3D"flex-shrink-0 fle=
x flex-col relative items-end"><div><div class=3D"pt-0.5"><div class=3D"giz=
mo-shadow-stroke flex h-6 w-6 items-center justify-center overflow-hidden r=
ounded-full"><div class=3D"relative p-1 rounded-sm h-9 w-9 text-white flex =
items-center justify-center" style=3D"background-color: rgb(25, 195, 125); =
width: 24px; height: 24px;"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 =
41 41" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-sm"=
 role=3D"img"><text x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.53=
24 16.8707C37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 =
37.3934 9.91076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.498=
5C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.=
94125 22.4257 1.36341C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C16=
.1708 0.495044 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44=
666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10=
.0087 2.73073 11.0782 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.72=
1698 18.4228C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759=
 2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32=
.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.890=
7 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C1=
9.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8=
321 28.4418 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027=
 33.2332 34.8167 32.6547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7=
752 28.684C39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 =
38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37=
.2733 17.6994 36.1501C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004=
 31.4156C26.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.=
5563 30.5124 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541=
 21.0198 29.9656 21.0359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3=
889C29.9842 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 =
37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.=
49804 25.9832C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.724=
8C13.8975 30.8408 14.1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.84=
08 15.0073 30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 2=
4.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7=
497C14.9096 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785=
 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8=
.19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.193=
51 20.0378 8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 =
8.84863 20.9404L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5=
155 15.1505 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 =
23.8557C5.32135 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.3=
0624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.498=
1C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 1=
2.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.66=
06 20.1613C37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 3=
6.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6=
641C32.6047 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 =
32.5474 20.7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.055=
6ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 1=
0.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.99=
48 10.1554 25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 =
11.9585 16.0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.=
1719 7.25025C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.3158=
9 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 1=
0.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.=
8752 19.9981C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.944=
1 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 1=
1.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21=
869 17.8524 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 =
4.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7=
025 9.69878 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877=
 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17=
.9975V22.9985L20.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentColor=
"></path></svg></div></div></div></div></div><div class=3D"relative flex w-=
full flex-col agent-turn"><div class=3D"font-semibold select-none">ChatGPT<=
/div><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow fl=
ex-col max-w-full"><div data-message-author-role=3D"assistant" data-message=
-id=3D"ce59bd94-e6be-4a68-bd76-327205ac0682" class=3D"min-h-[20px] text-mes=
sage flex flex-col items-start gap-3 whitespace-pre-wrap break-words [.text=
-message+&amp;]:mt-5 overflow-x-auto"><div class=3D"markdown prose w-full b=
reak-words dark:prose-invert dark"><p>Here's the complete <code>App.java</c=
ode> file with the adjustments to ensure that drawing is possible on every =
part of the canvas:</p><pre><div class=3D"dark bg-gray-950 rounded-md"><div=
 class=3D"flex items-center relative text-token-text-secondary bg-token-mai=
n-surface-secondary px-4 py-2 text-xs font-sans justify-between rounded-t-m=
d"><span>java</span><span class=3D"" data-state=3D"closed"><button class=3D=
"flex gap-1 items-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24=
 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-sm"><=
path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M12 4C10.8954 4 10 4.=
89543 10 6H14C14 4.89543 13.1046 4 12 4ZM8.53513 4C9.22675 2.8044 10.5194 2=
 12 2C13.4806 2 14.7733 2.8044 15.4649 4H17C18.6569 4 20 5.34315 20 7V19C20=
 20.6569 18.6569 22 17 22H7C5.34315 22 4 20.6569 4 19V7C4 5.34315 5.34315 4=
 7 4H8.53513ZM8 6H7C6.44772 6 6 6.44772 6 7V19C6 19.5523 6.44772 20 7 20H17=
C17.5523 20 18 19.5523 18 19V7C18 6.44772 17.5523 6 17 6H16C16 7.10457 15.1=
046 8 14 8H10C8.89543 8 8 7.10457 8 6Z" fill=3D"currentColor"></path></svg>=
Copy code</button></span></div><div class=3D"p-4 overflow-y-auto"><code cla=
ss=3D"!whitespace-pre hljs language-java"><span class=3D"hljs-keyword">impo=
rt</span> javax.imageio.ImageIO;
<span class=3D"hljs-keyword">import</span> javax.swing.*;
<span class=3D"hljs-keyword">import</span> java.awt.*;
<span class=3D"hljs-keyword">import</span> java.awt.event.*;
<span class=3D"hljs-keyword">import</span> java.awt.image.BufferedImage;
<span class=3D"hljs-keyword">import</span> java.io.File;
<span class=3D"hljs-keyword">import</span> java.io.IOException;

<span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword">cla=
ss</span> <span class=3D"hljs-title class_">App</span> <span class=3D"hljs-=
keyword">extends</span> <span class=3D"hljs-title class_">JFrame</span> {

    <span class=3D"hljs-keyword">private</span> BufferedImage canvas;
    <span class=3D"hljs-keyword">private</span> Point startPoint;
    <span class=3D"hljs-keyword">private</span> Point endPoint;
    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-type">i=
nt</span> <span class=3D"hljs-variable">gridSize</span> <span class=3D"hljs=
-operator">=3D</span> <span class=3D"hljs-number">20</span>; <span class=3D=
"hljs-comment">// Size of grid cells</span>
    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-type">F=
loorElementType</span> <span class=3D"hljs-variable">currentElementType</sp=
an> <span class=3D"hljs-operator">=3D</span> FloorElementType.WALL; <span c=
lass=3D"hljs-comment">// Default to drawing walls</span>

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword"=
>enum</span> <span class=3D"hljs-title class_">FloorElementType</span> {
        WALL(Color.BLACK),
        WINDOW(Color.BLUE),
        DOOR(Color.RED);

        <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-key=
word">final</span> Color color;

        FloorElementType(Color color) {
            <span class=3D"hljs-built_in">this</span>.color =3D color;
        }

        <span class=3D"hljs-keyword">public</span> Color <span class=3D"hlj=
s-title function_">getColor</span><span class=3D"hljs-params">()</span> {
            <span class=3D"hljs-keyword">return</span> color;
        }
    }

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-title fu=
nction_">App</span><span class=3D"hljs-params">()</span> {
        <span class=3D"hljs-built_in">super</span>(<span class=3D"hljs-stri=
ng">"Floor Plan Designer"</span>);
        initUI();
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">initUI</span><span class=
=3D"hljs-params">()</span> {
        canvas =3D <span class=3D"hljs-keyword">new</span> <span class=3D"h=
ljs-title class_">BufferedImage</span>(<span class=3D"hljs-number">800</spa=
n>, <span class=3D"hljs-number">600</span>, BufferedImage.TYPE_INT_ARGB);
        clearCanvas();

        <span class=3D"hljs-type">JPanel</span> <span class=3D"hljs-variabl=
e">panel</span> <span class=3D"hljs-operator">=3D</span> <span class=3D"hlj=
s-keyword">new</span> <span class=3D"hljs-title class_">JPanel</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">protected</span> <span class=3D"hl=
js-keyword">void</span> <span class=3D"hljs-title function_">paintComponent=
</span><span class=3D"hljs-params">(Graphics g)</span> {
                <span class=3D"hljs-built_in">super</span>.paintComponent(g=
);
                g.drawImage(canvas, <span class=3D"hljs-number">0</span>, <=
span class=3D"hljs-number">0</span>, <span class=3D"hljs-literal">null</spa=
n>);

                <span class=3D"hljs-comment">// Calculate the number of gri=
d lines needed to cover the width and height of the canvas</span>
                <span class=3D"hljs-type">int</span> <span class=3D"hljs-va=
riable">numVerticalLines</span> <span class=3D"hljs-operator">=3D</span> (g=
etWidth() + gridSize - <span class=3D"hljs-number">1</span>) / gridSize; <s=
pan class=3D"hljs-comment">// Adjusted for entire canvas coverage</span>
                <span class=3D"hljs-type">int</span> <span class=3D"hljs-va=
riable">numHorizontalLines</span> <span class=3D"hljs-operator">=3D</span> =
(getHeight() + gridSize - <span class=3D"hljs-number">1</span>) / gridSize;=
 <span class=3D"hljs-comment">// Adjusted for entire canvas coverage</span>

                <span class=3D"hljs-comment">// Draw grid lines</span>
                g.setColor(Color.LIGHT_GRAY);
                <span class=3D"hljs-keyword">for</span> (<span class=3D"hlj=
s-type">int</span> <span class=3D"hljs-variable">x</span> <span class=3D"hl=
js-operator">=3D</span> <span class=3D"hljs-number">0</span>; x &lt;=3D num=
VerticalLines; x++) {
                    <span class=3D"hljs-type">int</span> <span class=3D"hlj=
s-variable">lineX</span> <span class=3D"hljs-operator">=3D</span> x * gridS=
ize;
                    g.drawLine(lineX, <span class=3D"hljs-number">0</span>,=
 lineX, getHeight());
                }
                <span class=3D"hljs-keyword">for</span> (<span class=3D"hlj=
s-type">int</span> <span class=3D"hljs-variable">y</span> <span class=3D"hl=
js-operator">=3D</span> <span class=3D"hljs-number">0</span>; y &lt;=3D num=
HorizontalLines; y++) {
                    <span class=3D"hljs-type">int</span> <span class=3D"hlj=
s-variable">lineY</span> <span class=3D"hljs-operator">=3D</span> y * gridS=
ize;
                    g.drawLine(<span class=3D"hljs-number">0</span>, lineY,=
 getWidth(), lineY);
                }
            }
        };

        panel.setPreferredSize(<span class=3D"hljs-keyword">new</span> <spa=
n class=3D"hljs-title class_">Dimension</span>(<span class=3D"hljs-number">=
800</span>, <span class=3D"hljs-number">600</span>));
        panel.addMouseListener(<span class=3D"hljs-keyword">new</span> <spa=
n class=3D"hljs-title class_">MouseAdapter</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">mousePressed</spa=
n><span class=3D"hljs-params">(MouseEvent e)</span> {
                startPoint =3D getNearestGridPoint(e.getPoint());
                endPoint =3D startPoint;
            }

            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">mouseReleased</sp=
an><span class=3D"hljs-params">(MouseEvent e)</span> {
                endPoint =3D getNearestGridPoint(e.getPoint());
                <span class=3D"hljs-keyword">if</span> (startPoint.x =3D=3D=
 endPoint.x || startPoint.y =3D=3D endPoint.y) {
                    drawElement(startPoint, endPoint);
                }
            }
        });

        panel.addMouseMotionListener(<span class=3D"hljs-keyword">new</span=
> <span class=3D"hljs-title class_">MouseMotionAdapter</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">mouseDragged</spa=
n><span class=3D"hljs-params">(MouseEvent e)</span> {
                <span class=3D"hljs-type">Point</span> <span class=3D"hljs-=
variable">currentPoint</span> <span class=3D"hljs-operator">=3D</span> getN=
earestGridPoint(e.getPoint());
                <span class=3D"hljs-keyword">if</span> (currentPoint.x =3D=
=3D startPoint.x || currentPoint.y =3D=3D startPoint.y) {
                    endPoint =3D currentPoint;
                    drawElement(startPoint, endPoint);
                }
            }
        });

        add(panel);
        setupMenuBar();
        setExtendedState(JFrame.MAXIMIZED_BOTH); <span class=3D"hljs-commen=
t">// Maximize the frame</span>
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(<span class=3D"hljs-literal">null</span>);
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">drawElement</span><span =
class=3D"hljs-params">(Point start, Point end)</span> {
        <span class=3D"hljs-keyword">if</span> (isInCanvasBounds(start) &am=
p;&amp; isInCanvasBounds(end)) {
            <span class=3D"hljs-type">Graphics2D</span> <span class=3D"hljs=
-variable">g2d</span> <span class=3D"hljs-operator">=3D</span> canvas.creat=
eGraphics();
            g2d.setColor(currentElementType.getColor());
            g2d.setStroke(<span class=3D"hljs-keyword">new</span> <span cla=
ss=3D"hljs-title class_">BasicStroke</span>(<span class=3D"hljs-number">2</=
span>));
            g2d.drawLine(start.x, start.y, end.x, end.y);
            g2d.dispose();
            repaint();
        }
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-type">b=
oolean</span> <span class=3D"hljs-title function_">isInCanvasBounds</span><=
span class=3D"hljs-params">(Point point)</span> {
        <span class=3D"hljs-keyword">return</span> point.x &gt;=3D <span cl=
ass=3D"hljs-number">0</span> &amp;&amp; point.x &lt; canvas.getWidth() &amp=
;&amp;
               point.y &gt;=3D <span class=3D"hljs-number">0</span> &amp;&a=
mp; point.y &lt; canvas.getHeight();
    }

    <span class=3D"hljs-keyword">private</span> Point <span class=3D"hljs-t=
itle function_">getNearestGridPoint</span><span class=3D"hljs-params">(Poin=
t point)</span> {
        <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">=
x</span> <span class=3D"hljs-operator">=3D</span> Math.round((<span class=
=3D"hljs-type">float</span>) point.x / gridSize) * gridSize;
        <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">=
y</span> <span class=3D"hljs-operator">=3D</span> Math.round((<span class=
=3D"hljs-type">float</span>) point.y / gridSize) * gridSize;

        <span class=3D"hljs-comment">// Adjust the point to stay within can=
vas bounds</span>
        x =3D Math.max(<span class=3D"hljs-number">0</span>, Math.min(x, ca=
nvas.getWidth() - gridSize));
        y =3D Math.max(<span class=3D"hljs-number">0</span>, Math.min(y, ca=
nvas.getHeight() - gridSize));

        <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-keyw=
ord">new</span> <span class=3D"hljs-title class_">Point</span>(x, y);
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">clearCanvas</span><span =
class=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">Graphics2D</span> <span class=3D"hljs-var=
iable">g2d</span> <span class=3D"hljs-operator">=3D</span> canvas.createGra=
phics();
        g2d.setComposite(AlphaComposite.Clear);
        g2d.fillRect(<span class=3D"hljs-number">0</span>, <span class=3D"h=
ljs-number">0</span>, canvas.getWidth(), canvas.getHeight());
        g2d.setComposite(AlphaComposite.SrcOver);
        g2d.dispose();
        repaint();
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">saveImage</span><span cl=
ass=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">JFileChooser</span> <span class=3D"hljs-v=
ariable">fileChooser</span> <span class=3D"hljs-operator">=3D</span> <span =
class=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JFileCh=
ooser</span>();
        fileChooser.setDialogTitle(<span class=3D"hljs-string">"Save Image"=
</span>);
        <span class=3D"hljs-keyword">if</span> (fileChooser.showSaveDialog(=
<span class=3D"hljs-built_in">this</span>) =3D=3D JFileChooser.APPROVE_OPTI=
ON) {
            <span class=3D"hljs-type">File</span> <span class=3D"hljs-varia=
ble">file</span> <span class=3D"hljs-operator">=3D</span> fileChooser.getSe=
lectedFile();
            <span class=3D"hljs-keyword">try</span> {
                ImageIO.write(canvas, <span class=3D"hljs-string">"PNG"</sp=
an>, file);
            } <span class=3D"hljs-keyword">catch</span> (IOException ex) {
                ex.printStackTrace();
            }
        }
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">setupMenuBar</span><span=
 class=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">JMenuBar</span> <span class=3D"hljs-varia=
ble">menuBar</span> <span class=3D"hljs-operator">=3D</span> <span class=3D=
"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuBar</span>=
();

        <span class=3D"hljs-type">JMenu</span> <span class=3D"hljs-variable=
">fileMenu</span> <span class=3D"hljs-operator">=3D</span> <span class=3D"h=
ljs-keyword">new</span> <span class=3D"hljs-title class_">JMenu</span>(<spa=
n class=3D"hljs-string">"File"</span>);
        <span class=3D"hljs-type">JMenuItem</span> <span class=3D"hljs-vari=
able">saveItem</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuItem</s=
pan>(<span class=3D"hljs-string">"Save"</span>);
        saveItem.addActionListener(e -&gt; saveImage());
        fileMenu.add(saveItem);

        <span class=3D"hljs-type">JMenuItem</span> <span class=3D"hljs-vari=
able">exitItem</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuItem</s=
pan>(<span class=3D"hljs-string">"Exit"</span>);
        exitItem.addActionListener(e -&gt; System.exit(<span class=3D"hljs-=
number">0</span>));
        fileMenu.add(exitItem);

        <span class=3D"hljs-type">JMenu</span> <span class=3D"hljs-variable=
">elementMenu</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenu</span>=
(<span class=3D"hljs-string">"Element"</span>);
        <span class=3D"hljs-type">ButtonGroup</span> <span class=3D"hljs-va=
riable">group</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">ButtonGroup<=
/span>();
        <span class=3D"hljs-keyword">for</span> (FloorElementType type : Fl=
oorElementType.values()) {
            <span class=3D"hljs-type">JRadioButtonMenuItem</span> <span cla=
ss=3D"hljs-variable">item</span> <span class=3D"hljs-operator">=3D</span> <=
span class=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JR=
adioButtonMenuItem</span>(type.name());
            item.addActionListener(e -&gt; currentElementType =3D type);
            group.add(item);
            elementMenu.add(item);
        }

        menuBar.add(fileMenu);
        menuBar.add(elementMenu);
        setJMenuBar(menuBar);
    }

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword"=
>static</span> <span class=3D"hljs-keyword">void</span> <span class=3D"hljs=
-title function_">main</span><span class=3D"hljs-params">(String[] args)</s=
pan> {
        SwingUtilities.invokeLater(() -&gt; <span class=3D"hljs-keyword">ne=
w</span> <span class=3D"hljs-title class_">App</span>().setVisible(<span cl=
ass=3D"hljs-literal">true</span>));
    }
}
</code></div></div></pre><p>With these adjustments, drawing is possible on =
every part of the canvas.</p></div></div></div></div></div></div></div></di=
v><div class=3D"w-full text-token-text-primary" data-testid=3D"conversation=
-turn-30" style=3D"--avatar-color: #19c37d;"><div class=3D"px-4 py-2 justif=
y-center text-base md:gap-6 m-auto"><div class=3D"flex flex-1 text-base mx-=
auto gap-3 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem] group"><div class=
=3D"flex-shrink-0 flex flex-col relative items-end"><div><div class=3D"pt-0=
.5"><div class=3D"gizmo-shadow-stroke flex h-6 w-6 items-center justify-cen=
ter overflow-hidden rounded-full"><div class=3D"relative p-1 rounded-sm h-9=
 w-9 text-white flex items-center justify-center" style=3D"background-color=
: rgb(121, 137, 255); width: 24px; height: 24px;"><svg stroke=3D"currentCol=
or" fill=3D"none" stroke-width=3D"2" viewBox=3D"0 0 24 24" stroke-linecap=
=3D"round" stroke-linejoin=3D"round" class=3D"icon-sm" height=3D"1em" width=
=3D"1em" xmlns=3D"http://www.w3.org/2000/svg"><path d=3D"M20 21v-2a4 4 0 0 =
0-4-4H8a4 4 0 0 0-4 4v2"></path><circle cx=3D"12" cy=3D"7" r=3D"4"></circle=
></svg></div></div></div></div></div><div class=3D"relative flex w-full fle=
x-col"><div class=3D"font-semibold select-none">Anonymous</div><div class=
=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-fu=
ll"><div data-message-author-role=3D"user" data-message-id=3D"aaa29638-be1a=
-4a9c-8dd7-2fb4c8cffec4" class=3D"min-h-[20px] text-message flex flex-col i=
tems-start gap-3 whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5=
 overflow-x-auto"><div class=3D"">There is still a good portion of the canv=
as that I cannot draw in. Please redo functions if necessary</div></div></d=
iv></div></div></div></div></div><div class=3D"w-full text-token-text-prima=
ry" data-testid=3D"conversation-turn-31" style=3D"--avatar-color: #19c37d;"=
><div class=3D"px-4 py-2 justify-center text-base md:gap-6 m-auto"><div cla=
ss=3D"flex flex-1 text-base mx-auto gap-3 md:max-w-3xl lg:max-w-[40rem] xl:=
max-w-[48rem] group"><div class=3D"flex-shrink-0 flex flex-col relative ite=
ms-end"><div><div class=3D"pt-0.5"><div class=3D"gizmo-shadow-stroke flex h=
-6 w-6 items-center justify-center overflow-hidden rounded-full"><div class=
=3D"relative p-1 rounded-sm h-9 w-9 text-white flex items-center justify-ce=
nter" style=3D"background-color: rgb(25, 195, 125); width: 24px; height: 24=
px;"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xm=
lns=3D"http://www.w3.org/2000/svg" class=3D"icon-sm" role=3D"img"><text x=
=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C37.9808 15=
.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.67=
6 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.=
9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341=
C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044 14.089=
3 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.=
30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782=
 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0.944492=
 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81=
182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659=
 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.=
1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21.075=
5 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C3=
0.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6=
547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26=
.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.53=
24 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501=
C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3=
019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 =
30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0=
359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29=
.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.88=
49ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718=
 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.=
1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24=
.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24.711=
5 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 1=
2.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0=
064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.1988=
5 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20=
.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.9404L18.57=
23 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C1=
5.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.86=
01 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 =
13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.=
6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12.487=
9L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21=
.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35.974=
3 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 3=
2.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.43=
32 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35=
.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554=
 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10=
.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.94=
05C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 =
6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.=
2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826 12.166=
7 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 =
19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.=
8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12.746=
6 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 1=
9.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4.883=
79 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9=
.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2=
424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018=
 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentColor"></path></svg></div>=
</div></div></div></div><div class=3D"relative flex w-full flex-col agent-t=
urn"><div class=3D"font-semibold select-none">ChatGPT</div><div class=3D"fl=
ex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"><d=
iv data-message-author-role=3D"assistant" data-message-id=3D"e3da1a36-a2bd-=
4b62-8593-594c868e02bc" class=3D"text-message flex flex-col items-start gap=
-3 whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 overflow-x-au=
to"><div class=3D"markdown prose w-full break-words dark:prose-invert dark"=
><p>To ensure that drawing is possible on every part of the canvas, we need=
 to adjust the calculation of the grid lines to cover the entire canvas are=
a, including the edges. We also need to adjust the calculation of the neare=
st grid point to ensure that it falls within the canvas boundaries. Here's =
the updated <code>paintComponent</code> method and <code>getNearestGridPoin=
t</code> method:</p><pre><div class=3D"dark bg-gray-950 rounded-md"><div cl=
ass=3D"flex items-center relative text-token-text-secondary bg-token-main-s=
urface-secondary px-4 py-2 text-xs font-sans justify-between rounded-t-md">=
<span>java</span><span class=3D"" data-state=3D"closed"><button class=3D"fl=
ex gap-1 items-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24=
" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-sm"><pat=
h fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M12 4C10.8954 4 10 4.895=
43 10 6H14C14 4.89543 13.1046 4 12 4ZM8.53513 4C9.22675 2.8044 10.5194 2 12=
 2C13.4806 2 14.7733 2.8044 15.4649 4H17C18.6569 4 20 5.34315 20 7V19C20 20=
.6569 18.6569 22 17 22H7C5.34315 22 4 20.6569 4 19V7C4 5.34315 5.34315 4 7 =
4H8.53513ZM8 6H7C6.44772 6 6 6.44772 6 7V19C6 19.5523 6.44772 20 7 20H17C17=
.5523 20 18 19.5523 18 19V7C18 6.44772 17.5523 6 17 6H16C16 7.10457 15.1046=
 8 14 8H10C8.89543 8 8 7.10457 8 6Z" fill=3D"currentColor"></path></svg>Cop=
y code</button></span></div><div class=3D"p-4 overflow-y-auto"><code class=
=3D"!whitespace-pre hljs language-java"><span class=3D"hljs-keyword">import=
</span> javax.imageio.ImageIO;
<span class=3D"hljs-keyword">import</span> javax.swing.*;
<span class=3D"hljs-keyword">import</span> java.awt.*;
<span class=3D"hljs-keyword">import</span> java.awt.event.*;
<span class=3D"hljs-keyword">import</span> java.awt.image.BufferedImage;
<span class=3D"hljs-keyword">import</span> java.io.File;
<span class=3D"hljs-keyword">import</span> java.io.IOException;

<span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword">cla=
ss</span> <span class=3D"hljs-title class_">App</span> <span class=3D"hljs-=
keyword">extends</span> <span class=3D"hljs-title class_">JFrame</span> {

    <span class=3D"hljs-keyword">private</span> BufferedImage canvas;
    <span class=3D"hljs-keyword">private</span> Point startPoint;
    <span class=3D"hljs-keyword">private</span> Point endPoint;
    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-type">i=
nt</span> <span class=3D"hljs-variable">gridSize</span> <span class=3D"hljs=
-operator">=3D</span> <span class=3D"hljs-number">20</span>; <span class=3D=
"hljs-comment">// Size of grid cells</span>
    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-type">F=
loorElementType</span> <span class=3D"hljs-variable">currentElementType</sp=
an> <span class=3D"hljs-operator">=3D</span> FloorElementType.WALL; <span c=
lass=3D"hljs-comment">// Default to drawing walls</span>

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword"=
>enum</span> <span class=3D"hljs-title class_">FloorElementType</span> {
        WALL(Color.BLACK),
        WINDOW(Color.BLUE),
        DOOR(Color.RED);

        <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-key=
word">final</span> Color color;

        FloorElementType(Color color) {
            <span class=3D"hljs-built_in">this</span>.color =3D color;
        }

        <span class=3D"hljs-keyword">public</span> Color <span class=3D"hlj=
s-title function_">getColor</span><span class=3D"hljs-params">()</span> {
            <span class=3D"hljs-keyword">return</span> color;
        }
    }

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-title fu=
nction_">App</span><span class=3D"hljs-params">()</span> {
        <span class=3D"hljs-built_in">super</span>(<span class=3D"hljs-stri=
ng">"Floor Plan Designer"</span>);
        initUI();
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">initUI</span><span class=
=3D"hljs-params">()</span> {
        canvas =3D <span class=3D"hljs-keyword">new</span> <span class=3D"h=
ljs-title class_">BufferedImage</span>(<span class=3D"hljs-number">800</spa=
n>, <span class=3D"hljs-number">600</span>, BufferedImage.TYPE_INT_ARGB);
        clearCanvas();

        <span class=3D"hljs-type">JPanel</span> <span class=3D"hljs-variabl=
e">panel</span> <span class=3D"hljs-operator">=3D</span> <span class=3D"hlj=
s-keyword">new</span> <span class=3D"hljs-title class_">JPanel</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">protected</span> <span class=3D"hl=
js-keyword">void</span> <span class=3D"hljs-title function_">paintComponent=
</span><span class=3D"hljs-params">(Graphics g)</span> {
                <span class=3D"hljs-built_in">super</span>.paintComponent(g=
);
                g.drawImage(canvas, <span class=3D"hljs-number">0</span>, <=
span class=3D"hljs-number">0</span>, <span class=3D"hljs-literal">null</spa=
n>);

                <span class=3D"hljs-comment">// Draw grid lines</span>
                g.setColor(Color.LIGHT_GRAY);
                <span class=3D"hljs-keyword">for</span> (<span class=3D"hlj=
s-type">int</span> <span class=3D"hljs-variable">x</span> <span class=3D"hl=
js-operator">=3D</span> <span class=3D"hljs-number">0</span>; x &lt; canvas=
.getWidth(); x +=3D gridSize) {
                    g.drawLine(x, <span class=3D"hljs-number">0</span>, x, =
canvas.getHeight());
                }
                <span class=3D"hljs-keyword">for</span> (<span class=3D"hlj=
s-type">int</span> <span class=3D"hljs-variable">y</span> <span class=3D"hl=
js-operator">=3D</span> <span class=3D"hljs-number">0</span>; y &lt; canvas=
.getHeight(); y +=3D gridSize) {
                    g.drawLine(<span class=3D"hljs-number">0</span>, y, can=
vas.getWidth(), y);
                }
            }
        };

        panel.setPreferredSize(<span class=3D"hljs-keyword">new</span> <spa=
n class=3D"hljs-title class_">Dimension</span>(<span class=3D"hljs-number">=
800</span>, <span class=3D"hljs-number">600</span>));
        panel.addMouseListener(<span class=3D"hljs-keyword">new</span> <spa=
n class=3D"hljs-title class_">MouseAdapter</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">mousePressed</spa=
n><span class=3D"hljs-params">(MouseEvent e)</span> {
                startPoint =3D getNearestGridPoint(e.getPoint());
                endPoint =3D startPoint;
            }

            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">mouseReleased</sp=
an><span class=3D"hljs-params">(MouseEvent e)</span> {
                endPoint =3D getNearestGridPoint(e.getPoint());
                <span class=3D"hljs-keyword">if</span> (startPoint.x =3D=3D=
 endPoint.x || startPoint.y =3D=3D endPoint.y) {
                    drawElement(startPoint, endPoint);
                }
            }
        });

        panel.addMouseMotionListener(<span class=3D"hljs-keyword">new</span=
> <span class=3D"hljs-title class_">MouseMotionAdapter</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">mouseDragged</spa=
n><span class=3D"hljs-params">(MouseEvent e)</span> {
                <span class=3D"hljs-type">Point</span> <span class=3D"hljs-=
variable">currentPoint</span> <span class=3D"hljs-operator">=3D</span> getN=
earestGridPoint(e.getPoint());
                <span class=3D"hljs-keyword">if</span> (currentPoint.x =3D=
=3D startPoint.x || currentPoint.y =3D=3D startPoint.y) {
                    endPoint =3D currentPoint;
                    drawElement(startPoint, endPoint);
                }
            }
        });

        add(panel);
        setupMenuBar();
        setExtendedState(JFrame.MAXIMIZED_BOTH); <span class=3D"hljs-commen=
t">// Maximize the frame</span>
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(<span class=3D"hljs-literal">null</span>);
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">drawElement</span><span =
class=3D"hljs-params">(Point start, Point end)</span> {
        <span class=3D"hljs-keyword">if</span> (isInCanvasBounds(start) &am=
p;&amp; isInCanvasBounds(end)) {
            <span class=3D"hljs-type">Graphics2D</span> <span class=3D"hljs=
-variable">g2d</span> <span class=3D"hljs-operator">=3D</span> canvas.creat=
eGraphics();
            g2d.setColor(currentElementType.getColor());
            g2d.setStroke(<span class=3D"hljs-keyword">new</span> <span cla=
ss=3D"hljs-title class_">BasicStroke</span>(<span class=3D"hljs-number">2</=
span>));
            g2d.drawLine(start.x, start.y, end.x, end.y);
            g2d.dispose();
            repaint();
        }
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-type">b=
oolean</span> <span class=3D"hljs-title function_">isInCanvasBounds</span><=
span class=3D"hljs-params">(Point point)</span> {
        <span class=3D"hljs-keyword">return</span> point.x &gt;=3D <span cl=
ass=3D"hljs-number">0</span> &amp;&amp; point.x &lt; canvas.getWidth() &amp=
;&amp;
               point.y &gt;=3D <span class=3D"hljs-number">0</span> &amp;&a=
mp; point.y &lt; canvas.getHeight();
    }

    <span class=3D"hljs-keyword">private</span> Point <span class=3D"hljs-t=
itle function_">getNearestGridPoint</span><span class=3D"hljs-params">(Poin=
t point)</span> {
        <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">=
x</span> <span class=3D"hljs-operator">=3D</span> (<span class=3D"hljs-type=
">int</span>) (Math.round((<span class=3D"hljs-type">double</span>) point.x=
 / gridSize) * gridSize);
        <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">=
y</span> <span class=3D"hljs-operator">=3D</span> (<span class=3D"hljs-type=
">int</span>) (Math.round((<span class=3D"hljs-type">double</span>) point.y=
 / gridSize) * gridSize);

        x =3D Math.max(<span class=3D"hljs-number">0</span>, Math.min(x, ca=
nvas.getWidth() - gridSize));
        y =3D Math.max(<span class=3D"hljs-number">0</span>, Math.min(y, ca=
nvas.getHeight() - gridSize));

        <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-keyw=
ord">new</span> <span class=3D"hljs-title class_">Point</span>(x, y);
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">clearCanvas</span><span =
class=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">Graphics2D</span> <span class=3D"hljs-var=
iable">g2d</span> <span class=3D"hljs-operator">=3D</span> canvas.createGra=
phics();
        g2d.setComposite(AlphaComposite.Clear);
        g2d.fillRect(<span class=3D"hljs-number">0</span>, <span class=3D"h=
ljs-number">0</span>, canvas.getWidth(), canvas.getHeight());
        g2d.setComposite(AlphaComposite.SrcOver);
        g2d.dispose();
        repaint();
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">saveImage</span><span cl=
ass=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">JFileChooser</span> <span class=3D"hljs-v=
ariable">fileChooser</span> <span class=3D"hljs-operator">=3D</span> <span =
class=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JFileCh=
ooser</span>();
        fileChooser.setDialogTitle(<span class=3D"hljs-string">"Save Image"=
</span>);
        <span class=3D"hljs-keyword">if</span> (fileChooser.showSaveDialog(=
<span class=3D"hljs-built_in">this</span>) =3D=3D JFileChooser.APPROVE_OPTI=
ON) {
            <span class=3D"hljs-type">File</span> <span class=3D"hljs-varia=
ble">file</span> <span class=3D"hljs-operator">=3D</span> fileChooser.getSe=
lectedFile();
            <span class=3D"hljs-keyword">try</span> {
                ImageIO.write(canvas, <span class=3D"hljs-string">"PNG"</sp=
an>, file);
            } <span class=3D"hljs-keyword">catch</span> (IOException ex) {
                ex.printStackTrace();
            }
        }
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">setupMenuBar</span><span=
 class=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">JMenuBar</span> <span class=3D"hljs-varia=
ble">menuBar</span> <span class=3D"hljs-operator">=3D</span> <span class=3D=
"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuBar</span>=
();

        <span class=3D"hljs-type">JMenu</span> <span class=3D"hljs-variable=
">fileMenu</span> <span class=3D"hljs-operator">=3D</span> <span class=3D"h=
ljs-keyword">new</span> <span class=3D"hljs-title class_">JMenu</span>(<spa=
n class=3D"hljs-string">"File"</span>);
        <span class=3D"hljs-type">JMenuItem</span> <span class=3D"hljs-vari=
able">saveItem</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuItem</s=
pan>(<span class=3D"hljs-string">"Save"</span>);
        saveItem.addActionListener(e -&gt; saveImage());
        fileMenu.add(saveItem);

        <span class=3D"hljs-type">JMenuItem</span> <span class=3D"hljs-vari=
able">exitItem</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuItem</s=
pan>(<span class=3D"hljs-string">"Exit"</span>);
        exitItem.addActionListener(e -&gt; System.exit(<span class=3D"hljs-=
number">0</span>));
        fileMenu.add(exitItem);

        <span class=3D"hljs-type">JMenu</span> <span class=3D"hljs-variable=
">elementMenu</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenu</span>=
(<span class=3D"hljs-string">"Element"</span>);
        <span class=3D"hljs-type">ButtonGroup</span> <span class=3D"hljs-va=
riable">group</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">ButtonGroup<=
/span>();
        <span class=3D"hljs-keyword">for</span> (FloorElementType type : Fl=
oorElementType.values()) {
            <span class=3D"hljs-type">JRadioButtonMenuItem</span> <span cla=
ss=3D"hljs-variable">item</span> <span class=3D"hljs-operator">=3D</span> <=
span class=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JR=
adioButtonMenuItem</span>(type.name());
            item.addActionListener(e -&gt; currentElementType =3D type);
            group.add(item);
            elementMenu.add(item);
        }

        menuBar.add(fileMenu);
        menuBar.add(elementMenu);
        setJMenuBar(menuBar);
    }

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword"=
>static</span> <span class=3D"hljs-keyword">void</span> <span class=3D"hljs=
-title function_">main</span><span class=3D"hljs-params">(String[] args)</s=
pan> {
        SwingUtilities.invokeLater(() -&gt; <span class=3D"hljs-keyword">ne=
w</span> <span class=3D"hljs-title class_">App</span>().setVisible(<span cl=
ass=3D"hljs-literal">true</span>));
    }
}
</code></div></div></pre><p>These changes ensure that the grid lines cover =
the entire canvas area and that drawing is possible on every part of the ca=
nvas.</p></div></div></div></div></div></div></div></div><div class=3D"w-fu=
ll text-token-text-primary" data-testid=3D"conversation-turn-32" style=3D"-=
-avatar-color: #19c37d;"><div class=3D"px-4 py-2 justify-center text-base m=
d:gap-6 m-auto"><div class=3D"flex flex-1 text-base mx-auto gap-3 md:max-w-=
3xl lg:max-w-[40rem] xl:max-w-[48rem] group"><div class=3D"flex-shrink-0 fl=
ex flex-col relative items-end"><div><div class=3D"pt-0.5"><div class=3D"gi=
zmo-shadow-stroke flex h-6 w-6 items-center justify-center overflow-hidden =
rounded-full"><div class=3D"relative p-1 rounded-sm h-9 w-9 text-white flex=
 items-center justify-center" style=3D"background-color: rgb(121, 137, 255)=
; width: 24px; height: 24px;"><svg stroke=3D"currentColor" fill=3D"none" st=
roke-width=3D"2" viewBox=3D"0 0 24 24" stroke-linecap=3D"round" stroke-line=
join=3D"round" class=3D"icon-sm" height=3D"1em" width=3D"1em" xmlns=3D"http=
://www.w3.org/2000/svg"><path d=3D"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v=
2"></path><circle cx=3D"12" cy=3D"7" r=3D"4"></circle></svg></div></div></d=
iv></div></div><div class=3D"relative flex w-full flex-col"><div class=3D"f=
ont-semibold select-none">Anonymous</div><div class=3D"flex-col gap-1 md:ga=
p-3"><div class=3D"flex flex-grow flex-col max-w-full"><div data-message-au=
thor-role=3D"user" data-message-id=3D"aaa22b1b-d2e7-456a-ac2e-9a32a0865d29"=
 class=3D"min-h-[20px] text-message flex flex-col items-start gap-3 whitesp=
ace-pre-wrap break-words [.text-message+&amp;]:mt-5 overflow-x-auto"><div c=
lass=3D"">There are issues with your implementation. Now the grid lines do =
not cover the entire canvas (blank space), neither can I draw straight line=
s in these places that are blank</div></div></div></div></div></div></div><=
/div><div class=3D"w-full text-token-text-primary" data-testid=3D"conversat=
ion-turn-33" style=3D"--avatar-color: #19c37d;"><div class=3D"px-4 py-2 jus=
tify-center text-base md:gap-6 m-auto"><div class=3D"flex flex-1 text-base =
mx-auto gap-3 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem] group"><div cl=
ass=3D"flex-shrink-0 flex flex-col relative items-end"><div><div class=3D"p=
t-0.5"><div class=3D"gizmo-shadow-stroke flex h-6 w-6 items-center justify-=
center overflow-hidden rounded-full"><div class=3D"relative p-1 rounded-sm =
h-9 w-9 text-white flex items-center justify-center" style=3D"background-co=
lor: rgb(25, 195, 125); width: 24px; height: 24px;"><svg width=3D"41" heigh=
t=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://www.w3.org/200=
0/svg" class=3D"icon-sm" role=3D"img"><text x=3D"-9999" y=3D"-9999">ChatGPT=
</text><path d=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.9886 =
12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 33.9=
882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078C2=
4.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.7249 0.49=
1269 18.3058 0.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.42214C10.6=
335 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4=
.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.956464 14.15=
91 0.498905 16.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.5449 3.268=
 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 3.=
40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.501=
3C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786 3=
9.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24.6=
307 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.5506=
 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.115 30.9=
874 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.0789 =
22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C20=
.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.8666 36.058=
6 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.3813 30.=
9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20.998=
C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.9842 21.0=
707 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.6841C=
26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 29=
.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5.734=
61 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.902C14.=
583 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C24.7321 2=
9.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24.6=
829 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.4954=
C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156 1=
2.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.19=
491 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8.48312 =
20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C15.1=
894 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.516 =
15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289 19.=
3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.231=
2 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787C2=
5.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17.8=
49 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 37.4832 2=
4.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33.9=
415 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.3889=
V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 32.1=
54 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.9142 =
35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.09=
43C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.9982C=
16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048 11.=
9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28.238=
3 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939 3=
4.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15.0=
128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10.830=
9 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107 9=
.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15.1=
275 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.35876 =
22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.98=
473L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.3065=
 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L20=
.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.9985V17.999=
1Z" fill=3D"currentColor"></path></svg></div></div></div></div></div><div c=
lass=3D"relative flex w-full flex-col agent-turn"><div class=3D"font-semibo=
ld select-none">ChatGPT</div><div class=3D"flex-col gap-1 md:gap-3"><div cl=
ass=3D"flex flex-grow flex-col max-w-full"><div data-message-author-role=3D=
"assistant" data-message-id=3D"f8c016d9-b04a-4772-bd6f-39cd37ffe371" class=
=3D"min-h-[20px] text-message flex flex-col items-start gap-3 whitespace-pr=
e-wrap break-words [.text-message+&amp;]:mt-5 overflow-x-auto"><div class=
=3D"markdown prose w-full break-words dark:prose-invert dark"><p>I see the =
issue. We need to adjust the grid lines to cover the entire canvas area and=
 ensure that drawing is possible on every part of the canvas. Let's make th=
e necessary adjustments:</p><pre><div class=3D"dark bg-gray-950 rounded-md"=
><div class=3D"flex items-center relative text-token-text-secondary bg-toke=
n-main-surface-secondary px-4 py-2 text-xs font-sans justify-between rounde=
d-t-md"><span>java</span><span class=3D"" data-state=3D"closed"><button cla=
ss=3D"flex gap-1 items-center"><svg width=3D"24" height=3D"24" viewBox=3D"0=
 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-=
sm"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M12 4C10.8954 4 =
10 4.89543 10 6H14C14 4.89543 13.1046 4 12 4ZM8.53513 4C9.22675 2.8044 10.5=
194 2 12 2C13.4806 2 14.7733 2.8044 15.4649 4H17C18.6569 4 20 5.34315 20 7V=
19C20 20.6569 18.6569 22 17 22H7C5.34315 22 4 20.6569 4 19V7C4 5.34315 5.34=
315 4 7 4H8.53513ZM8 6H7C6.44772 6 6 6.44772 6 7V19C6 19.5523 6.44772 20 7 =
20H17C17.5523 20 18 19.5523 18 19V7C18 6.44772 17.5523 6 17 6H16C16 7.10457=
 15.1046 8 14 8H10C8.89543 8 8 7.10457 8 6Z" fill=3D"currentColor"></path><=
/svg>Copy code</button></span></div><div class=3D"p-4 overflow-y-auto"><cod=
e class=3D"!whitespace-pre hljs language-java"><span class=3D"hljs-keyword"=
>import</span> javax.imageio.ImageIO;
<span class=3D"hljs-keyword">import</span> javax.swing.*;
<span class=3D"hljs-keyword">import</span> java.awt.*;
<span class=3D"hljs-keyword">import</span> java.awt.event.*;
<span class=3D"hljs-keyword">import</span> java.awt.image.BufferedImage;
<span class=3D"hljs-keyword">import</span> java.io.File;
<span class=3D"hljs-keyword">import</span> java.io.IOException;

<span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword">cla=
ss</span> <span class=3D"hljs-title class_">App</span> <span class=3D"hljs-=
keyword">extends</span> <span class=3D"hljs-title class_">JFrame</span> {

    <span class=3D"hljs-keyword">private</span> BufferedImage canvas;
    <span class=3D"hljs-keyword">private</span> Point startPoint;
    <span class=3D"hljs-keyword">private</span> Point endPoint;
    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-type">i=
nt</span> <span class=3D"hljs-variable">gridSize</span> <span class=3D"hljs=
-operator">=3D</span> <span class=3D"hljs-number">20</span>; <span class=3D=
"hljs-comment">// Size of grid cells</span>
    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-type">F=
loorElementType</span> <span class=3D"hljs-variable">currentElementType</sp=
an> <span class=3D"hljs-operator">=3D</span> FloorElementType.WALL; <span c=
lass=3D"hljs-comment">// Default to drawing walls</span>

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword"=
>enum</span> <span class=3D"hljs-title class_">FloorElementType</span> {
        WALL(Color.BLACK),
        WINDOW(Color.BLUE),
        DOOR(Color.RED);

        <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-key=
word">final</span> Color color;

        FloorElementType(Color color) {
            <span class=3D"hljs-built_in">this</span>.color =3D color;
        }

        <span class=3D"hljs-keyword">public</span> Color <span class=3D"hlj=
s-title function_">getColor</span><span class=3D"hljs-params">()</span> {
            <span class=3D"hljs-keyword">return</span> color;
        }
    }

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-title fu=
nction_">App</span><span class=3D"hljs-params">()</span> {
        <span class=3D"hljs-built_in">super</span>(<span class=3D"hljs-stri=
ng">"Floor Plan Designer"</span>);
        initUI();
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">initUI</span><span class=
=3D"hljs-params">()</span> {
        canvas =3D <span class=3D"hljs-keyword">new</span> <span class=3D"h=
ljs-title class_">BufferedImage</span>(<span class=3D"hljs-number">800</spa=
n>, <span class=3D"hljs-number">600</span>, BufferedImage.TYPE_INT_ARGB);
        clearCanvas();

        <span class=3D"hljs-type">JPanel</span> <span class=3D"hljs-variabl=
e">panel</span> <span class=3D"hljs-operator">=3D</span> <span class=3D"hlj=
s-keyword">new</span> <span class=3D"hljs-title class_">JPanel</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">protected</span> <span class=3D"hl=
js-keyword">void</span> <span class=3D"hljs-title function_">paintComponent=
</span><span class=3D"hljs-params">(Graphics g)</span> {
                <span class=3D"hljs-built_in">super</span>.paintComponent(g=
);
                g.drawImage(canvas, <span class=3D"hljs-number">0</span>, <=
span class=3D"hljs-number">0</span>, <span class=3D"hljs-literal">null</spa=
n>);

                <span class=3D"hljs-comment">// Draw grid lines</span>
                g.setColor(Color.LIGHT_GRAY);
                <span class=3D"hljs-keyword">for</span> (<span class=3D"hlj=
s-type">int</span> <span class=3D"hljs-variable">x</span> <span class=3D"hl=
js-operator">=3D</span> <span class=3D"hljs-number">0</span>; x &lt;=3D get=
Width(); x +=3D gridSize) {
                    g.drawLine(x, <span class=3D"hljs-number">0</span>, x, =
getHeight());
                }
                <span class=3D"hljs-keyword">for</span> (<span class=3D"hlj=
s-type">int</span> <span class=3D"hljs-variable">y</span> <span class=3D"hl=
js-operator">=3D</span> <span class=3D"hljs-number">0</span>; y &lt;=3D get=
Height(); y +=3D gridSize) {
                    g.drawLine(<span class=3D"hljs-number">0</span>, y, get=
Width(), y);
                }
            }
        };

        panel.setPreferredSize(<span class=3D"hljs-keyword">new</span> <spa=
n class=3D"hljs-title class_">Dimension</span>(<span class=3D"hljs-number">=
800</span>, <span class=3D"hljs-number">600</span>));
        panel.addMouseListener(<span class=3D"hljs-keyword">new</span> <spa=
n class=3D"hljs-title class_">MouseAdapter</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">mousePressed</spa=
n><span class=3D"hljs-params">(MouseEvent e)</span> {
                startPoint =3D getNearestGridPoint(e.getPoint());
                endPoint =3D startPoint;
            }

            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">mouseReleased</sp=
an><span class=3D"hljs-params">(MouseEvent e)</span> {
                endPoint =3D getNearestGridPoint(e.getPoint());
                <span class=3D"hljs-keyword">if</span> (startPoint.x =3D=3D=
 endPoint.x || startPoint.y =3D=3D endPoint.y) {
                    drawElement(startPoint, endPoint);
                }
            }
        });

        panel.addMouseMotionListener(<span class=3D"hljs-keyword">new</span=
> <span class=3D"hljs-title class_">MouseMotionAdapter</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">mouseDragged</spa=
n><span class=3D"hljs-params">(MouseEvent e)</span> {
                <span class=3D"hljs-type">Point</span> <span class=3D"hljs-=
variable">currentPoint</span> <span class=3D"hljs-operator">=3D</span> getN=
earestGridPoint(e.getPoint());
                <span class=3D"hljs-keyword">if</span> (currentPoint.x =3D=
=3D startPoint.x || currentPoint.y =3D=3D startPoint.y) {
                    endPoint =3D currentPoint;
                    drawElement(startPoint, endPoint);
                }
            }
        });

        add(panel);
        setupMenuBar();
        setExtendedState(JFrame.MAXIMIZED_BOTH); <span class=3D"hljs-commen=
t">// Maximize the frame</span>
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(<span class=3D"hljs-literal">null</span>);
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">drawElement</span><span =
class=3D"hljs-params">(Point start, Point end)</span> {
        <span class=3D"hljs-keyword">if</span> (isInCanvasBounds(start) &am=
p;&amp; isInCanvasBounds(end)) {
            <span class=3D"hljs-type">Graphics2D</span> <span class=3D"hljs=
-variable">g2d</span> <span class=3D"hljs-operator">=3D</span> canvas.creat=
eGraphics();
            g2d.setColor(currentElementType.getColor());
            g2d.setStroke(<span class=3D"hljs-keyword">new</span> <span cla=
ss=3D"hljs-title class_">BasicStroke</span>(<span class=3D"hljs-number">2</=
span>));
            g2d.drawLine(start.x, start.y, end.x, end.y);
            g2d.dispose();
            repaint();
        }
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-type">b=
oolean</span> <span class=3D"hljs-title function_">isInCanvasBounds</span><=
span class=3D"hljs-params">(Point point)</span> {
        <span class=3D"hljs-keyword">return</span> point.x &gt;=3D <span cl=
ass=3D"hljs-number">0</span> &amp;&amp; point.x &lt; canvas.getWidth() &amp=
;&amp;
               point.y &gt;=3D <span class=3D"hljs-number">0</span> &amp;&a=
mp; point.y &lt; canvas.getHeight();
    }

    <span class=3D"hljs-keyword">private</span> Point <span class=3D"hljs-t=
itle function_">getNearestGridPoint</span><span class=3D"hljs-params">(Poin=
t point)</span> {
        <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">=
x</span> <span class=3D"hljs-operator">=3D</span> (point.x / gridSize) * gr=
idSize;
        <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">=
y</span> <span class=3D"hljs-operator">=3D</span> (point.y / gridSize) * gr=
idSize;

        <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-keyw=
ord">new</span> <span class=3D"hljs-title class_">Point</span>(x, y);
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">clearCanvas</span><span =
class=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">Graphics2D</span> <span class=3D"hljs-var=
iable">g2d</span> <span class=3D"hljs-operator">=3D</span> canvas.createGra=
phics();
        g2d.setComposite(AlphaComposite.Clear);
        g2d.fillRect(<span class=3D"hljs-number">0</span>, <span class=3D"h=
ljs-number">0</span>, canvas.getWidth(), canvas.getHeight());
        g2d.setComposite(AlphaComposite.SrcOver);
        g2d.dispose();
        repaint();
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">saveImage</span><span cl=
ass=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">JFileChooser</span> <span class=3D"hljs-v=
ariable">fileChooser</span> <span class=3D"hljs-operator">=3D</span> <span =
class=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JFileCh=
ooser</span>();
        fileChooser.setDialogTitle(<span class=3D"hljs-string">"Save Image"=
</span>);
        <span class=3D"hljs-keyword">if</span> (fileChooser.showSaveDialog(=
<span class=3D"hljs-built_in">this</span>) =3D=3D JFileChooser.APPROVE_OPTI=
ON) {
            <span class=3D"hljs-type">File</span> <span class=3D"hljs-varia=
ble">file</span> <span class=3D"hljs-operator">=3D</span> fileChooser.getSe=
lectedFile();
            <span class=3D"hljs-keyword">try</span> {
                ImageIO.write(canvas, <span class=3D"hljs-string">"PNG"</sp=
an>, file);
            } <span class=3D"hljs-keyword">catch</span> (IOException ex) {
                ex.printStackTrace();
            }
        }
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">setupMenuBar</span><span=
 class=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">JMenuBar</span> <span class=3D"hljs-varia=
ble">menuBar</span> <span class=3D"hljs-operator">=3D</span> <span class=3D=
"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuBar</span>=
();

        <span class=3D"hljs-type">JMenu</span> <span class=3D"hljs-variable=
">fileMenu</span> <span class=3D"hljs-operator">=3D</span> <span class=3D"h=
ljs-keyword">new</span> <span class=3D"hljs-title class_">JMenu</span>(<spa=
n class=3D"hljs-string">"File"</span>);
        <span class=3D"hljs-type">JMenuItem</span> <span class=3D"hljs-vari=
able">saveItem</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuItem</s=
pan>(<span class=3D"hljs-string">"Save"</span>);
        saveItem.addActionListener(e -&gt; saveImage());
        fileMenu.add(saveItem);

        <span class=3D"hljs-type">JMenuItem</span> <span class=3D"hljs-vari=
able">exitItem</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuItem</s=
pan>(<span class=3D"hljs-string">"Exit"</span>);
        exitItem.addActionListener(e -&gt; System.exit(<span class=3D"hljs-=
number">0</span>));
        fileMenu.add(exitItem);

        <span class=3D"hljs-type">JMenu</span> <span class=3D"hljs-variable=
">elementMenu</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenu</span>=
(<span class=3D"hljs-string">"Element"</span>);
        <span class=3D"hljs-type">ButtonGroup</span> <span class=3D"hljs-va=
riable">group</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">ButtonGroup<=
/span>();
        <span class=3D"hljs-keyword">for</span> (FloorElementType type : Fl=
oorElementType.values()) {
            <span class=3D"hljs-type">JRadioButtonMenuItem</span> <span cla=
ss=3D"hljs-variable">item</span> <span class=3D"hljs-operator">=3D</span> <=
span class=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JR=
adioButtonMenuItem</span>(type.name());
            item.addActionListener(e -&gt; currentElementType =3D type);
            group.add(item);
            elementMenu.add(item);
        }

        menuBar.add(fileMenu);
        menuBar.add(elementMenu);
        setJMenuBar(menuBar);
    }

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword"=
>static</span> <span class=3D"hljs-keyword">void</span> <span class=3D"hljs=
-title function_">main</span><span class=3D"hljs-params">(String[] args)</s=
pan> {
        SwingUtilities.invokeLater(() -&gt; <span class=3D"hljs-keyword">ne=
w</span> <span class=3D"hljs-title class_">App</span>().setVisible(<span cl=
ass=3D"hljs-literal">true</span>));
    }
}
</code></div></div></pre><p>With these adjustments, the grid lines cover th=
e entire canvas, and you can draw straight lines in all places on the canva=
s.</p></div></div></div></div></div></div></div></div><div class=3D"w-full =
text-token-text-primary" data-testid=3D"conversation-turn-34" style=3D"--av=
atar-color: #19c37d;"><div class=3D"px-4 py-2 justify-center text-base md:g=
ap-6 m-auto"><div class=3D"flex flex-1 text-base mx-auto gap-3 md:max-w-3xl=
 lg:max-w-[40rem] xl:max-w-[48rem] group"><div class=3D"flex-shrink-0 flex =
flex-col relative items-end"><div><div class=3D"pt-0.5"><div class=3D"gizmo=
-shadow-stroke flex h-6 w-6 items-center justify-center overflow-hidden rou=
nded-full"><div class=3D"relative p-1 rounded-sm h-9 w-9 text-white flex it=
ems-center justify-center" style=3D"background-color: rgb(121, 137, 255); w=
idth: 24px; height: 24px;"><svg stroke=3D"currentColor" fill=3D"none" strok=
e-width=3D"2" viewBox=3D"0 0 24 24" stroke-linecap=3D"round" stroke-linejoi=
n=3D"round" class=3D"icon-sm" height=3D"1em" width=3D"1em" xmlns=3D"http://=
www.w3.org/2000/svg"><path d=3D"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2">=
</path><circle cx=3D"12" cy=3D"7" r=3D"4"></circle></svg></div></div></div>=
</div></div><div class=3D"relative flex w-full flex-col"><div class=3D"font=
-semibold select-none">Anonymous</div><div class=3D"flex-col gap-1 md:gap-3=
"><div class=3D"flex flex-grow flex-col max-w-full"><div data-message-autho=
r-role=3D"user" data-message-id=3D"aaa27131-37f5-4fea-98aa-3a2d72a87c5b" cl=
ass=3D"min-h-[20px] text-message flex flex-col items-start gap-3 whitespace=
-pre-wrap break-words [.text-message+&amp;]:mt-5 overflow-x-auto"><div clas=
s=3D"">        canvas =3D new BufferedImage(800, 600, BufferedImage.TYPE_IN=
T_ARGB);
I think this is the issue. It shouldn't be 800,600. It should be the size o=
f the user's canvas</div></div></div></div></div></div></div></div><div cla=
ss=3D"w-full text-token-text-primary" data-testid=3D"conversation-turn-35" =
style=3D"--avatar-color: #19c37d;"><div class=3D"px-4 py-2 justify-center t=
ext-base md:gap-6 m-auto"><div class=3D"flex flex-1 text-base mx-auto gap-3=
 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem] group"><div class=3D"flex-s=
hrink-0 flex flex-col relative items-end"><div><div class=3D"pt-0.5"><div c=
lass=3D"gizmo-shadow-stroke flex h-6 w-6 items-center justify-center overfl=
ow-hidden rounded-full"><div class=3D"relative p-1 rounded-sm h-9 w-9 text-=
white flex items-center justify-center" style=3D"background-color: rgb(25, =
195, 125); width: 24px; height: 24px;"><svg width=3D"41" height=3D"41" view=
Box=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=
=3D"icon-sm" role=3D"img"><text x=3D"-9999" y=3D"-9999">ChatGPT</text><path=
 d=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.8=
409 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 3=
2.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.789=
3 23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.7249 0.491269 18.3058=
 0.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 =
9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.1750=
5C3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.956464 14.1591 0.498905 =
16.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.8=
1966 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.089=
2 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37=
.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.37=
47 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 =
26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.=
5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.115 30.9874 38.0728 =
29.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.8=
556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.887=
4 19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.8666 36.0586 17.936 36.=
0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.4964=
 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.=
0068 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.9842 21.0707 29.9867 =
21.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.0=
892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.1974=
2 27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L1=
3.699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.902C14.583 30.902 1=
4.8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.72=
83 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L=
16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.=
9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.552=
79 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V=
19.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.64=
893 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 =
15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.5=
082L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862=
 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25=
.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.47=
69 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 1=
8.8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.36=
17 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 =
32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.6=
066 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698 3=
1.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.87=
17L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 1=
0.0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.9=
783 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207=
 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29=
.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.539=
45 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424=
 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10=
.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.21=
73 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C=
16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.93=
941 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 =
9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.=
2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.497=
8L24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"=
currentColor"></path></svg></div></div></div></div></div><div class=3D"rela=
tive flex w-full flex-col agent-turn"><div class=3D"font-semibold select-no=
ne">ChatGPT</div><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex =
flex-grow flex-col max-w-full"><div data-message-author-role=3D"assistant" =
data-message-id=3D"7f7c05fd-5eb6-484c-a4f9-5c33d07b1dfb" class=3D"min-h-[20=
px] text-message flex flex-col items-start gap-3 whitespace-pre-wrap break-=
words [.text-message+&amp;]:mt-5 overflow-x-auto"><div class=3D"markdown pr=
ose w-full break-words dark:prose-invert dark"><p>You're correct. We need t=
o adjust the size of the canvas to match the size of the panel where the us=
er will draw. To achieve this, we can dynamically set the size of the canva=
s based on the panel's size. Here's how you can modify the code:</p><pre><d=
iv class=3D"dark bg-gray-950 rounded-md"><div class=3D"flex items-center re=
lative text-token-text-secondary bg-token-main-surface-secondary px-4 py-2 =
text-xs font-sans justify-between rounded-t-md"><span>java</span><span clas=
s=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-center"><svg=
 width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"ht=
tp://www.w3.org/2000/svg" class=3D"icon-sm"><path fill-rule=3D"evenodd" cli=
p-rule=3D"evenodd" d=3D"M12 4C10.8954 4 10 4.89543 10 6H14C14 4.89543 13.10=
46 4 12 4ZM8.53513 4C9.22675 2.8044 10.5194 2 12 2C13.4806 2 14.7733 2.8044=
 15.4649 4H17C18.6569 4 20 5.34315 20 7V19C20 20.6569 18.6569 22 17 22H7C5.=
34315 22 4 20.6569 4 19V7C4 5.34315 5.34315 4 7 4H8.53513ZM8 6H7C6.44772 6 =
6 6.44772 6 7V19C6 19.5523 6.44772 20 7 20H17C17.5523 20 18 19.5523 18 19V7=
C18 6.44772 17.5523 6 17 6H16C16 7.10457 15.1046 8 14 8H10C8.89543 8 8 7.10=
457 8 6Z" fill=3D"currentColor"></path></svg>Copy code</button></span></div=
><div class=3D"p-4 overflow-y-auto"><code class=3D"!whitespace-pre hljs lan=
guage-java"><span class=3D"hljs-keyword">import</span> javax.imageio.ImageI=
O;
<span class=3D"hljs-keyword">import</span> javax.swing.*;
<span class=3D"hljs-keyword">import</span> java.awt.*;
<span class=3D"hljs-keyword">import</span> java.awt.event.*;
<span class=3D"hljs-keyword">import</span> java.awt.image.BufferedImage;
<span class=3D"hljs-keyword">import</span> java.io.File;
<span class=3D"hljs-keyword">import</span> java.io.IOException;

<span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword">cla=
ss</span> <span class=3D"hljs-title class_">App</span> <span class=3D"hljs-=
keyword">extends</span> <span class=3D"hljs-title class_">JFrame</span> {

    <span class=3D"hljs-keyword">private</span> BufferedImage canvas;
    <span class=3D"hljs-keyword">private</span> Point startPoint;
    <span class=3D"hljs-keyword">private</span> Point endPoint;
    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-type">i=
nt</span> <span class=3D"hljs-variable">gridSize</span> <span class=3D"hljs=
-operator">=3D</span> <span class=3D"hljs-number">20</span>; <span class=3D=
"hljs-comment">// Size of grid cells</span>
    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-type">F=
loorElementType</span> <span class=3D"hljs-variable">currentElementType</sp=
an> <span class=3D"hljs-operator">=3D</span> FloorElementType.WALL; <span c=
lass=3D"hljs-comment">// Default to drawing walls</span>

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword"=
>enum</span> <span class=3D"hljs-title class_">FloorElementType</span> {
        WALL(Color.BLACK),
        WINDOW(Color.BLUE),
        DOOR(Color.RED);

        <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-key=
word">final</span> Color color;

        FloorElementType(Color color) {
            <span class=3D"hljs-built_in">this</span>.color =3D color;
        }

        <span class=3D"hljs-keyword">public</span> Color <span class=3D"hlj=
s-title function_">getColor</span><span class=3D"hljs-params">()</span> {
            <span class=3D"hljs-keyword">return</span> color;
        }
    }

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-title fu=
nction_">App</span><span class=3D"hljs-params">()</span> {
        <span class=3D"hljs-built_in">super</span>(<span class=3D"hljs-stri=
ng">"Floor Plan Designer"</span>);
        initUI();
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">initUI</span><span class=
=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">JPanel</span> <span class=3D"hljs-variabl=
e">panel</span> <span class=3D"hljs-operator">=3D</span> <span class=3D"hlj=
s-keyword">new</span> <span class=3D"hljs-title class_">JPanel</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">protected</span> <span class=3D"hl=
js-keyword">void</span> <span class=3D"hljs-title function_">paintComponent=
</span><span class=3D"hljs-params">(Graphics g)</span> {
                <span class=3D"hljs-built_in">super</span>.paintComponent(g=
);
                <span class=3D"hljs-keyword">if</span> (canvas !=3D <span c=
lass=3D"hljs-literal">null</span>) {
                    g.drawImage(canvas, <span class=3D"hljs-number">0</span=
>, <span class=3D"hljs-number">0</span>, <span class=3D"hljs-literal">null<=
/span>);
                }

                <span class=3D"hljs-comment">// Draw grid lines</span>
                g.setColor(Color.LIGHT_GRAY);
                <span class=3D"hljs-keyword">for</span> (<span class=3D"hlj=
s-type">int</span> <span class=3D"hljs-variable">x</span> <span class=3D"hl=
js-operator">=3D</span> <span class=3D"hljs-number">0</span>; x &lt;=3D get=
Width(); x +=3D gridSize) {
                    g.drawLine(x, <span class=3D"hljs-number">0</span>, x, =
getHeight());
                }
                <span class=3D"hljs-keyword">for</span> (<span class=3D"hlj=
s-type">int</span> <span class=3D"hljs-variable">y</span> <span class=3D"hl=
js-operator">=3D</span> <span class=3D"hljs-number">0</span>; y &lt;=3D get=
Height(); y +=3D gridSize) {
                    g.drawLine(<span class=3D"hljs-number">0</span>, y, get=
Width(), y);
                }
            }
        };

        panel.setPreferredSize(<span class=3D"hljs-keyword">new</span> <spa=
n class=3D"hljs-title class_">Dimension</span>(<span class=3D"hljs-number">=
800</span>, <span class=3D"hljs-number">600</span>));
        panel.addMouseListener(<span class=3D"hljs-keyword">new</span> <spa=
n class=3D"hljs-title class_">MouseAdapter</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">mousePressed</spa=
n><span class=3D"hljs-params">(MouseEvent e)</span> {
                startPoint =3D getNearestGridPoint(e.getPoint());
                endPoint =3D startPoint;
            }

            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">mouseReleased</sp=
an><span class=3D"hljs-params">(MouseEvent e)</span> {
                endPoint =3D getNearestGridPoint(e.getPoint());
                <span class=3D"hljs-keyword">if</span> (startPoint.x =3D=3D=
 endPoint.x || startPoint.y =3D=3D endPoint.y) {
                    drawElement(startPoint, endPoint);
                }
            }
        });

        panel.addMouseMotionListener(<span class=3D"hljs-keyword">new</span=
> <span class=3D"hljs-title class_">MouseMotionAdapter</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">mouseDragged</spa=
n><span class=3D"hljs-params">(MouseEvent e)</span> {
                <span class=3D"hljs-type">Point</span> <span class=3D"hljs-=
variable">currentPoint</span> <span class=3D"hljs-operator">=3D</span> getN=
earestGridPoint(e.getPoint());
                <span class=3D"hljs-keyword">if</span> (currentPoint.x =3D=
=3D startPoint.x || currentPoint.y =3D=3D startPoint.y) {
                    endPoint =3D currentPoint;
                    drawElement(startPoint, endPoint);
                }
            }
        });

        add(panel);
        setupMenuBar();
        setExtendedState(JFrame.MAXIMIZED_BOTH); <span class=3D"hljs-commen=
t">// Maximize the frame</span>
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(<span class=3D"hljs-literal">null</span>);
        pack();
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">drawElement</span><span =
class=3D"hljs-params">(Point start, Point end)</span> {
        <span class=3D"hljs-keyword">if</span> (isInCanvasBounds(start) &am=
p;&amp; isInCanvasBounds(end)) {
            <span class=3D"hljs-type">Graphics2D</span> <span class=3D"hljs=
-variable">g2d</span> <span class=3D"hljs-operator">=3D</span> canvas.creat=
eGraphics();
            g2d.setColor(currentElementType.getColor());
            g2d.setStroke(<span class=3D"hljs-keyword">new</span> <span cla=
ss=3D"hljs-title class_">BasicStroke</span>(<span class=3D"hljs-number">2</=
span>));
            g2d.drawLine(start.x, start.y, end.x, end.y);
            g2d.dispose();
            repaint();
        }
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-type">b=
oolean</span> <span class=3D"hljs-title function_">isInCanvasBounds</span><=
span class=3D"hljs-params">(Point point)</span> {
        <span class=3D"hljs-keyword">return</span> point.x &gt;=3D <span cl=
ass=3D"hljs-number">0</span> &amp;&amp; point.x &lt; canvas.getWidth() &amp=
;&amp;
                point.y &gt;=3D <span class=3D"hljs-number">0</span> &amp;&=
amp; point.y &lt; canvas.getHeight();
    }

    <span class=3D"hljs-keyword">private</span> Point <span class=3D"hljs-t=
itle function_">getNearestGridPoint</span><span class=3D"hljs-params">(Poin=
t point)</span> {
        <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">=
x</span> <span class=3D"hljs-operator">=3D</span> (point.x / gridSize) * gr=
idSize;
        <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">=
y</span> <span class=3D"hljs-operator">=3D</span> (point.y / gridSize) * gr=
idSize;

        <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-keyw=
ord">new</span> <span class=3D"hljs-title class_">Point</span>(x, y);
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">clearCanvas</span><span =
class=3D"hljs-params">()</span> {
        canvas =3D <span class=3D"hljs-keyword">new</span> <span class=3D"h=
ljs-title class_">BufferedImage</span>(getWidth(), getHeight(), BufferedIma=
ge.TYPE_INT_ARGB);
        <span class=3D"hljs-type">Graphics2D</span> <span class=3D"hljs-var=
iable">g2d</span> <span class=3D"hljs-operator">=3D</span> canvas.createGra=
phics();
        g2d.setComposite(AlphaComposite.Clear);
        g2d.fillRect(<span class=3D"hljs-number">0</span>, <span class=3D"h=
ljs-number">0</span>, canvas.getWidth(), canvas.getHeight());
        g2d.setComposite(AlphaComposite.SrcOver);
        g2d.dispose();
        repaint();
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">saveImage</span><span cl=
ass=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">JFileChooser</span> <span class=3D"hljs-v=
ariable">fileChooser</span> <span class=3D"hljs-operator">=3D</span> <span =
class=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JFileCh=
ooser</span>();
        fileChooser.setDialogTitle(<span class=3D"hljs-string">"Save Image"=
</span>);
        <span class=3D"hljs-keyword">if</span> (fileChooser.showSaveDialog(=
<span class=3D"hljs-built_in">this</span>) =3D=3D JFileChooser.APPROVE_OPTI=
ON) {
            <span class=3D"hljs-type">File</span> <span class=3D"hljs-varia=
ble">file</span> <span class=3D"hljs-operator">=3D</span> fileChooser.getSe=
lectedFile();
            <span class=3D"hljs-keyword">try</span> {
                ImageIO.write(canvas, <span class=3D"hljs-string">"PNG"</sp=
an>, file);
            } <span class=3D"hljs-keyword">catch</span> (IOException ex) {
                ex.printStackTrace();
            }
        }
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">setupMenuBar</span><span=
 class=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">JMenuBar</span> <span class=3D"hljs-varia=
ble">menuBar</span> <span class=3D"hljs-operator">=3D</span> <span class=3D=
"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuBar</span>=
();

        <span class=3D"hljs-type">JMenu</span> <span class=3D"hljs-variable=
">fileMenu</span> <span class=3D"hljs-operator">=3D</span> <span class=3D"h=
ljs-keyword">new</span> <span class=3D"hljs-title class_">JMenu</span>(<spa=
n class=3D"hljs-string">"File"</span>);
        <span class=3D"hljs-type">JMenuItem</span> <span class=3D"hljs-vari=
able">saveItem</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuItem</s=
pan>(<span class=3D"hljs-string">"Save"</span>);
        saveItem.addActionListener(e -&gt; saveImage());
        fileMenu.add(saveItem);

        <span class=3D"hljs-type">JMenuItem</span> <span class=3D"hljs-vari=
able">exitItem</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuItem</s=
pan>(<span class=3D"hljs-string">"Exit"</span>);
        exitItem.addActionListener(e -&gt; System.exit(<span class=3D"hljs-=
number">0</span>));
        fileMenu.add(exitItem);

        <span class=3D"hljs-type">JMenu</span> <span class=3D"hljs-variable=
">elementMenu</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenu</span>=
(<span class=3D"hljs-string">"Element"</span>);
        <span class=3D"hljs-type">ButtonGroup</span> <span class=3D"hljs-va=
riable">group</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">ButtonGroup<=
/span>();
        <span class=3D"hljs-keyword">for</span> (FloorElementType type : Fl=
oorElementType.values()) {
            <span class=3D"hljs-type">JRadioButtonMenuItem</span> <span cla=
ss=3D"hljs-variable">item</span> <span class=3D"hljs-operator">=3D</span> <=
span class=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JR=
adioButtonMenuItem</span>(type.name());
            item.addActionListener(e -&gt; currentElementType =3D type);
            group.add(item);
            elementMenu.add(item);
        }

        menuBar.add(fileMenu);
        menuBar.add(elementMenu);
        setJMenuBar(menuBar);
    }

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword"=
>static</span> <span class=3D"hljs-keyword">void</span> <span class=3D"hljs=
-title function_">main</span><span class=3D"hljs-params">(String[] args)</s=
pan> {
        SwingUtilities.invokeLater(() -&gt; <span class=3D"hljs-keyword">ne=
w</span> <span class=3D"hljs-title class_">App</span>().setVisible(<span cl=
ass=3D"hljs-literal">true</span>));
    }
}
</code></div></div></pre><p>Now, the canvas is created with dimensions matc=
hing the size of the panel, ensuring it fills up the entire window.</p></di=
v></div></div></div></div></div></div></div><div class=3D"w-full text-token=
-text-primary" data-testid=3D"conversation-turn-36" style=3D"--avatar-color=
: #19c37d;"><div class=3D"px-4 py-2 justify-center text-base md:gap-6 m-aut=
o"><div class=3D"flex flex-1 text-base mx-auto gap-3 md:max-w-3xl lg:max-w-=
[40rem] xl:max-w-[48rem] group"><div class=3D"flex-shrink-0 flex flex-col r=
elative items-end"><div><div class=3D"pt-0.5"><div class=3D"gizmo-shadow-st=
roke flex h-6 w-6 items-center justify-center overflow-hidden rounded-full"=
><div class=3D"relative p-1 rounded-sm h-9 w-9 text-white flex items-center=
 justify-center" style=3D"background-color: rgb(121, 137, 255); width: 24px=
; height: 24px;"><svg stroke=3D"currentColor" fill=3D"none" stroke-width=3D=
"2" viewBox=3D"0 0 24 24" stroke-linecap=3D"round" stroke-linejoin=3D"round=
" class=3D"icon-sm" height=3D"1em" width=3D"1em" xmlns=3D"http://www.w3.org=
/2000/svg"><path d=3D"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path><ci=
rcle cx=3D"12" cy=3D"7" r=3D"4"></circle></svg></div></div></div></div></di=
v><div class=3D"relative flex w-full flex-col"><div class=3D"font-semibold =
select-none">Anonymous</div><div class=3D"flex-col gap-1 md:gap-3"><div cla=
ss=3D"flex flex-grow flex-col max-w-full"><div data-message-author-role=3D"=
user" data-message-id=3D"aaa22c76-6065-4d1d-90fb-9528e94e23cb" class=3D"min=
-h-[20px] text-message flex flex-col items-start gap-3 whitespace-pre-wrap =
break-words [.text-message+&amp;]:mt-5 overflow-x-auto"><div class=3D"">   =
     canvas =3D new BufferedImage(800, 600, BufferedImage.TYPE_INT_ARGB);
Instead of 800 and 600, get the user's monitor size</div></div></div></div>=
</div></div></div></div><div class=3D"w-full text-token-text-primary" data-=
testid=3D"conversation-turn-37" style=3D"--avatar-color: #19c37d;"><div cla=
ss=3D"px-4 py-2 justify-center text-base md:gap-6 m-auto"><div class=3D"fle=
x flex-1 text-base mx-auto gap-3 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48=
rem] group"><div class=3D"flex-shrink-0 flex flex-col relative items-end"><=
div><div class=3D"pt-0.5"><div class=3D"gizmo-shadow-stroke flex h-6 w-6 it=
ems-center justify-center overflow-hidden rounded-full"><div class=3D"relat=
ive p-1 rounded-sm h-9 w-9 text-white flex items-center justify-center" sty=
le=3D"background-color: rgb(25, 195, 125); width: 24px; height: 24px;"><svg=
 width=3D"41" height=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"ht=
tp://www.w3.org/2000/svg" class=3D"icon-sm" role=3D"img"><text x=3D"-9999" =
y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.8707C37.9808 15.5241 38.13=
63 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.68622C3=
5.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.4025=
9 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.=
785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.495044 14.0893 1.16803 1=
2.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.762=
86 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 12=
.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.4228C0.944492 20.5467 1.=
83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.3141=
C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.=
6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.920=
8 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087 2=
2.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37.3=
223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.9659=
 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.30=
23 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.8707Z=
M22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 36=
.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.2663=
 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V19.=
0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.977 =
21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.27=
91 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227=
 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 5.=
66048 26.0818 5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.902=
 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.110=
3V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736 2=
4.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35.0=
097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.2970=
7 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013 8=
.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.368=
23 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.5542L=
15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28.5=
191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.06716 =
21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31=
.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.480=
5 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631 1=
7.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.60=
47 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759C3=
5.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30.4=
733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.5338C=
32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.97=
65 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 10=
.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.07=
26 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.0921 =
11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 26.=
8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.5950=
8C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464 1=
3.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 10.=
8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.905=
8V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544 1=
3.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.17=
67C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.937 4=
.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14.4=
215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.9419=
ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L16=
.071 22.9985V17.9991Z" fill=3D"currentColor"></path></svg></div></div></div=
></div></div><div class=3D"relative flex w-full flex-col agent-turn"><div c=
lass=3D"font-semibold select-none">ChatGPT</div><div class=3D"flex-col gap-=
1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"><div data-mes=
sage-author-role=3D"assistant" data-message-id=3D"b16dc1d5-0d11-4f90-8c85-2=
e64566e649a" class=3D"min-h-[20px] text-message flex flex-col items-start g=
ap-3 whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 overflow-x-=
auto"><div class=3D"markdown prose w-full break-words dark:prose-invert dar=
k"><p>To get the user's monitor size dynamically, you can use the <code>Too=
lkit</code> class from <code>java.awt</code> package. Here's how you can mo=
dify the code to get the monitor size and set the canvas size accordingly:<=
/p><pre><div class=3D"dark bg-gray-950 rounded-md"><div class=3D"flex items=
-center relative text-token-text-secondary bg-token-main-surface-secondary =
px-4 py-2 text-xs font-sans justify-between rounded-t-md"><span>java</span>=
<span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-ce=
nter"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" x=
mlns=3D"http://www.w3.org/2000/svg" class=3D"icon-sm"><path fill-rule=3D"ev=
enodd" clip-rule=3D"evenodd" d=3D"M12 4C10.8954 4 10 4.89543 10 6H14C14 4.8=
9543 13.1046 4 12 4ZM8.53513 4C9.22675 2.8044 10.5194 2 12 2C13.4806 2 14.7=
733 2.8044 15.4649 4H17C18.6569 4 20 5.34315 20 7V19C20 20.6569 18.6569 22 =
17 22H7C5.34315 22 4 20.6569 4 19V7C4 5.34315 5.34315 4 7 4H8.53513ZM8 6H7C=
6.44772 6 6 6.44772 6 7V19C6 19.5523 6.44772 20 7 20H17C17.5523 20 18 19.55=
23 18 19V7C18 6.44772 17.5523 6 17 6H16C16 7.10457 15.1046 8 14 8H10C8.8954=
3 8 8 7.10457 8 6Z" fill=3D"currentColor"></path></svg>Copy code</button></=
span></div><div class=3D"p-4 overflow-y-auto"><code class=3D"!whitespace-pr=
e hljs language-java"><span class=3D"hljs-keyword">import</span> javax.imag=
eio.ImageIO;
<span class=3D"hljs-keyword">import</span> javax.swing.*;
<span class=3D"hljs-keyword">import</span> java.awt.*;
<span class=3D"hljs-keyword">import</span> java.awt.event.*;
<span class=3D"hljs-keyword">import</span> java.awt.image.BufferedImage;
<span class=3D"hljs-keyword">import</span> java.io.File;
<span class=3D"hljs-keyword">import</span> java.io.IOException;

<span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword">cla=
ss</span> <span class=3D"hljs-title class_">App</span> <span class=3D"hljs-=
keyword">extends</span> <span class=3D"hljs-title class_">JFrame</span> {

    <span class=3D"hljs-keyword">private</span> BufferedImage canvas;
    <span class=3D"hljs-keyword">private</span> Point startPoint;
    <span class=3D"hljs-keyword">private</span> Point endPoint;
    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-type">i=
nt</span> <span class=3D"hljs-variable">gridSize</span> <span class=3D"hljs=
-operator">=3D</span> <span class=3D"hljs-number">20</span>; <span class=3D=
"hljs-comment">// Size of grid cells</span>
    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-type">F=
loorElementType</span> <span class=3D"hljs-variable">currentElementType</sp=
an> <span class=3D"hljs-operator">=3D</span> FloorElementType.WALL; <span c=
lass=3D"hljs-comment">// Default to drawing walls</span>

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword"=
>enum</span> <span class=3D"hljs-title class_">FloorElementType</span> {
        WALL(Color.BLACK),
        WINDOW(Color.BLUE),
        DOOR(Color.RED);

        <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-key=
word">final</span> Color color;

        FloorElementType(Color color) {
            <span class=3D"hljs-built_in">this</span>.color =3D color;
        }

        <span class=3D"hljs-keyword">public</span> Color <span class=3D"hlj=
s-title function_">getColor</span><span class=3D"hljs-params">()</span> {
            <span class=3D"hljs-keyword">return</span> color;
        }
    }

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-title fu=
nction_">App</span><span class=3D"hljs-params">()</span> {
        <span class=3D"hljs-built_in">super</span>(<span class=3D"hljs-stri=
ng">"Floor Plan Designer"</span>);
        initUI();
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">initUI</span><span class=
=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">Dimension</span> <span class=3D"hljs-vari=
able">screenSize</span> <span class=3D"hljs-operator">=3D</span> Toolkit.ge=
tDefaultToolkit().getScreenSize();
        <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">=
width</span> <span class=3D"hljs-operator">=3D</span> (<span class=3D"hljs-=
type">int</span>) screenSize.getWidth();
        <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">=
height</span> <span class=3D"hljs-operator">=3D</span> (<span class=3D"hljs=
-type">int</span>) screenSize.getHeight();
       =20
        <span class=3D"hljs-type">JPanel</span> <span class=3D"hljs-variabl=
e">panel</span> <span class=3D"hljs-operator">=3D</span> <span class=3D"hlj=
s-keyword">new</span> <span class=3D"hljs-title class_">JPanel</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">protected</span> <span class=3D"hl=
js-keyword">void</span> <span class=3D"hljs-title function_">paintComponent=
</span><span class=3D"hljs-params">(Graphics g)</span> {
                <span class=3D"hljs-built_in">super</span>.paintComponent(g=
);
                <span class=3D"hljs-keyword">if</span> (canvas !=3D <span c=
lass=3D"hljs-literal">null</span>) {
                    g.drawImage(canvas, <span class=3D"hljs-number">0</span=
>, <span class=3D"hljs-number">0</span>, <span class=3D"hljs-literal">null<=
/span>);
                }

                <span class=3D"hljs-comment">// Draw grid lines</span>
                g.setColor(Color.LIGHT_GRAY);
                <span class=3D"hljs-keyword">for</span> (<span class=3D"hlj=
s-type">int</span> <span class=3D"hljs-variable">x</span> <span class=3D"hl=
js-operator">=3D</span> <span class=3D"hljs-number">0</span>; x &lt;=3D get=
Width(); x +=3D gridSize) {
                    g.drawLine(x, <span class=3D"hljs-number">0</span>, x, =
getHeight());
                }
                <span class=3D"hljs-keyword">for</span> (<span class=3D"hlj=
s-type">int</span> <span class=3D"hljs-variable">y</span> <span class=3D"hl=
js-operator">=3D</span> <span class=3D"hljs-number">0</span>; y &lt;=3D get=
Height(); y +=3D gridSize) {
                    g.drawLine(<span class=3D"hljs-number">0</span>, y, get=
Width(), y);
                }
            }
        };

        panel.setPreferredSize(<span class=3D"hljs-keyword">new</span> <spa=
n class=3D"hljs-title class_">Dimension</span>(width, height));
        panel.addMouseListener(<span class=3D"hljs-keyword">new</span> <spa=
n class=3D"hljs-title class_">MouseAdapter</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">mousePressed</spa=
n><span class=3D"hljs-params">(MouseEvent e)</span> {
                startPoint =3D getNearestGridPoint(e.getPoint());
                endPoint =3D startPoint;
            }

            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">mouseReleased</sp=
an><span class=3D"hljs-params">(MouseEvent e)</span> {
                endPoint =3D getNearestGridPoint(e.getPoint());
                <span class=3D"hljs-keyword">if</span> (startPoint.x =3D=3D=
 endPoint.x || startPoint.y =3D=3D endPoint.y) {
                    drawElement(startPoint, endPoint);
                }
            }
        });

        panel.addMouseMotionListener(<span class=3D"hljs-keyword">new</span=
> <span class=3D"hljs-title class_">MouseMotionAdapter</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">mouseDragged</spa=
n><span class=3D"hljs-params">(MouseEvent e)</span> {
                <span class=3D"hljs-type">Point</span> <span class=3D"hljs-=
variable">currentPoint</span> <span class=3D"hljs-operator">=3D</span> getN=
earestGridPoint(e.getPoint());
                <span class=3D"hljs-keyword">if</span> (currentPoint.x =3D=
=3D startPoint.x || currentPoint.y =3D=3D startPoint.y) {
                    endPoint =3D currentPoint;
                    drawElement(startPoint, endPoint);
                }
            }
        });

        add(panel);
        setupMenuBar();
        setExtendedState(JFrame.MAXIMIZED_BOTH); <span class=3D"hljs-commen=
t">// Maximize the frame</span>
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(<span class=3D"hljs-literal">null</span>);
        pack();
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">drawElement</span><span =
class=3D"hljs-params">(Point start, Point end)</span> {
        <span class=3D"hljs-keyword">if</span> (isInCanvasBounds(start) &am=
p;&amp; isInCanvasBounds(end)) {
            <span class=3D"hljs-type">Graphics2D</span> <span class=3D"hljs=
-variable">g2d</span> <span class=3D"hljs-operator">=3D</span> canvas.creat=
eGraphics();
            g2d.setColor(currentElementType.getColor());
            g2d.setStroke(<span class=3D"hljs-keyword">new</span> <span cla=
ss=3D"hljs-title class_">BasicStroke</span>(<span class=3D"hljs-number">2</=
span>));
            g2d.drawLine(start.x, start.y, end.x, end.y);
            g2d.dispose();
            repaint();
        }
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-type">b=
oolean</span> <span class=3D"hljs-title function_">isInCanvasBounds</span><=
span class=3D"hljs-params">(Point point)</span> {
        <span class=3D"hljs-keyword">return</span> point.x &gt;=3D <span cl=
ass=3D"hljs-number">0</span> &amp;&amp; point.x &lt; canvas.getWidth() &amp=
;&amp;
                point.y &gt;=3D <span class=3D"hljs-number">0</span> &amp;&=
amp; point.y &lt; canvas.getHeight();
    }

    <span class=3D"hljs-keyword">private</span> Point <span class=3D"hljs-t=
itle function_">getNearestGridPoint</span><span class=3D"hljs-params">(Poin=
t point)</span> {
        <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">=
x</span> <span class=3D"hljs-operator">=3D</span> (point.x / gridSize) * gr=
idSize;
        <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">=
y</span> <span class=3D"hljs-operator">=3D</span> (point.y / gridSize) * gr=
idSize;

        <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-keyw=
ord">new</span> <span class=3D"hljs-title class_">Point</span>(x, y);
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">clearCanvas</span><span =
class=3D"hljs-params">()</span> {
        canvas =3D <span class=3D"hljs-keyword">new</span> <span class=3D"h=
ljs-title class_">BufferedImage</span>(getWidth(), getHeight(), BufferedIma=
ge.TYPE_INT_ARGB);
        <span class=3D"hljs-type">Graphics2D</span> <span class=3D"hljs-var=
iable">g2d</span> <span class=3D"hljs-operator">=3D</span> canvas.createGra=
phics();
        g2d.setComposite(AlphaComposite.Clear);
        g2d.fillRect(<span class=3D"hljs-number">0</span>, <span class=3D"h=
ljs-number">0</span>, canvas.getWidth(), canvas.getHeight());
        g2d.setComposite(AlphaComposite.SrcOver);
        g2d.dispose();
        repaint();
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">saveImage</span><span cl=
ass=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">JFileChooser</span> <span class=3D"hljs-v=
ariable">fileChooser</span> <span class=3D"hljs-operator">=3D</span> <span =
class=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JFileCh=
ooser</span>();
        fileChooser.setDialogTitle(<span class=3D"hljs-string">"Save Image"=
</span>);
        <span class=3D"hljs-keyword">if</span> (fileChooser.showSaveDialog(=
<span class=3D"hljs-built_in">this</span>) =3D=3D JFileChooser.APPROVE_OPTI=
ON) {
            <span class=3D"hljs-type">File</span> <span class=3D"hljs-varia=
ble">file</span> <span class=3D"hljs-operator">=3D</span> fileChooser.getSe=
lectedFile();
            <span class=3D"hljs-keyword">try</span> {
                ImageIO.write(canvas, <span class=3D"hljs-string">"PNG"</sp=
an>, file);
            } <span class=3D"hljs-keyword">catch</span> (IOException ex) {
                ex.printStackTrace();
            }
        }
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">setupMenuBar</span><span=
 class=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">JMenuBar</span> <span class=3D"hljs-varia=
ble">menuBar</span> <span class=3D"hljs-operator">=3D</span> <span class=3D=
"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuBar</span>=
();

        <span class=3D"hljs-type">JMenu</span> <span class=3D"hljs-variable=
">fileMenu</span> <span class=3D"hljs-operator">=3D</span> <span class=3D"h=
ljs-keyword">new</span> <span class=3D"hljs-title class_">JMenu</span>(<spa=
n class=3D"hljs-string">"File"</span>);
        <span class=3D"hljs-type">JMenuItem</span> <span class=3D"hljs-vari=
able">saveItem</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuItem</s=
pan>(<span class=3D"hljs-string">"Save"</span>);
        saveItem.addActionListener(e -&gt; saveImage());
        fileMenu.add(saveItem);

        <span class=3D"hljs-type">JMenuItem</span> <span class=3D"hljs-vari=
able">exitItem</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuItem</s=
pan>(<span class=3D"hljs-string">"Exit"</span>);
        exitItem.addActionListener(e -&gt; System.exit(<span class=3D"hljs-=
number">0</span>));
        fileMenu.add(exitItem);

        <span class=3D"hljs-type">JMenu</span> <span class=3D"hljs-variable=
">elementMenu</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenu</span>=
(<span class=3D"hljs-string">"Element"</span>);
        <span class=3D"hljs-type">ButtonGroup</span> <span class=3D"hljs-va=
riable">group</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">ButtonGroup<=
/span>();
        <span class=3D"hljs-keyword">for</span> (FloorElementType type : Fl=
oorElementType.values()) {
            <span class=3D"hljs-type">JRadioButtonMenuItem</span> <span cla=
ss=3D"hljs-variable">item</span> <span class=3D"hljs-operator">=3D</span> <=
span class=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JR=
adioButtonMenuItem</span>(type.name());
            item.addActionListener(e -&gt; currentElementType =3D type);
            group.add(item);
            elementMenu.add(item);
        }

        menuBar.add(fileMenu);
        menuBar.add(elementMenu);
        setJMenuBar(menuBar);
    }

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword"=
>static</span> <span class=3D"hljs-keyword">void</span> <span class=3D"hljs=
-title function_">main</span><span class=3D"hljs-params">(String[] args)</s=
pan> {
        SwingUtilities.invokeLater(() -&gt; <span class=3D"hljs-keyword">ne=
w</span> <span class=3D"hljs-title class_">App</span>().setVisible(<span cl=
ass=3D"hljs-literal">true</span>));
    }
}
</code></div></div></pre><p>This code will dynamically set the canvas size =
to match the user's monitor size.</p></div></div></div></div></div></div></=
div></div><div class=3D"w-full text-token-text-primary" data-testid=3D"conv=
ersation-turn-38" style=3D"--avatar-color: #19c37d;"><div class=3D"px-4 py-=
2 justify-center text-base md:gap-6 m-auto"><div class=3D"flex flex-1 text-=
base mx-auto gap-3 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem] group"><d=
iv class=3D"flex-shrink-0 flex flex-col relative items-end"><div><div class=
=3D"pt-0.5"><div class=3D"gizmo-shadow-stroke flex h-6 w-6 items-center jus=
tify-center overflow-hidden rounded-full"><div class=3D"relative p-1 rounde=
d-sm h-9 w-9 text-white flex items-center justify-center" style=3D"backgrou=
nd-color: rgb(121, 137, 255); width: 24px; height: 24px;"><svg stroke=3D"cu=
rrentColor" fill=3D"none" stroke-width=3D"2" viewBox=3D"0 0 24 24" stroke-l=
inecap=3D"round" stroke-linejoin=3D"round" class=3D"icon-sm" height=3D"1em"=
 width=3D"1em" xmlns=3D"http://www.w3.org/2000/svg"><path d=3D"M20 21v-2a4 =
4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path><circle cx=3D"12" cy=3D"7" r=3D"4"></=
circle></svg></div></div></div></div></div><div class=3D"relative flex w-fu=
ll flex-col"><div class=3D"font-semibold select-none">Anonymous</div><div c=
lass=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-=
w-full"><div data-message-author-role=3D"user" data-message-id=3D"aaa2c155-=
f0df-40b1-81f5-3d7b115d9d0d" class=3D"min-h-[20px] text-message flex flex-c=
ol items-start gap-3 whitespace-pre-wrap break-words [.text-message+&amp;]:=
mt-5 overflow-x-auto"><div class=3D"">This is good, however the application=
 isn't full screened upon opening. Also I can no longer draw along the grid=
 lines now</div></div></div></div></div></div></div></div><div class=3D"w-f=
ull text-token-text-primary" data-testid=3D"conversation-turn-39" style=3D"=
--avatar-color: #19c37d;"><div class=3D"px-4 py-2 justify-center text-base =
md:gap-6 m-auto"><div class=3D"flex flex-1 text-base mx-auto gap-3 md:max-w=
-3xl lg:max-w-[40rem] xl:max-w-[48rem] group"><div class=3D"flex-shrink-0 f=
lex flex-col relative items-end"><div><div class=3D"pt-0.5"><div class=3D"g=
izmo-shadow-stroke flex h-6 w-6 items-center justify-center overflow-hidden=
 rounded-full"><div class=3D"relative p-1 rounded-sm h-9 w-9 text-white fle=
x items-center justify-center" style=3D"background-color: rgb(25, 195, 125)=
; width: 24px; height: 24px;"><svg width=3D"41" height=3D"41" viewBox=3D"0 =
0 41 41" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-s=
m" role=3D"img"><text x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.=
5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.274=
4 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4=
985C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 =
1.94125 22.4257 1.36341C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C=
16.1708 0.495044 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.=
44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 =
10.0087 2.73073 11.0782 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.=
721698 18.4228C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.47=
59 2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 =
32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8=
907 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366=
C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39=
.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.50=
27 33.2332 34.8167 32.6547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38=
.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.451=
7 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 =
37.2733 17.6994 36.1501C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.90=
04 31.4156C26.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 2=
6.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.95=
41 21.0198 29.9656 21.0359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30=
.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.483=
8 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 =
5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7=
248C13.8975 30.8408 14.1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.=
8408 15.0073 30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376=
 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33=
.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.387=
85 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364=
 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.1=
9351 20.0378 8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.826=
7 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28=
.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.0404=
6 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3=
.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4=
981C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928=
 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.=
6606 20.1613C37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878=
 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30=
.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.958=
6 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0=
556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045=
 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.=
9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.075=
3 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L2=
4.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31=
589 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334=
 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L1=
0.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9=
441 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848=
 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.=
21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.103=
4 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14=
.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.48=
77 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 =
17.9975V22.9985L20.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentCol=
or"></path></svg></div></div></div></div></div><div class=3D"relative flex =
w-full flex-col agent-turn"><div class=3D"font-semibold select-none">ChatGP=
T</div><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow =
flex-col max-w-full"><div data-message-author-role=3D"assistant" data-messa=
ge-id=3D"1595a337-1bfe-4398-8abb-5f44ae2561de" class=3D"min-h-[20px] text-m=
essage flex flex-col items-start gap-3 whitespace-pre-wrap break-words [.te=
xt-message+&amp;]:mt-5 overflow-x-auto"><div class=3D"markdown prose w-full=
 break-words dark:prose-invert dark"><p>To ensure that the application open=
s in fullscreen mode and allow drawing along the grid lines, we need to mak=
e some adjustments. Here's the modified code:</p><pre><div class=3D"dark bg=
-gray-950 rounded-md"><div class=3D"flex items-center relative text-token-t=
ext-secondary bg-token-main-surface-secondary px-4 py-2 text-xs font-sans j=
ustify-between rounded-t-md"><span>java</span><span class=3D"" data-state=
=3D"closed"><button class=3D"flex gap-1 items-center"><svg width=3D"24" hei=
ght=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2=
000/svg" class=3D"icon-sm"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd=
" d=3D"M12 4C10.8954 4 10 4.89543 10 6H14C14 4.89543 13.1046 4 12 4ZM8.5351=
3 4C9.22675 2.8044 10.5194 2 12 2C13.4806 2 14.7733 2.8044 15.4649 4H17C18.=
6569 4 20 5.34315 20 7V19C20 20.6569 18.6569 22 17 22H7C5.34315 22 4 20.656=
9 4 19V7C4 5.34315 5.34315 4 7 4H8.53513ZM8 6H7C6.44772 6 6 6.44772 6 7V19C=
6 19.5523 6.44772 20 7 20H17C17.5523 20 18 19.5523 18 19V7C18 6.44772 17.55=
23 6 17 6H16C16 7.10457 15.1046 8 14 8H10C8.89543 8 8 7.10457 8 6Z" fill=3D=
"currentColor"></path></svg>Copy code</button></span></div><div class=3D"p-=
4 overflow-y-auto"><code class=3D"!whitespace-pre hljs language-java"><span=
 class=3D"hljs-keyword">import</span> javax.imageio.ImageIO;
<span class=3D"hljs-keyword">import</span> javax.swing.*;
<span class=3D"hljs-keyword">import</span> java.awt.*;
<span class=3D"hljs-keyword">import</span> java.awt.event.*;
<span class=3D"hljs-keyword">import</span> java.awt.image.BufferedImage;
<span class=3D"hljs-keyword">import</span> java.io.File;
<span class=3D"hljs-keyword">import</span> java.io.IOException;

<span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword">cla=
ss</span> <span class=3D"hljs-title class_">App</span> <span class=3D"hljs-=
keyword">extends</span> <span class=3D"hljs-title class_">JFrame</span> {

    <span class=3D"hljs-keyword">private</span> BufferedImage canvas;
    <span class=3D"hljs-keyword">private</span> Point startPoint;
    <span class=3D"hljs-keyword">private</span> Point endPoint;
    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-type">i=
nt</span> <span class=3D"hljs-variable">gridSize</span> <span class=3D"hljs=
-operator">=3D</span> <span class=3D"hljs-number">20</span>; <span class=3D=
"hljs-comment">// Size of grid cells</span>
    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-type">F=
loorElementType</span> <span class=3D"hljs-variable">currentElementType</sp=
an> <span class=3D"hljs-operator">=3D</span> FloorElementType.WALL; <span c=
lass=3D"hljs-comment">// Default to drawing walls</span>

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword"=
>enum</span> <span class=3D"hljs-title class_">FloorElementType</span> {
        WALL(Color.BLACK),
        WINDOW(Color.BLUE),
        DOOR(Color.RED);

        <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-key=
word">final</span> Color color;

        FloorElementType(Color color) {
            <span class=3D"hljs-built_in">this</span>.color =3D color;
        }

        <span class=3D"hljs-keyword">public</span> Color <span class=3D"hlj=
s-title function_">getColor</span><span class=3D"hljs-params">()</span> {
            <span class=3D"hljs-keyword">return</span> color;
        }
    }

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-title fu=
nction_">App</span><span class=3D"hljs-params">()</span> {
        <span class=3D"hljs-built_in">super</span>(<span class=3D"hljs-stri=
ng">"Floor Plan Designer"</span>);
        setExtendedState(JFrame.MAXIMIZED_BOTH); <span class=3D"hljs-commen=
t">// Start in fullscreen mode</span>
        setUndecorated(<span class=3D"hljs-literal">true</span>); <span cla=
ss=3D"hljs-comment">// Remove window decorations</span>
        initUI();
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">initUI</span><span class=
=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">Dimension</span> <span class=3D"hljs-vari=
able">screenSize</span> <span class=3D"hljs-operator">=3D</span> Toolkit.ge=
tDefaultToolkit().getScreenSize();
        <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">=
width</span> <span class=3D"hljs-operator">=3D</span> (<span class=3D"hljs-=
type">int</span>) screenSize.getWidth();
        <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">=
height</span> <span class=3D"hljs-operator">=3D</span> (<span class=3D"hljs=
-type">int</span>) screenSize.getHeight();
       =20
        <span class=3D"hljs-type">JPanel</span> <span class=3D"hljs-variabl=
e">panel</span> <span class=3D"hljs-operator">=3D</span> <span class=3D"hlj=
s-keyword">new</span> <span class=3D"hljs-title class_">JPanel</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">protected</span> <span class=3D"hl=
js-keyword">void</span> <span class=3D"hljs-title function_">paintComponent=
</span><span class=3D"hljs-params">(Graphics g)</span> {
                <span class=3D"hljs-built_in">super</span>.paintComponent(g=
);
                <span class=3D"hljs-keyword">if</span> (canvas !=3D <span c=
lass=3D"hljs-literal">null</span>) {
                    g.drawImage(canvas, <span class=3D"hljs-number">0</span=
>, <span class=3D"hljs-number">0</span>, <span class=3D"hljs-literal">null<=
/span>);
                }

                <span class=3D"hljs-comment">// Draw grid lines</span>
                g.setColor(Color.LIGHT_GRAY);
                <span class=3D"hljs-keyword">for</span> (<span class=3D"hlj=
s-type">int</span> <span class=3D"hljs-variable">x</span> <span class=3D"hl=
js-operator">=3D</span> <span class=3D"hljs-number">0</span>; x &lt;=3D get=
Width(); x +=3D gridSize) {
                    g.drawLine(x, <span class=3D"hljs-number">0</span>, x, =
getHeight());
                }
                <span class=3D"hljs-keyword">for</span> (<span class=3D"hlj=
s-type">int</span> <span class=3D"hljs-variable">y</span> <span class=3D"hl=
js-operator">=3D</span> <span class=3D"hljs-number">0</span>; y &lt;=3D get=
Height(); y +=3D gridSize) {
                    g.drawLine(<span class=3D"hljs-number">0</span>, y, get=
Width(), y);
                }
            }
        };

        panel.setPreferredSize(<span class=3D"hljs-keyword">new</span> <spa=
n class=3D"hljs-title class_">Dimension</span>(width, height));
        panel.addMouseListener(<span class=3D"hljs-keyword">new</span> <spa=
n class=3D"hljs-title class_">MouseAdapter</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">mousePressed</spa=
n><span class=3D"hljs-params">(MouseEvent e)</span> {
                startPoint =3D getNearestGridPoint(e.getPoint());
                endPoint =3D startPoint;
            }

            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">mouseReleased</sp=
an><span class=3D"hljs-params">(MouseEvent e)</span> {
                endPoint =3D getNearestGridPoint(e.getPoint());
                <span class=3D"hljs-keyword">if</span> (startPoint.x =3D=3D=
 endPoint.x || startPoint.y =3D=3D endPoint.y) {
                    drawElement(startPoint, endPoint);
                }
            }
        });

        panel.addMouseMotionListener(<span class=3D"hljs-keyword">new</span=
> <span class=3D"hljs-title class_">MouseMotionAdapter</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">mouseDragged</spa=
n><span class=3D"hljs-params">(MouseEvent e)</span> {
                <span class=3D"hljs-type">Point</span> <span class=3D"hljs-=
variable">currentPoint</span> <span class=3D"hljs-operator">=3D</span> getN=
earestGridPoint(e.getPoint());
                <span class=3D"hljs-keyword">if</span> (currentPoint.x =3D=
=3D startPoint.x || currentPoint.y =3D=3D startPoint.y) {
                    endPoint =3D currentPoint;
                    drawElement(startPoint, endPoint);
                }
            }
        });

        add(panel);
        setupMenuBar();
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(<span class=3D"hljs-literal">null</span>);
        pack();
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">drawElement</span><span =
class=3D"hljs-params">(Point start, Point end)</span> {
        <span class=3D"hljs-keyword">if</span> (isInCanvasBounds(start) &am=
p;&amp; isInCanvasBounds(end)) {
            <span class=3D"hljs-type">Graphics2D</span> <span class=3D"hljs=
-variable">g2d</span> <span class=3D"hljs-operator">=3D</span> canvas.creat=
eGraphics();
            g2d.setColor(currentElementType.getColor());
            g2d.setStroke(<span class=3D"hljs-keyword">new</span> <span cla=
ss=3D"hljs-title class_">BasicStroke</span>(<span class=3D"hljs-number">2</=
span>));
            g2d.drawLine(start.x, start.y, end.x, end.y);
            g2d.dispose();
            repaint();
        }
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-type">b=
oolean</span> <span class=3D"hljs-title function_">isInCanvasBounds</span><=
span class=3D"hljs-params">(Point point)</span> {
        <span class=3D"hljs-keyword">return</span> point.x &gt;=3D <span cl=
ass=3D"hljs-number">0</span> &amp;&amp; point.x &lt; canvas.getWidth() &amp=
;&amp;
                point.y &gt;=3D <span class=3D"hljs-number">0</span> &amp;&=
amp; point.y &lt; canvas.getHeight();
    }

    <span class=3D"hljs-keyword">private</span> Point <span class=3D"hljs-t=
itle function_">getNearestGridPoint</span><span class=3D"hljs-params">(Poin=
t point)</span> {
        <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">=
x</span> <span class=3D"hljs-operator">=3D</span> (point.x / gridSize) * gr=
idSize;
        <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">=
y</span> <span class=3D"hljs-operator">=3D</span> (point.y / gridSize) * gr=
idSize;

        <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-keyw=
ord">new</span> <span class=3D"hljs-title class_">Point</span>(x, y);
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">clearCanvas</span><span =
class=3D"hljs-params">()</span> {
        canvas =3D <span class=3D"hljs-keyword">new</span> <span class=3D"h=
ljs-title class_">BufferedImage</span>(getWidth(), getHeight(), BufferedIma=
ge.TYPE_INT_ARGB);
        <span class=3D"hljs-type">Graphics2D</span> <span class=3D"hljs-var=
iable">g2d</span> <span class=3D"hljs-operator">=3D</span> canvas.createGra=
phics();
        g2d.setComposite(AlphaComposite.Clear);
        g2d.fillRect(<span class=3D"hljs-number">0</span>, <span class=3D"h=
ljs-number">0</span>, canvas.getWidth(), canvas.getHeight());
        g2d.setComposite(AlphaComposite.SrcOver);
        g2d.dispose();
        repaint();
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">saveImage</span><span cl=
ass=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">JFileChooser</span> <span class=3D"hljs-v=
ariable">fileChooser</span> <span class=3D"hljs-operator">=3D</span> <span =
class=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JFileCh=
ooser</span>();
        fileChooser.setDialogTitle(<span class=3D"hljs-string">"Save Image"=
</span>);
        <span class=3D"hljs-keyword">if</span> (fileChooser.showSaveDialog(=
<span class=3D"hljs-built_in">this</span>) =3D=3D JFileChooser.APPROVE_OPTI=
ON) {
            <span class=3D"hljs-type">File</span> <span class=3D"hljs-varia=
ble">file</span> <span class=3D"hljs-operator">=3D</span> fileChooser.getSe=
lectedFile();
            <span class=3D"hljs-keyword">try</span> {
                ImageIO.write(canvas, <span class=3D"hljs-string">"PNG"</sp=
an>, file);
            } <span class=3D"hljs-keyword">catch</span> (IOException ex) {
                ex.printStackTrace();
            }
        }
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">setupMenuBar</span><span=
 class=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">JMenuBar</span> <span class=3D"hljs-varia=
ble">menuBar</span> <span class=3D"hljs-operator">=3D</span> <span class=3D=
"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuBar</span>=
();

        <span class=3D"hljs-type">JMenu</span> <span class=3D"hljs-variable=
">fileMenu</span> <span class=3D"hljs-operator">=3D</span> <span class=3D"h=
ljs-keyword">new</span> <span class=3D"hljs-title class_">JMenu</span>(<spa=
n class=3D"hljs-string">"File"</span>);
        <span class=3D"hljs-type">JMenuItem</span> <span class=3D"hljs-vari=
able">saveItem</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuItem</s=
pan>(<span class=3D"hljs-string">"Save"</span>);
        saveItem.addActionListener(e -&gt; saveImage());
        fileMenu.add(saveItem);

        <span class=3D"hljs-type">JMenuItem</span> <span class=3D"hljs-vari=
able">exitItem</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuItem</s=
pan>(<span class=3D"hljs-string">"Exit"</span>);
        exitItem.addActionListener(e -&gt; System.exit(<span class=3D"hljs-=
number">0</span>));
        fileMenu.add(exitItem);

        <span class=3D"hljs-type">JMenu</span> <span class=3D"hljs-variable=
">elementMenu</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenu</span>=
(<span class=3D"hljs-string">"Element"</span>);
        <span class=3D"hljs-type">ButtonGroup</span> <span class=3D"hljs-va=
riable">group</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">ButtonGroup<=
/span>();
        <span class=3D"hljs-keyword">for</span> (FloorElementType type : Fl=
oorElementType.values()) {
            <span class=3D"hljs-type">JRadioButtonMenuItem</span> <span cla=
ss=3D"hljs-variable">item</span> <span class=3D"hljs-operator">=3D</span> <=
span class=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JR=
adioButtonMenuItem</span>(type.name());
            item.addActionListener(e -&gt; currentElementType =3D type);
            group.add(item);
            elementMenu.add(item);
        }

        menuBar.add(fileMenu);
        menuBar.add(elementMenu);
        setJMenuBar(menuBar);
    }

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword"=
>static</span> <span class=3D"hljs-keyword">void</span> <span class=3D"hljs=
-title function_">main</span><span class=3D"hljs-params">(String[] args)</s=
pan> {
        SwingUtilities.invokeLater(() -&gt; <span class=3D"hljs-keyword">ne=
w</span> <span class=3D"hljs-title class_">App</span>().setVisible(<span cl=
ass=3D"hljs-literal">true</span>));
    }
}
</code></div></div></pre><p>Now, the application will open in fullscreen mo=
de without window decorations, and you can draw along the grid lines.</p></=
div></div></div></div></div></div></div></div><div class=3D"w-full text-tok=
en-text-primary" data-testid=3D"conversation-turn-40" style=3D"--avatar-col=
or: #19c37d;"><div class=3D"px-4 py-2 justify-center text-base md:gap-6 m-a=
uto"><div class=3D"flex flex-1 text-base mx-auto gap-3 md:max-w-3xl lg:max-=
w-[40rem] xl:max-w-[48rem] group"><div class=3D"flex-shrink-0 flex flex-col=
 relative items-end"><div><div class=3D"pt-0.5"><div class=3D"gizmo-shadow-=
stroke flex h-6 w-6 items-center justify-center overflow-hidden rounded-ful=
l"><div class=3D"relative p-1 rounded-sm h-9 w-9 text-white flex items-cent=
er justify-center" style=3D"background-color: rgb(121, 137, 255); width: 24=
px; height: 24px;"><svg stroke=3D"currentColor" fill=3D"none" stroke-width=
=3D"2" viewBox=3D"0 0 24 24" stroke-linecap=3D"round" stroke-linejoin=3D"ro=
und" class=3D"icon-sm" height=3D"1em" width=3D"1em" xmlns=3D"http://www.w3.=
org/2000/svg"><path d=3D"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path>=
<circle cx=3D"12" cy=3D"7" r=3D"4"></circle></svg></div></div></div></div><=
/div><div class=3D"relative flex w-full flex-col"><div class=3D"font-semibo=
ld select-none">Anonymous</div><div class=3D"flex-col gap-1 md:gap-3"><div =
class=3D"flex flex-grow flex-col max-w-full"><div data-message-author-role=
=3D"user" data-message-id=3D"aaa2de80-caa3-45a6-9590-13340b7c5bb3" class=3D=
"min-h-[20px] text-message flex flex-col items-start gap-3 whitespace-pre-w=
rap break-words [.text-message+&amp;]:mt-5 overflow-x-auto"><div class=3D""=
>import javax.imageio.ImageIO;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

public class App extends JFrame {

    private BufferedImage canvas;
    private Point startPoint;
    private Point endPoint;
    private int gridSize =3D 20; // Size of grid cells
    private FloorElementType currentElementType =3D FloorElementType.WALL; =
// Default to drawing walls

    public enum FloorElementType {
        WALL(Color.BLACK),
        WINDOW(Color.BLUE),
        DOOR(Color.RED);

        private final Color color;

        FloorElementType(Color color) {
            this.color =3D color;
        }

        public Color getColor() {
            return color;
        }
    }

    public App() {
        super("Floor Plan Designer");
        initUI();
    }

    private void initUI() {
        Dimension screenSize =3D Toolkit.getDefaultToolkit().getScreenSize(=
);
        int width =3D (int) screenSize.getWidth();
        int height =3D (int) screenSize.getHeight();
        canvas =3D new BufferedImage(width, height, BufferedImage.TYPE_INT_=
ARGB);
        clearCanvas();

        JPanel panel =3D new JPanel() {
            @Override
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
                g.drawImage(canvas, 0, 0, null);

                // Draw grid lines
                g.setColor(Color.LIGHT_GRAY);
                for (int x =3D 0; x &lt;=3D getWidth(); x +=3D gridSize) {
                    g.drawLine(x, 0, x, getHeight());
                }
                for (int y =3D 0; y &lt;=3D getHeight(); y +=3D gridSize) {
                    g.drawLine(0, y, getWidth(), y);
                }
            }
        };

        panel.setPreferredSize(new Dimension(width, height));
        panel.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                startPoint =3D getNearestGridPoint(e.getPoint());
                endPoint =3D startPoint;
            }

            @Override
            public void mouseReleased(MouseEvent e) {
                endPoint =3D getNearestGridPoint(e.getPoint());
                if (startPoint.x =3D=3D endPoint.x || startPoint.y =3D=3D e=
ndPoint.y) {
                    drawElement(startPoint, endPoint);
                }
            }
        });

        panel.addMouseMotionListener(new MouseMotionAdapter() {
            @Override
            public void mouseDragged(MouseEvent e) {
                Point currentPoint =3D getNearestGridPoint(e.getPoint());
                if (currentPoint.x =3D=3D startPoint.x || currentPoint.y =
=3D=3D startPoint.y) {
                    endPoint =3D currentPoint;
                    drawElement(startPoint, endPoint);
                }
            }
        });

        add(panel);
        setupMenuBar();
        setExtendedState(JFrame.MAXIMIZED_BOTH); // Maximize the frame
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
    }

    private void drawElement(Point start, Point end) {
        if (isInCanvasBounds(start) &amp;&amp; isInCanvasBounds(end)) {
            Graphics2D g2d =3D canvas.createGraphics();
            g2d.setColor(currentElementType.getColor());
            g2d.setStroke(new BasicStroke(2));
            g2d.drawLine(start.x, start.y, end.x, end.y);
            g2d.dispose();
            repaint();
        }
    }

    private boolean isInCanvasBounds(Point point) {
        return point.x &gt;=3D 0 &amp;&amp; point.x &lt; canvas.getWidth() =
&amp;&amp;
                point.y &gt;=3D 0 &amp;&amp; point.y &lt; canvas.getHeight(=
);
    }

    private Point getNearestGridPoint(Point point) {
        int x =3D (point.x / gridSize) * gridSize;
        int y =3D (point.y / gridSize) * gridSize;

        return new Point(x, y);
    }

    private void clearCanvas() {
        Graphics2D g2d =3D canvas.createGraphics();
        g2d.setComposite(AlphaComposite.Clear);
        g2d.fillRect(0, 0, canvas.getWidth(), canvas.getHeight());
        g2d.setComposite(AlphaComposite.SrcOver);
        g2d.dispose();
        repaint();
    }

    private void saveImage() {
        JFileChooser fileChooser =3D new JFileChooser();
        fileChooser.setDialogTitle("Save Image");
        if (fileChooser.showSaveDialog(this) =3D=3D JFileChooser.APPROVE_OP=
TION) {
            File file =3D fileChooser.getSelectedFile();
            try {
                ImageIO.write(canvas, "PNG", file);
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
    }

    private void setupMenuBar() {
        JMenuBar menuBar =3D new JMenuBar();

        JMenu fileMenu =3D new JMenu("File");
        JMenuItem saveItem =3D new JMenuItem("Save");
        saveItem.addActionListener(e -&gt; saveImage());
        fileMenu.add(saveItem);

        JMenuItem exitItem =3D new JMenuItem("Exit");
        exitItem.addActionListener(e -&gt; System.exit(0));
        fileMenu.add(exitItem);

        JMenu elementMenu =3D new JMenu("Element");
        ButtonGroup group =3D new ButtonGroup();
        for (FloorElementType type : FloorElementType.values()) {
            JRadioButtonMenuItem item =3D new JRadioButtonMenuItem(type.nam=
e());
            item.addActionListener(e -&gt; currentElementType =3D type);
            group.add(item);
            elementMenu.add(item);
        }

        menuBar.add(fileMenu);
        menuBar.add(elementMenu);
        setJMenuBar(menuBar);
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -&gt; new App().setVisible(true));
    }
}
 Use this code from now on</div></div></div></div></div></div></div></div><=
div class=3D"w-full text-token-text-primary" data-testid=3D"conversation-tu=
rn-41" style=3D"--avatar-color: #19c37d;"><div class=3D"px-4 py-2 justify-c=
enter text-base md:gap-6 m-auto"><div class=3D"flex flex-1 text-base mx-aut=
o gap-3 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem] group"><div class=3D=
"flex-shrink-0 flex flex-col relative items-end"><div><div class=3D"pt-0.5"=
><div class=3D"gizmo-shadow-stroke flex h-6 w-6 items-center justify-center=
 overflow-hidden rounded-full"><div class=3D"relative p-1 rounded-sm h-9 w-=
9 text-white flex items-center justify-center" style=3D"background-color: r=
gb(25, 195, 125); width: 24px; height: 24px;"><svg width=3D"41" height=3D"4=
1" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"=
 class=3D"icon-sm" role=3D"img"><text x=3D"-9999" y=3D"-9999">ChatGPT</text=
><path d=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.9886 12.685=
9C37.8409 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 33.9882 5.=
3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078C24.8796=
 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.7249 0.491269 1=
8.3058 0.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.42214C10.6335 3.=
67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 =
9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.956464 14.1591 0.4=
98905 16.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.5449 3.268 24.12=
93C2.81966 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 3.40701 =
31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013C10.7=
141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786 39.0587=
 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24.6307 40=
.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.5506 32.11=
19 33.5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.115 30.9874 38=
.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.0789 22.574=
8C39.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 =
37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.8666 36.0586 17.9=
36 36.0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.3813 30.9378C2=
6.4964 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20.998C29.93=
89 21.0068 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.9842 21.0707 29=
.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.6841C26.387=
2 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 =
5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5.73461 26.=
1244L13.699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.902C14.583 30=
.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C24.7321 29.0177=
 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24.6829 29=
.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.4954C9.025=
06 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12.0998=
 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.19491 10=
.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8.48312 20.661=
9 8.64893 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C15.1894 28=
.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.516 15.092=
4 28.5082L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289 19.3046C3=
.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4=
411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787C25.6729=
 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17.849 36.=
0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 37.4832 24.2684=
C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33.9415 30=
.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.3889V21.18=
8C32.6066 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 32.154 20.=
1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.9142 35.069=
 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.0943C26.=
2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.9982C16.071=
5 11.9783 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048 11.9068 1=
6.1207 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28.2383 6.25=
482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939 34.2842=
 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15.0128ZM1=
4.2424 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10.8309 19.9=
602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.18295=
 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15.1275 3.=
82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.35876 22.008=
9 3.93941 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.98473L14=
.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.3065 10.26=
16 14.2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 =
15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.9985V17.9991Z" fi=
ll=3D"currentColor"></path></svg></div></div></div></div></div><div class=
=3D"relative flex w-full flex-col agent-turn"><div class=3D"font-semibold s=
elect-none">ChatGPT</div><div class=3D"flex-col gap-1 md:gap-3"><div class=
=3D"flex flex-grow flex-col max-w-full"><div data-message-author-role=3D"as=
sistant" data-message-id=3D"18a340f7-2788-4f41-ab9b-145052966fd7" class=3D"=
min-h-[20px] text-message flex flex-col items-start gap-3 whitespace-pre-wr=
ap break-words [.text-message+&amp;]:mt-5 overflow-x-auto"><div class=3D"ma=
rkdown prose w-full break-words dark:prose-invert dark"><p>Your code appear=
s to be mostly correct. However, I noticed that the grid lines aren't fully=
 covering the canvas, and there's a small margin on the right and bottom si=
des. Let's fix that.</p><p>Modify the <code>initUI</code> method to correct=
ly draw the grid lines and set the size of the canvas to match the panel si=
ze:</p><pre><div class=3D"dark bg-gray-950 rounded-md"><div class=3D"flex i=
tems-center relative text-token-text-secondary bg-token-main-surface-second=
ary px-4 py-2 text-xs font-sans justify-between rounded-t-md"><span>java</s=
pan><span class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 item=
s-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"non=
e" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-sm"><path fill-rule=
=3D"evenodd" clip-rule=3D"evenodd" d=3D"M12 4C10.8954 4 10 4.89543 10 6H14C=
14 4.89543 13.1046 4 12 4ZM8.53513 4C9.22675 2.8044 10.5194 2 12 2C13.4806 =
2 14.7733 2.8044 15.4649 4H17C18.6569 4 20 5.34315 20 7V19C20 20.6569 18.65=
69 22 17 22H7C5.34315 22 4 20.6569 4 19V7C4 5.34315 5.34315 4 7 4H8.53513ZM=
8 6H7C6.44772 6 6 6.44772 6 7V19C6 19.5523 6.44772 20 7 20H17C17.5523 20 18=
 19.5523 18 19V7C18 6.44772 17.5523 6 17 6H16C16 7.10457 15.1046 8 14 8H10C=
8.89543 8 8 7.10457 8 6Z" fill=3D"currentColor"></path></svg>Copy code</but=
ton></span></div><div class=3D"p-4 overflow-y-auto"><code class=3D"!whitesp=
ace-pre hljs language-java"><span class=3D"hljs-keyword">private</span> <sp=
an class=3D"hljs-keyword">void</span> <span class=3D"hljs-title function_">=
initUI</span><span class=3D"hljs-params">()</span> {
    <span class=3D"hljs-type">Dimension</span> <span class=3D"hljs-variable=
">screenSize</span> <span class=3D"hljs-operator">=3D</span> Toolkit.getDef=
aultToolkit().getScreenSize();
    <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">widt=
h</span> <span class=3D"hljs-operator">=3D</span> (<span class=3D"hljs-type=
">int</span>) screenSize.getWidth();
    <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">heig=
ht</span> <span class=3D"hljs-operator">=3D</span> (<span class=3D"hljs-typ=
e">int</span>) screenSize.getHeight();
    canvas =3D <span class=3D"hljs-keyword">new</span> <span class=3D"hljs-=
title class_">BufferedImage</span>(width, height, BufferedImage.TYPE_INT_AR=
GB);
    clearCanvas();

    <span class=3D"hljs-type">JPanel</span> <span class=3D"hljs-variable">p=
anel</span> <span class=3D"hljs-operator">=3D</span> <span class=3D"hljs-ke=
yword">new</span> <span class=3D"hljs-title class_">JPanel</span>() {
        <span class=3D"hljs-meta">@Override</span>
        <span class=3D"hljs-keyword">protected</span> <span class=3D"hljs-k=
eyword">void</span> <span class=3D"hljs-title function_">paintComponent</sp=
an><span class=3D"hljs-params">(Graphics g)</span> {
            <span class=3D"hljs-built_in">super</span>.paintComponent(g);
            g.drawImage(canvas, <span class=3D"hljs-number">0</span>, <span=
 class=3D"hljs-number">0</span>, <span class=3D"hljs-literal">null</span>);

            <span class=3D"hljs-comment">// Draw grid lines</span>
            g.setColor(Color.LIGHT_GRAY);
            <span class=3D"hljs-keyword">for</span> (<span class=3D"hljs-ty=
pe">int</span> <span class=3D"hljs-variable">x</span> <span class=3D"hljs-o=
perator">=3D</span> <span class=3D"hljs-number">0</span>; x &lt;=3D getWidt=
h(); x +=3D gridSize) {
                g.drawLine(x, <span class=3D"hljs-number">0</span>, x, getH=
eight());
            }
            <span class=3D"hljs-keyword">for</span> (<span class=3D"hljs-ty=
pe">int</span> <span class=3D"hljs-variable">y</span> <span class=3D"hljs-o=
perator">=3D</span> <span class=3D"hljs-number">0</span>; y &lt;=3D getHeig=
ht(); y +=3D gridSize) {
                g.drawLine(<span class=3D"hljs-number">0</span>, y, getWidt=
h(), y);
            }
        }
    };

    panel.setPreferredSize(<span class=3D"hljs-keyword">new</span> <span cl=
ass=3D"hljs-title class_">Dimension</span>(width, height));
    panel.addMouseListener(<span class=3D"hljs-keyword">new</span> <span cl=
ass=3D"hljs-title class_">MouseAdapter</span>() {
        <span class=3D"hljs-meta">@Override</span>
        <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyw=
ord">void</span> <span class=3D"hljs-title function_">mousePressed</span><s=
pan class=3D"hljs-params">(MouseEvent e)</span> {
            startPoint =3D getNearestGridPoint(e.getPoint());
            endPoint =3D startPoint;
        }

        <span class=3D"hljs-meta">@Override</span>
        <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyw=
ord">void</span> <span class=3D"hljs-title function_">mouseReleased</span><=
span class=3D"hljs-params">(MouseEvent e)</span> {
            endPoint =3D getNearestGridPoint(e.getPoint());
            <span class=3D"hljs-keyword">if</span> (startPoint.x =3D=3D end=
Point.x || startPoint.y =3D=3D endPoint.y) {
                drawElement(startPoint, endPoint);
            }
        }
    });

    panel.addMouseMotionListener(<span class=3D"hljs-keyword">new</span> <s=
pan class=3D"hljs-title class_">MouseMotionAdapter</span>() {
        <span class=3D"hljs-meta">@Override</span>
        <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyw=
ord">void</span> <span class=3D"hljs-title function_">mouseDragged</span><s=
pan class=3D"hljs-params">(MouseEvent e)</span> {
            <span class=3D"hljs-type">Point</span> <span class=3D"hljs-vari=
able">currentPoint</span> <span class=3D"hljs-operator">=3D</span> getNeare=
stGridPoint(e.getPoint());
            <span class=3D"hljs-keyword">if</span> (currentPoint.x =3D=3D s=
tartPoint.x || currentPoint.y =3D=3D startPoint.y) {
                endPoint =3D currentPoint;
                drawElement(startPoint, endPoint);
            }
        }
    });

    add(panel);
    setupMenuBar();
    setExtendedState(JFrame.MAXIMIZED_BOTH); <span class=3D"hljs-comment">/=
/ Maximize the frame</span>
    setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    setLocationRelativeTo(<span class=3D"hljs-literal">null</span>);
}
</code></div></div></pre><p>This adjustment ensures that the grid lines cov=
er the entire canvas, and you'll be able to draw straight lines along the g=
rid.</p></div></div></div></div></div></div></div></div><div class=3D"w-ful=
l text-token-text-primary" data-testid=3D"conversation-turn-42" style=3D"--=
avatar-color: #19c37d;"><div class=3D"px-4 py-2 justify-center text-base md=
:gap-6 m-auto"><div class=3D"flex flex-1 text-base mx-auto gap-3 md:max-w-3=
xl lg:max-w-[40rem] xl:max-w-[48rem] group"><div class=3D"flex-shrink-0 fle=
x flex-col relative items-end"><div><div class=3D"pt-0.5"><div class=3D"giz=
mo-shadow-stroke flex h-6 w-6 items-center justify-center overflow-hidden r=
ounded-full"><div class=3D"relative p-1 rounded-sm h-9 w-9 text-white flex =
items-center justify-center" style=3D"background-color: rgb(121, 137, 255);=
 width: 24px; height: 24px;"><svg stroke=3D"currentColor" fill=3D"none" str=
oke-width=3D"2" viewBox=3D"0 0 24 24" stroke-linecap=3D"round" stroke-linej=
oin=3D"round" class=3D"icon-sm" height=3D"1em" width=3D"1em" xmlns=3D"http:=
//www.w3.org/2000/svg"><path d=3D"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2=
"></path><circle cx=3D"12" cy=3D"7" r=3D"4"></circle></svg></div></div></di=
v></div></div><div class=3D"relative flex w-full flex-col"><div class=3D"fo=
nt-semibold select-none">Anonymous</div><div class=3D"flex-col gap-1 md:gap=
-3"><div class=3D"flex flex-grow flex-col max-w-full"><div data-message-aut=
hor-role=3D"user" data-message-id=3D"aaa2bf77-6992-4e98-b772-2ba103f97d72" =
class=3D"min-h-[20px] text-message flex flex-col items-start gap-3 whitespa=
ce-pre-wrap break-words [.text-message+&amp;]:mt-5 overflow-x-auto"><div cl=
ass=3D"">Give me a whole file then</div></div></div></div></div></div></div=
></div><div class=3D"w-full text-token-text-primary" data-testid=3D"convers=
ation-turn-43" style=3D"--avatar-color: #19c37d;"><div class=3D"px-4 py-2 j=
ustify-center text-base md:gap-6 m-auto"><div class=3D"flex flex-1 text-bas=
e mx-auto gap-3 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem] group"><div =
class=3D"flex-shrink-0 flex flex-col relative items-end"><div><div class=3D=
"pt-0.5"><div class=3D"gizmo-shadow-stroke flex h-6 w-6 items-center justif=
y-center overflow-hidden rounded-full"><div class=3D"relative p-1 rounded-s=
m h-9 w-9 text-white flex items-center justify-center" style=3D"background-=
color: rgb(25, 195, 125); width: 24px; height: 24px;"><svg width=3D"41" hei=
ght=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://www.w3.org/2=
000/svg" class=3D"icon-sm" role=3D"img"><text x=3D"-9999" y=3D"-9999">ChatG=
PT</text><path d=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.988=
6 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 33=
.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078=
C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.7249 0.=
491269 18.3058 0.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.42214C10=
.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414=
 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.956464 14.=
1591 0.498905 16.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.5449 3.2=
68 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 =
3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5=
013C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786=
 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24=
.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.55=
06 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.115 30=
.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.078=
9 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C=
20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.8666 36.0=
586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.3813 3=
0.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20.9=
98C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.9842 21=
.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.684=
1C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 =
29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5.7=
3461 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.902C1=
4.583 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C24.7321=
 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24=
.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.49=
54C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156=
 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.=
19491 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8.4831=
2 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C15=
.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.51=
6 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289 1=
9.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2=
312 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787=
C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17=
.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 37.4832=
 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33=
.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.38=
89V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 32=
.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.914=
2 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.=
0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.998=
2C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048 1=
1.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28.2=
383 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939=
 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15=
.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10.8=
309 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107=
 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15=
.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.3587=
6 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.=
98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.30=
65 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L=
20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.9985V17.9=
991Z" fill=3D"currentColor"></path></svg></div></div></div></div></div><div=
 class=3D"relative flex w-full flex-col agent-turn"><div class=3D"font-semi=
bold select-none">ChatGPT</div><div class=3D"flex-col gap-1 md:gap-3"><div =
class=3D"flex flex-grow flex-col max-w-full"><div data-message-author-role=
=3D"assistant" data-message-id=3D"52c668a1-3218-4d9f-9421-30b879f1ef32" cla=
ss=3D"min-h-[20px] text-message flex flex-col items-start gap-3 whitespace-=
pre-wrap break-words [.text-message+&amp;]:mt-5 overflow-x-auto"><div class=
=3D"markdown prose w-full break-words dark:prose-invert dark"><p>Here's the=
 complete file with the modifications:</p><pre><div class=3D"dark bg-gray-9=
50 rounded-md"><div class=3D"flex items-center relative text-token-text-sec=
ondary bg-token-main-surface-secondary px-4 py-2 text-xs font-sans justify-=
between rounded-t-md"><span>java</span><span class=3D"" data-state=3D"close=
d"><button class=3D"flex gap-1 items-center"><svg width=3D"24" height=3D"24=
" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" =
class=3D"icon-sm"><path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M1=
2 4C10.8954 4 10 4.89543 10 6H14C14 4.89543 13.1046 4 12 4ZM8.53513 4C9.226=
75 2.8044 10.5194 2 12 2C13.4806 2 14.7733 2.8044 15.4649 4H17C18.6569 4 20=
 5.34315 20 7V19C20 20.6569 18.6569 22 17 22H7C5.34315 22 4 20.6569 4 19V7C=
4 5.34315 5.34315 4 7 4H8.53513ZM8 6H7C6.44772 6 6 6.44772 6 7V19C6 19.5523=
 6.44772 20 7 20H17C17.5523 20 18 19.5523 18 19V7C18 6.44772 17.5523 6 17 6=
H16C16 7.10457 15.1046 8 14 8H10C8.89543 8 8 7.10457 8 6Z" fill=3D"currentC=
olor"></path></svg>Copy code</button></span></div><div class=3D"p-4 overflo=
w-y-auto"><code class=3D"!whitespace-pre hljs language-java"><span class=3D=
"hljs-keyword">import</span> javax.imageio.ImageIO;
<span class=3D"hljs-keyword">import</span> javax.swing.*;
<span class=3D"hljs-keyword">import</span> java.awt.*;
<span class=3D"hljs-keyword">import</span> java.awt.event.*;
<span class=3D"hljs-keyword">import</span> java.awt.image.BufferedImage;
<span class=3D"hljs-keyword">import</span> java.io.File;
<span class=3D"hljs-keyword">import</span> java.io.IOException;

<span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword">cla=
ss</span> <span class=3D"hljs-title class_">App</span> <span class=3D"hljs-=
keyword">extends</span> <span class=3D"hljs-title class_">JFrame</span> {

    <span class=3D"hljs-keyword">private</span> BufferedImage canvas;
    <span class=3D"hljs-keyword">private</span> Point startPoint;
    <span class=3D"hljs-keyword">private</span> Point endPoint;
    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-type">i=
nt</span> <span class=3D"hljs-variable">gridSize</span> <span class=3D"hljs=
-operator">=3D</span> <span class=3D"hljs-number">20</span>; <span class=3D=
"hljs-comment">// Size of grid cells</span>
    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-type">F=
loorElementType</span> <span class=3D"hljs-variable">currentElementType</sp=
an> <span class=3D"hljs-operator">=3D</span> FloorElementType.WALL; <span c=
lass=3D"hljs-comment">// Default to drawing walls</span>

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword"=
>enum</span> <span class=3D"hljs-title class_">FloorElementType</span> {
        WALL(Color.BLACK),
        WINDOW(Color.BLUE),
        DOOR(Color.RED);

        <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-key=
word">final</span> Color color;

        FloorElementType(Color color) {
            <span class=3D"hljs-built_in">this</span>.color =3D color;
        }

        <span class=3D"hljs-keyword">public</span> Color <span class=3D"hlj=
s-title function_">getColor</span><span class=3D"hljs-params">()</span> {
            <span class=3D"hljs-keyword">return</span> color;
        }
    }

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-title fu=
nction_">App</span><span class=3D"hljs-params">()</span> {
        <span class=3D"hljs-built_in">super</span>(<span class=3D"hljs-stri=
ng">"Floor Plan Designer"</span>);
        initUI();
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">initUI</span><span class=
=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">Dimension</span> <span class=3D"hljs-vari=
able">screenSize</span> <span class=3D"hljs-operator">=3D</span> Toolkit.ge=
tDefaultToolkit().getScreenSize();
        <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">=
width</span> <span class=3D"hljs-operator">=3D</span> (<span class=3D"hljs-=
type">int</span>) screenSize.getWidth();
        <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">=
height</span> <span class=3D"hljs-operator">=3D</span> (<span class=3D"hljs=
-type">int</span>) screenSize.getHeight();
        canvas =3D <span class=3D"hljs-keyword">new</span> <span class=3D"h=
ljs-title class_">BufferedImage</span>(width, height, BufferedImage.TYPE_IN=
T_ARGB);
        clearCanvas();

        <span class=3D"hljs-type">JPanel</span> <span class=3D"hljs-variabl=
e">panel</span> <span class=3D"hljs-operator">=3D</span> <span class=3D"hlj=
s-keyword">new</span> <span class=3D"hljs-title class_">JPanel</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">protected</span> <span class=3D"hl=
js-keyword">void</span> <span class=3D"hljs-title function_">paintComponent=
</span><span class=3D"hljs-params">(Graphics g)</span> {
                <span class=3D"hljs-built_in">super</span>.paintComponent(g=
);
                g.drawImage(canvas, <span class=3D"hljs-number">0</span>, <=
span class=3D"hljs-number">0</span>, <span class=3D"hljs-literal">null</spa=
n>);

                <span class=3D"hljs-comment">// Draw grid lines</span>
                g.setColor(Color.LIGHT_GRAY);
                <span class=3D"hljs-keyword">for</span> (<span class=3D"hlj=
s-type">int</span> <span class=3D"hljs-variable">x</span> <span class=3D"hl=
js-operator">=3D</span> <span class=3D"hljs-number">0</span>; x &lt;=3D get=
Width(); x +=3D gridSize) {
                    g.drawLine(x, <span class=3D"hljs-number">0</span>, x, =
getHeight());
                }
                <span class=3D"hljs-keyword">for</span> (<span class=3D"hlj=
s-type">int</span> <span class=3D"hljs-variable">y</span> <span class=3D"hl=
js-operator">=3D</span> <span class=3D"hljs-number">0</span>; y &lt;=3D get=
Height(); y +=3D gridSize) {
                    g.drawLine(<span class=3D"hljs-number">0</span>, y, get=
Width(), y);
                }
            }
        };

        panel.setPreferredSize(<span class=3D"hljs-keyword">new</span> <spa=
n class=3D"hljs-title class_">Dimension</span>(width, height));
        panel.addMouseListener(<span class=3D"hljs-keyword">new</span> <spa=
n class=3D"hljs-title class_">MouseAdapter</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">mousePressed</spa=
n><span class=3D"hljs-params">(MouseEvent e)</span> {
                startPoint =3D getNearestGridPoint(e.getPoint());
                endPoint =3D startPoint;
            }

            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">mouseReleased</sp=
an><span class=3D"hljs-params">(MouseEvent e)</span> {
                endPoint =3D getNearestGridPoint(e.getPoint());
                <span class=3D"hljs-keyword">if</span> (startPoint.x =3D=3D=
 endPoint.x || startPoint.y =3D=3D endPoint.y) {
                    drawElement(startPoint, endPoint);
                }
            }
        });

        panel.addMouseMotionListener(<span class=3D"hljs-keyword">new</span=
> <span class=3D"hljs-title class_">MouseMotionAdapter</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">mouseDragged</spa=
n><span class=3D"hljs-params">(MouseEvent e)</span> {
                <span class=3D"hljs-type">Point</span> <span class=3D"hljs-=
variable">currentPoint</span> <span class=3D"hljs-operator">=3D</span> getN=
earestGridPoint(e.getPoint());
                <span class=3D"hljs-keyword">if</span> (currentPoint.x =3D=
=3D startPoint.x || currentPoint.y =3D=3D startPoint.y) {
                    endPoint =3D currentPoint;
                    drawElement(startPoint, endPoint);
                }
            }
        });

        add(panel);
        setupMenuBar();
        setExtendedState(JFrame.MAXIMIZED_BOTH); <span class=3D"hljs-commen=
t">// Maximize the frame</span>
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(<span class=3D"hljs-literal">null</span>);
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">drawElement</span><span =
class=3D"hljs-params">(Point start, Point end)</span> {
        <span class=3D"hljs-keyword">if</span> (isInCanvasBounds(start) &am=
p;&amp; isInCanvasBounds(end)) {
            <span class=3D"hljs-type">Graphics2D</span> <span class=3D"hljs=
-variable">g2d</span> <span class=3D"hljs-operator">=3D</span> canvas.creat=
eGraphics();
            g2d.setColor(currentElementType.getColor());
            g2d.setStroke(<span class=3D"hljs-keyword">new</span> <span cla=
ss=3D"hljs-title class_">BasicStroke</span>(<span class=3D"hljs-number">2</=
span>));
            g2d.drawLine(start.x, start.y, end.x, end.y);
            g2d.dispose();
            repaint();
        }
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-type">b=
oolean</span> <span class=3D"hljs-title function_">isInCanvasBounds</span><=
span class=3D"hljs-params">(Point point)</span> {
        <span class=3D"hljs-keyword">return</span> point.x &gt;=3D <span cl=
ass=3D"hljs-number">0</span> &amp;&amp; point.x &lt; canvas.getWidth() &amp=
;&amp;
                point.y &gt;=3D <span class=3D"hljs-number">0</span> &amp;&=
amp; point.y &lt; canvas.getHeight();
    }

    <span class=3D"hljs-keyword">private</span> Point <span class=3D"hljs-t=
itle function_">getNearestGridPoint</span><span class=3D"hljs-params">(Poin=
t point)</span> {
        <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">=
x</span> <span class=3D"hljs-operator">=3D</span> (point.x / gridSize) * gr=
idSize;
        <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">=
y</span> <span class=3D"hljs-operator">=3D</span> (point.y / gridSize) * gr=
idSize;

        <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-keyw=
ord">new</span> <span class=3D"hljs-title class_">Point</span>(x, y);
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">clearCanvas</span><span =
class=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">Graphics2D</span> <span class=3D"hljs-var=
iable">g2d</span> <span class=3D"hljs-operator">=3D</span> canvas.createGra=
phics();
        g2d.setComposite(AlphaComposite.Clear);
        g2d.fillRect(<span class=3D"hljs-number">0</span>, <span class=3D"h=
ljs-number">0</span>, canvas.getWidth(), canvas.getHeight());
        g2d.setComposite(AlphaComposite.SrcOver);
        g2d.dispose();
        repaint();
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">saveImage</span><span cl=
ass=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">JFileChooser</span> <span class=3D"hljs-v=
ariable">fileChooser</span> <span class=3D"hljs-operator">=3D</span> <span =
class=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JFileCh=
ooser</span>();
        fileChooser.setDialogTitle(<span class=3D"hljs-string">"Save Image"=
</span>);
        <span class=3D"hljs-keyword">if</span> (fileChooser.showSaveDialog(=
<span class=3D"hljs-built_in">this</span>) =3D=3D JFileChooser.APPROVE_OPTI=
ON) {
            <span class=3D"hljs-type">File</span> <span class=3D"hljs-varia=
ble">file</span> <span class=3D"hljs-operator">=3D</span> fileChooser.getSe=
lectedFile();
            <span class=3D"hljs-keyword">try</span> {
                ImageIO.write(canvas, <span class=3D"hljs-string">"PNG"</sp=
an>, file);
            } <span class=3D"hljs-keyword">catch</span> (IOException ex) {
                ex.printStackTrace();
            }
        }
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">setupMenuBar</span><span=
 class=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">JMenuBar</span> <span class=3D"hljs-varia=
ble">menuBar</span> <span class=3D"hljs-operator">=3D</span> <span class=3D=
"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuBar</span>=
();

        <span class=3D"hljs-type">JMenu</span> <span class=3D"hljs-variable=
">fileMenu</span> <span class=3D"hljs-operator">=3D</span> <span class=3D"h=
ljs-keyword">new</span> <span class=3D"hljs-title class_">JMenu</span>(<spa=
n class=3D"hljs-string">"File"</span>);
        <span class=3D"hljs-type">JMenuItem</span> <span class=3D"hljs-vari=
able">saveItem</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuItem</s=
pan>(<span class=3D"hljs-string">"Save"</span>);
        saveItem.addActionListener(e -&gt; saveImage());
        fileMenu.add(saveItem);

        <span class=3D"hljs-type">JMenuItem</span> <span class=3D"hljs-vari=
able">exitItem</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuItem</s=
pan>(<span class=3D"hljs-string">"Exit"</span>);
        exitItem.addActionListener(e -&gt; System.exit(<span class=3D"hljs-=
number">0</span>));
        fileMenu.add(exitItem);

        <span class=3D"hljs-type">JMenu</span> <span class=3D"hljs-variable=
">elementMenu</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenu</span>=
(<span class=3D"hljs-string">"Element"</span>);
        <span class=3D"hljs-type">ButtonGroup</span> <span class=3D"hljs-va=
riable">group</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">ButtonGroup<=
/span>();
        <span class=3D"hljs-keyword">for</span> (FloorElementType type : Fl=
oorElementType.values()) {
            <span class=3D"hljs-type">JRadioButtonMenuItem</span> <span cla=
ss=3D"hljs-variable">item</span> <span class=3D"hljs-operator">=3D</span> <=
span class=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JR=
adioButtonMenuItem</span>(type.name());
            item.addActionListener(e -&gt; currentElementType =3D type);
            group.add(item);
            elementMenu.add(item);
        }

        menuBar.add(fileMenu);
        menuBar.add(elementMenu);
        setJMenuBar(menuBar);
    }

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword"=
>static</span> <span class=3D"hljs-keyword">void</span> <span class=3D"hljs=
-title function_">main</span><span class=3D"hljs-params">(String[] args)</s=
pan> {
        SwingUtilities.invokeLater(() -&gt; <span class=3D"hljs-keyword">ne=
w</span> <span class=3D"hljs-title class_">App</span>().setVisible(<span cl=
ass=3D"hljs-literal">true</span>));
    }
}
</code></div></div></pre><p>This code should properly fill the entire scree=
n with grid lines and allow drawing along the grid.</p></div></div></div></=
div></div></div></div></div><div class=3D"w-full text-token-text-primary" d=
ata-testid=3D"conversation-turn-44" style=3D"--avatar-color: #19c37d;"><div=
 class=3D"px-4 py-2 justify-center text-base md:gap-6 m-auto"><div class=3D=
"flex flex-1 text-base mx-auto gap-3 md:max-w-3xl lg:max-w-[40rem] xl:max-w=
-[48rem] group"><div class=3D"flex-shrink-0 flex flex-col relative items-en=
d"><div><div class=3D"pt-0.5"><div class=3D"gizmo-shadow-stroke flex h-6 w-=
6 items-center justify-center overflow-hidden rounded-full"><div class=3D"r=
elative p-1 rounded-sm h-9 w-9 text-white flex items-center justify-center"=
 style=3D"background-color: rgb(121, 137, 255); width: 24px; height: 24px;"=
><svg stroke=3D"currentColor" fill=3D"none" stroke-width=3D"2" viewBox=3D"0=
 0 24 24" stroke-linecap=3D"round" stroke-linejoin=3D"round" class=3D"icon-=
sm" height=3D"1em" width=3D"1em" xmlns=3D"http://www.w3.org/2000/svg"><path=
 d=3D"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path><circle cx=3D"12" c=
y=3D"7" r=3D"4"></circle></svg></div></div></div></div></div><div class=3D"=
relative flex w-full flex-col"><div class=3D"font-semibold select-none">Ano=
nymous</div><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-=
grow flex-col max-w-full"><div data-message-author-role=3D"user" data-messa=
ge-id=3D"aaa28b6e-141d-40c7-a2fe-58d176500cb0" class=3D"min-h-[20px] text-m=
essage flex flex-col items-start gap-3 whitespace-pre-wrap break-words [.te=
xt-message+&amp;]:mt-5 overflow-x-auto"><div class=3D"">Can you make it pos=
sible to erase whole lines between points</div></div></div></div></div></di=
v></div></div><div class=3D"w-full text-token-text-primary" data-testid=3D"=
conversation-turn-45" style=3D"--avatar-color: #19c37d;"><div class=3D"px-4=
 py-2 justify-center text-base md:gap-6 m-auto"><div class=3D"flex flex-1 t=
ext-base mx-auto gap-3 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem] group=
"><div class=3D"flex-shrink-0 flex flex-col relative items-end"><div><div c=
lass=3D"pt-0.5"><div class=3D"gizmo-shadow-stroke flex h-6 w-6 items-center=
 justify-center overflow-hidden rounded-full"><div class=3D"relative p-1 ro=
unded-sm h-9 w-9 text-white flex items-center justify-center" style=3D"back=
ground-color: rgb(25, 195, 125); width: 24px; height: 24px;"><svg width=3D"=
41" height=3D"41" viewBox=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://www.w=
3.org/2000/svg" class=3D"icon-sm" role=3D"img"><text x=3D"-9999" y=3D"-9999=
">ChatGPT</text><path d=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974=
 37.9886 12.6859C37.8409 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.8=
3404 33.9882 5.3676 32.0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 =
3.85078C24.8796 2.7893 23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.=
7249 0.491269 18.3058 0.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.4=
2214C10.6335 3.67624 9.34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686=
 8.3414 4.8377 9.17505C3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.956=
464 14.1591 0.498905 16.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.5=
449 3.268 24.1293C2.81966 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 2=
9.7256 3.40701 31.0892 4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.763=
21 36.5013C10.7141 37.3704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 =
17.0786 39.0587 18.3747 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.=
4998C24.6307 40.5054 26.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.455=
6 35.5506 32.1119 33.5179C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37=
.115 30.9874 38.0728 29.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979=
 40.0789 22.5748C39.8556 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 3=
7.8849C20.7443 37.8874 19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.86=
66 36.0586 17.936 36.0161L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26=
.3813 30.9378C26.4964 30.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.92=
13 20.998C29.9389 21.0068 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.=
9842 21.0707 29.9867 21.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909=
 35.6841C26.3872 37.0892 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5=
.51397 29.4888 5.19742 27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.0=
818 5.73461 26.1244L13.699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 3=
0.902C14.583 30.902 14.8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C=
24.7321 29.0177 24.7283 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.=
0893 24.6829 29.1012L16.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.944=
7 34.4954C9.02506 33.9811 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C=
5.17156 12.0998 6.55279 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.=
5228 8.19491 10.6071V19.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629=
C8.48312 20.6619 8.64893 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.=
4979C15.1894 28.5089 15.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.110=
7 28.516 15.0924 28.5082L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.=
55289 19.3046C3.03862 17.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.05=
56L22.2312 14.4411L25.5976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 =
12.4787C25.6729 12.4769 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.=
9967 17.849 36.0017 18.8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 =
37.4832 24.2684C37.3617 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.=
3086 33.9415 30.1717 32.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.604=
7 30.3889V21.188C32.6066 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.=
3348 32.154 20.1698 31.955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431=
 14.9142 35.069 14.8717L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.4=
504 10.0943C26.2206 10.0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858=
V11.9982C16.0715 11.9783 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16=
.1048 11.9068 16.1207 11.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.193=
76 28.2383 6.25482C29.6608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 =
8.40939 34.2842 9.53945 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.=
3055 15.0128ZM14.2424 21.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.97=
63 10.8309 19.9602C10.8195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C=
10.8107 9.18295 11.2173 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.4=
2659 15.1275 3.82264C16.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775=
 3.35876 22.0089 3.93941 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.=
8668 4.98473L14.9024 9.58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.062=
6C14.3065 10.2616 14.2466 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 1=
7.9991L20.4018 15.4978L24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.99=
85V17.9991Z" fill=3D"currentColor"></path></svg></div></div></div></div></d=
iv><div class=3D"relative flex w-full flex-col agent-turn"><div class=3D"fo=
nt-semibold select-none">ChatGPT</div><div class=3D"flex-col gap-1 md:gap-3=
"><div class=3D"flex flex-grow flex-col max-w-full"><div data-message-autho=
r-role=3D"assistant" data-message-id=3D"b7d7fb4d-9635-43cb-8a70-f1746746be7=
3" class=3D"min-h-[20px] text-message flex flex-col items-start gap-3 white=
space-pre-wrap break-words [.text-message+&amp;]:mt-5 overflow-x-auto"><div=
 class=3D"markdown prose w-full break-words dark:prose-invert dark"><p>Sure=
! To enable erasing whole lines between points, we can introduce a new meth=
od to clear the area between two points in the canvas. Here's how you can i=
mplement it:</p><pre><div class=3D"dark bg-gray-950 rounded-md"><div class=
=3D"flex items-center relative text-token-text-secondary bg-token-main-surf=
ace-secondary px-4 py-2 text-xs font-sans justify-between rounded-t-md"><sp=
an>java</span><span class=3D"" data-state=3D"closed"><button class=3D"flex =
gap-1 items-center"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" f=
ill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-sm"><path f=
ill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M12 4C10.8954 4 10 4.89543 =
10 6H14C14 4.89543 13.1046 4 12 4ZM8.53513 4C9.22675 2.8044 10.5194 2 12 2C=
13.4806 2 14.7733 2.8044 15.4649 4H17C18.6569 4 20 5.34315 20 7V19C20 20.65=
69 18.6569 22 17 22H7C5.34315 22 4 20.6569 4 19V7C4 5.34315 5.34315 4 7 4H8=
.53513ZM8 6H7C6.44772 6 6 6.44772 6 7V19C6 19.5523 6.44772 20 7 20H17C17.55=
23 20 18 19.5523 18 19V7C18 6.44772 17.5523 6 17 6H16C16 7.10457 15.1046 8 =
14 8H10C8.89543 8 8 7.10457 8 6Z" fill=3D"currentColor"></path></svg>Copy c=
ode</button></span></div><div class=3D"p-4 overflow-y-auto"><code class=3D"=
!whitespace-pre hljs language-java"><span class=3D"hljs-keyword">private</s=
pan> <span class=3D"hljs-keyword">void</span> <span class=3D"hljs-title fun=
ction_">eraseElement</span><span class=3D"hljs-params">(Point start, Point =
end)</span> {
    <span class=3D"hljs-keyword">if</span> (isInCanvasBounds(start) &amp;&a=
mp; isInCanvasBounds(end)) {
        <span class=3D"hljs-type">Graphics2D</span> <span class=3D"hljs-var=
iable">g2d</span> <span class=3D"hljs-operator">=3D</span> canvas.createGra=
phics();
        g2d.setComposite(AlphaComposite.Clear);
        g2d.setStroke(<span class=3D"hljs-keyword">new</span> <span class=
=3D"hljs-title class_">BasicStroke</span>(<span class=3D"hljs-number">2</sp=
an>));
        g2d.drawLine(start.x, start.y, end.x, end.y);
        g2d.setComposite(AlphaComposite.SrcOver);
        g2d.dispose();
        repaint();
    }
}
</code></div></div></pre><p>This method will clear the area between two poi=
nts by drawing a transparent line over it.</p><p>Then, we need to modify th=
e mouse listener to enable erasing. You can add a key listener to switch be=
tween drawing and erasing modes. Here's an example of how you can do it:</p=
><pre><div class=3D"dark bg-gray-950 rounded-md"><div class=3D"flex items-c=
enter relative text-token-text-secondary bg-token-main-surface-secondary px=
-4 py-2 text-xs font-sans justify-between rounded-t-md"><span>java</span><s=
pan class=3D"" data-state=3D"closed"><button class=3D"flex gap-1 items-cent=
er"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xml=
ns=3D"http://www.w3.org/2000/svg" class=3D"icon-sm"><path fill-rule=3D"even=
odd" clip-rule=3D"evenodd" d=3D"M12 4C10.8954 4 10 4.89543 10 6H14C14 4.895=
43 13.1046 4 12 4ZM8.53513 4C9.22675 2.8044 10.5194 2 12 2C13.4806 2 14.773=
3 2.8044 15.4649 4H17C18.6569 4 20 5.34315 20 7V19C20 20.6569 18.6569 22 17=
 22H7C5.34315 22 4 20.6569 4 19V7C4 5.34315 5.34315 4 7 4H8.53513ZM8 6H7C6.=
44772 6 6 6.44772 6 7V19C6 19.5523 6.44772 20 7 20H17C17.5523 20 18 19.5523=
 18 19V7C18 6.44772 17.5523 6 17 6H16C16 7.10457 15.1046 8 14 8H10C8.89543 =
8 8 7.10457 8 6Z" fill=3D"currentColor"></path></svg>Copy code</button></sp=
an></div><div class=3D"p-4 overflow-y-auto"><code class=3D"!whitespace-pre =
hljs language-java"><span class=3D"hljs-keyword">private</span> <span class=
=3D"hljs-type">boolean</span> <span class=3D"hljs-variable">eraseMode</span=
> <span class=3D"hljs-operator">=3D</span> <span class=3D"hljs-literal">fal=
se</span>; <span class=3D"hljs-comment">// Initially, drawing mode is enabl=
ed</span>

panel.addKeyListener(<span class=3D"hljs-keyword">new</span> <span class=3D=
"hljs-title class_">KeyAdapter</span>() {
    <span class=3D"hljs-meta">@Override</span>
    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword"=
>void</span> <span class=3D"hljs-title function_">keyPressed</span><span cl=
ass=3D"hljs-params">(KeyEvent e)</span> {
        <span class=3D"hljs-keyword">if</span> (e.getKeyCode() =3D=3D KeyEv=
ent.VK_E) {
            eraseMode =3D <span class=3D"hljs-literal">true</span>; <span c=
lass=3D"hljs-comment">// Switch to erase mode</span>
        } <span class=3D"hljs-keyword">else</span> <span class=3D"hljs-keyw=
ord">if</span> (e.getKeyCode() =3D=3D KeyEvent.VK_D) {
            eraseMode =3D <span class=3D"hljs-literal">false</span>; <span =
class=3D"hljs-comment">// Switch back to drawing mode</span>
        }
    }
});

panel.addMouseListener(<span class=3D"hljs-keyword">new</span> <span class=
=3D"hljs-title class_">MouseAdapter</span>() {
    <span class=3D"hljs-meta">@Override</span>
    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword"=
>void</span> <span class=3D"hljs-title function_">mousePressed</span><span =
class=3D"hljs-params">(MouseEvent e)</span> {
        <span class=3D"hljs-keyword">if</span> (eraseMode) {
            startPoint =3D getNearestGridPoint(e.getPoint());
            endPoint =3D startPoint;
        } <span class=3D"hljs-keyword">else</span> {
            startPoint =3D getNearestGridPoint(e.getPoint());
        }
    }

    <span class=3D"hljs-meta">@Override</span>
    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword"=
>void</span> <span class=3D"hljs-title function_">mouseReleased</span><span=
 class=3D"hljs-params">(MouseEvent e)</span> {
        endPoint =3D getNearestGridPoint(e.getPoint());
        <span class=3D"hljs-keyword">if</span> (eraseMode) {
            eraseElement(startPoint, endPoint);
        } <span class=3D"hljs-keyword">else</span> {
            <span class=3D"hljs-keyword">if</span> (startPoint.x =3D=3D end=
Point.x || startPoint.y =3D=3D endPoint.y) {
                drawElement(startPoint, endPoint);
            }
        }
    }
});

panel.addMouseMotionListener(<span class=3D"hljs-keyword">new</span> <span =
class=3D"hljs-title class_">MouseMotionAdapter</span>() {
    <span class=3D"hljs-meta">@Override</span>
    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword"=
>void</span> <span class=3D"hljs-title function_">mouseDragged</span><span =
class=3D"hljs-params">(MouseEvent e)</span> {
        <span class=3D"hljs-type">Point</span> <span class=3D"hljs-variable=
">currentPoint</span> <span class=3D"hljs-operator">=3D</span> getNearestGr=
idPoint(e.getPoint());
        <span class=3D"hljs-keyword">if</span> (eraseMode) {
            endPoint =3D currentPoint;
            eraseElement(startPoint, endPoint);
            startPoint =3D currentPoint; <span class=3D"hljs-comment">// Up=
date start point for continuous erasing</span>
        } <span class=3D"hljs-keyword">else</span> {
            endPoint =3D currentPoint;
            drawElement(startPoint, endPoint);
            startPoint =3D currentPoint; <span class=3D"hljs-comment">// Up=
date start point for continuous drawing</span>
        }
    }
});
</code></div></div></pre><p>In this example, pressing the "E" key switches =
to erase mode, and pressing the "D" key switches back to drawing mode. Whil=
e in erase mode, dragging the mouse will erase lines between points instead=
 of drawing new ones.</p><p>Make sure to add the <code>KeyListener</code> t=
o the <code>JPanel</code> component (<code>panel</code>) and handle the era=
sing logic accordingly.</p></div></div></div></div></div></div></div></div>=
<div class=3D"w-full text-token-text-primary" data-testid=3D"conversation-t=
urn-46" style=3D"--avatar-color: #19c37d;"><div class=3D"px-4 py-2 justify-=
center text-base md:gap-6 m-auto"><div class=3D"flex flex-1 text-base mx-au=
to gap-3 md:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem] group"><div class=
=3D"flex-shrink-0 flex flex-col relative items-end"><div><div class=3D"pt-0=
.5"><div class=3D"gizmo-shadow-stroke flex h-6 w-6 items-center justify-cen=
ter overflow-hidden rounded-full"><div class=3D"relative p-1 rounded-sm h-9=
 w-9 text-white flex items-center justify-center" style=3D"background-color=
: rgb(121, 137, 255); width: 24px; height: 24px;"><svg stroke=3D"currentCol=
or" fill=3D"none" stroke-width=3D"2" viewBox=3D"0 0 24 24" stroke-linecap=
=3D"round" stroke-linejoin=3D"round" class=3D"icon-sm" height=3D"1em" width=
=3D"1em" xmlns=3D"http://www.w3.org/2000/svg"><path d=3D"M20 21v-2a4 4 0 0 =
0-4-4H8a4 4 0 0 0-4 4v2"></path><circle cx=3D"12" cy=3D"7" r=3D"4"></circle=
></svg></div></div></div></div></div><div class=3D"relative flex w-full fle=
x-col"><div class=3D"font-semibold select-none">Anonymous</div><div class=
=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-fu=
ll"><div data-message-author-role=3D"user" data-message-id=3D"aaa2cf6c-f286=
-4a2d-b902-7338014703db" class=3D"min-h-[20px] text-message flex flex-col i=
tems-start gap-3 whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5=
 overflow-x-auto"><div class=3D"">give me the whole file
</div></div></div></div></div></div></div></div><div class=3D"w-full text-t=
oken-text-primary" data-testid=3D"conversation-turn-47" style=3D"--avatar-c=
olor: #19c37d;"><div class=3D"px-4 py-2 justify-center text-base md:gap-6 m=
-auto"><div class=3D"flex flex-1 text-base mx-auto gap-3 md:max-w-3xl lg:ma=
x-w-[40rem] xl:max-w-[48rem] group"><div class=3D"flex-shrink-0 flex flex-c=
ol relative items-end"><div><div class=3D"pt-0.5"><div class=3D"gizmo-shado=
w-stroke flex h-6 w-6 items-center justify-center overflow-hidden rounded-f=
ull"><div class=3D"relative p-1 rounded-sm h-9 w-9 text-white flex items-ce=
nter justify-center" style=3D"background-color: rgb(25, 195, 125); width: 2=
4px; height: 24px;"><svg width=3D"41" height=3D"41" viewBox=3D"0 0 41 41" f=
ill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D"icon-sm" role=3D=
"img"><text x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=3D"M37.5324 16.87=
07C37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.8409 11.2744 37.3934 =
9.91076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.0373 4.4985C30.086=
4 3.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 23.7219 1.94125 22=
.4257 1.36341C21.1295 0.785575 19.7249 0.491269 18.3058 0.500197C16.1708 0.=
495044 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.34853 5.44666 8.69=
17 7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C3.68854 10.0087 2.=
73073 11.0782 2.02839 12.312C0.956464 14.1591 0.498905 16.2988 0.721698 18.=
4228C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.81966 25.4759 2.66413=
 26.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 4.12437 32.3138C5.=
18791 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3704 12.8907 37.597=
3 14.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747 39.6366C19.6709 4=
0.2144 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26.7133 39.8321 28.4=
418 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.5179C33.5027 33.2332=
 34.8167 32.6547 35.9659 31.821C37.115 30.9874 38.0728 29.9178 38.7752 28.6=
84C39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.8556 20.4517 38.9639 =
18.4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 19.0459 37.2733 17=
.6994 36.1501C17.7601 36.117 17.8666 36.0586 17.936 36.0161L25.9004 31.4156=
C26.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.4964 30.7386 26.5563 30.=
5124 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.0068 29.9541 21.0198=
 29.9656 21.0359C29.977 21.052 29.9842 21.0707 29.9867 21.0902V30.3889C29.9=
842 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.0892 24.4838 37.8806 =
22.4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 27.7107 5.49804 25=
.9832C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L13.699 30.7248C13.897=
5 30.8408 14.1233 30.902 14.3532 30.902C14.583 30.902 14.8088 30.8408 15.00=
73 30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.7283 29.0376 24.7199 2=
9.0556C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16.6317 33.7497C14.9=
096 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.9811 7.38785 32.7263=
 6.39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279 10.9364 8.19885 1=
0.3327C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V19.808C8.19351 20.03=
78 8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.64893 20.8267 8.84863 =
20.9404L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 15.1703 28.5155 15.1=
505 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.5082L7.04046 23.8557C=
5.32135 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862 17.3858 3.30624 15.=
3413 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5976 12.4981C25.614=
2 12.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769 25.6928 12.4801 2=
5.7111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.8982 36.6606 20.16=
13C37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.3617 25.6878 36.8382 2=
7.0432 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32.6047 30.6641C32.6=
047 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.6066 20.9586 32.5474 =
20.7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698 31.955 20.0556ZM35.30=
55 15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.8717L27.1045 10.2712C2=
6.906 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.0943 25.9948 10.15=
54 25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.9783 16.0753 11.9585 =
16.0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207 11.8949L24.1719 7.2=
5025C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6608 6.31589 31.036=
4 6.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945 34.8334 10.8531C3=
5.3826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 21.9419L10.8752 19.=
9981C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8195 19.9441 10.812=
2 19.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173 7.78848 11.9819 6=
.58696C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16.4173 3.21869 17.8=
524 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.93941 23.1034 4.85067C=
23.0427 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.58517C14.7025 9.69=
878 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.2466 10.4877 14.2479=
 10.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L24.7325 17.9975V22=
.9985L20.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"currentColor"></path=
></svg></div></div></div></div></div><div class=3D"relative flex w-full fle=
x-col agent-turn"><div class=3D"font-semibold select-none">ChatGPT</div><di=
v class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex flex-grow flex-col m=
ax-w-full"><div data-message-author-role=3D"assistant" data-message-id=3D"e=
1e24c2d-e9c1-4f00-8fde-befbd85e0c6b" class=3D"min-h-[20px] text-message fle=
x flex-col items-start gap-3 whitespace-pre-wrap break-words [.text-message=
+&amp;]:mt-5 overflow-x-auto"><div class=3D"markdown prose w-full break-wor=
ds dark:prose-invert dark"><p>Here's the complete file with the modificatio=
ns to enable erasing whole lines between points:</p><pre><div class=3D"dark=
 bg-gray-950 rounded-md"><div class=3D"flex items-center relative text-toke=
n-text-secondary bg-token-main-surface-secondary px-4 py-2 text-xs font-san=
s justify-between rounded-t-md"><span>java</span><span class=3D"" data-stat=
e=3D"closed"><button class=3D"flex gap-1 items-center"><svg width=3D"24" he=
ight=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.org/=
2000/svg" class=3D"icon-sm"><path fill-rule=3D"evenodd" clip-rule=3D"evenod=
d" d=3D"M12 4C10.8954 4 10 4.89543 10 6H14C14 4.89543 13.1046 4 12 4ZM8.535=
13 4C9.22675 2.8044 10.5194 2 12 2C13.4806 2 14.7733 2.8044 15.4649 4H17C18=
.6569 4 20 5.34315 20 7V19C20 20.6569 18.6569 22 17 22H7C5.34315 22 4 20.65=
69 4 19V7C4 5.34315 5.34315 4 7 4H8.53513ZM8 6H7C6.44772 6 6 6.44772 6 7V19=
C6 19.5523 6.44772 20 7 20H17C17.5523 20 18 19.5523 18 19V7C18 6.44772 17.5=
523 6 17 6H16C16 7.10457 15.1046 8 14 8H10C8.89543 8 8 7.10457 8 6Z" fill=
=3D"currentColor"></path></svg>Copy code</button></span></div><div class=3D=
"p-4 overflow-y-auto"><code class=3D"!whitespace-pre hljs language-java"><s=
pan class=3D"hljs-keyword">import</span> javax.imageio.ImageIO;
<span class=3D"hljs-keyword">import</span> javax.swing.*;
<span class=3D"hljs-keyword">import</span> java.awt.*;
<span class=3D"hljs-keyword">import</span> java.awt.event.*;
<span class=3D"hljs-keyword">import</span> java.awt.image.BufferedImage;
<span class=3D"hljs-keyword">import</span> java.io.File;
<span class=3D"hljs-keyword">import</span> java.io.IOException;

<span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword">cla=
ss</span> <span class=3D"hljs-title class_">App</span> <span class=3D"hljs-=
keyword">extends</span> <span class=3D"hljs-title class_">JFrame</span> {

    <span class=3D"hljs-keyword">private</span> BufferedImage canvas;
    <span class=3D"hljs-keyword">private</span> Point startPoint;
    <span class=3D"hljs-keyword">private</span> Point endPoint;
    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-type">i=
nt</span> <span class=3D"hljs-variable">gridSize</span> <span class=3D"hljs=
-operator">=3D</span> <span class=3D"hljs-number">20</span>; <span class=3D=
"hljs-comment">// Size of grid cells</span>
    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-type">F=
loorElementType</span> <span class=3D"hljs-variable">currentElementType</sp=
an> <span class=3D"hljs-operator">=3D</span> FloorElementType.WALL; <span c=
lass=3D"hljs-comment">// Default to drawing walls</span>
    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-type">b=
oolean</span> <span class=3D"hljs-variable">eraseMode</span> <span class=3D=
"hljs-operator">=3D</span> <span class=3D"hljs-literal">false</span>; <span=
 class=3D"hljs-comment">// Flag for erasing mode</span>

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword"=
>enum</span> <span class=3D"hljs-title class_">FloorElementType</span> {
        WALL(Color.BLACK),
        WINDOW(Color.BLUE),
        DOOR(Color.RED);

        <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-key=
word">final</span> Color color;

        FloorElementType(Color color) {
            <span class=3D"hljs-built_in">this</span>.color =3D color;
        }

        <span class=3D"hljs-keyword">public</span> Color <span class=3D"hlj=
s-title function_">getColor</span><span class=3D"hljs-params">()</span> {
            <span class=3D"hljs-keyword">return</span> color;
        }
    }

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-title fu=
nction_">App</span><span class=3D"hljs-params">()</span> {
        <span class=3D"hljs-built_in">super</span>(<span class=3D"hljs-stri=
ng">"Floor Plan Designer"</span>);
        initUI();
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">initUI</span><span class=
=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">Dimension</span> <span class=3D"hljs-vari=
able">screenSize</span> <span class=3D"hljs-operator">=3D</span> Toolkit.ge=
tDefaultToolkit().getScreenSize();
        <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">=
width</span> <span class=3D"hljs-operator">=3D</span> (<span class=3D"hljs-=
type">int</span>) screenSize.getWidth();
        <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">=
height</span> <span class=3D"hljs-operator">=3D</span> (<span class=3D"hljs=
-type">int</span>) screenSize.getHeight();
        canvas =3D <span class=3D"hljs-keyword">new</span> <span class=3D"h=
ljs-title class_">BufferedImage</span>(width, height, BufferedImage.TYPE_IN=
T_ARGB);
        clearCanvas();

        <span class=3D"hljs-type">JPanel</span> <span class=3D"hljs-variabl=
e">panel</span> <span class=3D"hljs-operator">=3D</span> <span class=3D"hlj=
s-keyword">new</span> <span class=3D"hljs-title class_">JPanel</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">protected</span> <span class=3D"hl=
js-keyword">void</span> <span class=3D"hljs-title function_">paintComponent=
</span><span class=3D"hljs-params">(Graphics g)</span> {
                <span class=3D"hljs-built_in">super</span>.paintComponent(g=
);
                g.drawImage(canvas, <span class=3D"hljs-number">0</span>, <=
span class=3D"hljs-number">0</span>, <span class=3D"hljs-literal">null</spa=
n>);

                <span class=3D"hljs-comment">// Draw grid lines</span>
                g.setColor(Color.LIGHT_GRAY);
                <span class=3D"hljs-keyword">for</span> (<span class=3D"hlj=
s-type">int</span> <span class=3D"hljs-variable">x</span> <span class=3D"hl=
js-operator">=3D</span> <span class=3D"hljs-number">0</span>; x &lt;=3D get=
Width(); x +=3D gridSize) {
                    g.drawLine(x, <span class=3D"hljs-number">0</span>, x, =
getHeight());
                }
                <span class=3D"hljs-keyword">for</span> (<span class=3D"hlj=
s-type">int</span> <span class=3D"hljs-variable">y</span> <span class=3D"hl=
js-operator">=3D</span> <span class=3D"hljs-number">0</span>; y &lt;=3D get=
Height(); y +=3D gridSize) {
                    g.drawLine(<span class=3D"hljs-number">0</span>, y, get=
Width(), y);
                }
            }
        };

        panel.setPreferredSize(<span class=3D"hljs-keyword">new</span> <spa=
n class=3D"hljs-title class_">Dimension</span>(width, height));
        panel.addKeyListener(<span class=3D"hljs-keyword">new</span> <span =
class=3D"hljs-title class_">KeyAdapter</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">keyPressed</span>=
<span class=3D"hljs-params">(KeyEvent e)</span> {
                <span class=3D"hljs-keyword">if</span> (e.getKeyCode() =3D=
=3D KeyEvent.VK_E) {
                    eraseMode =3D <span class=3D"hljs-literal">true</span>;=
 <span class=3D"hljs-comment">// Switch to erase mode</span>
                } <span class=3D"hljs-keyword">else</span> <span class=3D"h=
ljs-keyword">if</span> (e.getKeyCode() =3D=3D KeyEvent.VK_D) {
                    eraseMode =3D <span class=3D"hljs-literal">false</span>=
; <span class=3D"hljs-comment">// Switch back to drawing mode</span>
                }
            }
        });

        panel.addMouseListener(<span class=3D"hljs-keyword">new</span> <spa=
n class=3D"hljs-title class_">MouseAdapter</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">mousePressed</spa=
n><span class=3D"hljs-params">(MouseEvent e)</span> {
                <span class=3D"hljs-keyword">if</span> (eraseMode) {
                    startPoint =3D getNearestGridPoint(e.getPoint());
                    endPoint =3D startPoint;
                } <span class=3D"hljs-keyword">else</span> {
                    startPoint =3D getNearestGridPoint(e.getPoint());
                }
            }

            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">mouseReleased</sp=
an><span class=3D"hljs-params">(MouseEvent e)</span> {
                endPoint =3D getNearestGridPoint(e.getPoint());
                <span class=3D"hljs-keyword">if</span> (eraseMode) {
                    eraseElement(startPoint, endPoint);
                } <span class=3D"hljs-keyword">else</span> {
                    <span class=3D"hljs-keyword">if</span> (startPoint.x =
=3D=3D endPoint.x || startPoint.y =3D=3D endPoint.y) {
                        drawElement(startPoint, endPoint);
                    }
                }
            }
        });

        panel.addMouseMotionListener(<span class=3D"hljs-keyword">new</span=
> <span class=3D"hljs-title class_">MouseMotionAdapter</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">mouseDragged</spa=
n><span class=3D"hljs-params">(MouseEvent e)</span> {
                <span class=3D"hljs-type">Point</span> <span class=3D"hljs-=
variable">currentPoint</span> <span class=3D"hljs-operator">=3D</span> getN=
earestGridPoint(e.getPoint());
                <span class=3D"hljs-keyword">if</span> (eraseMode) {
                    endPoint =3D currentPoint;
                    eraseElement(startPoint, endPoint);
                    startPoint =3D currentPoint; <span class=3D"hljs-commen=
t">// Update start point for continuous erasing</span>
                } <span class=3D"hljs-keyword">else</span> {
                    endPoint =3D currentPoint;
                    drawElement(startPoint, endPoint);
                    startPoint =3D currentPoint; <span class=3D"hljs-commen=
t">// Update start point for continuous drawing</span>
                }
            }
        });

        add(panel);
        setupMenuBar();
        setExtendedState(JFrame.MAXIMIZED_BOTH); <span class=3D"hljs-commen=
t">// Maximize the frame</span>
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(<span class=3D"hljs-literal">null</span>);
        panel.setFocusable(<span class=3D"hljs-literal">true</span>); <span=
 class=3D"hljs-comment">// Set panel focusable to enable key events</span>
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">drawElement</span><span =
class=3D"hljs-params">(Point start, Point end)</span> {
        <span class=3D"hljs-keyword">if</span> (isInCanvasBounds(start) &am=
p;&amp; isInCanvasBounds(end)) {
            <span class=3D"hljs-type">Graphics2D</span> <span class=3D"hljs=
-variable">g2d</span> <span class=3D"hljs-operator">=3D</span> canvas.creat=
eGraphics();
            g2d.setColor(currentElementType.getColor());
            g2d.setStroke(<span class=3D"hljs-keyword">new</span> <span cla=
ss=3D"hljs-title class_">BasicStroke</span>(<span class=3D"hljs-number">2</=
span>));
            g2d.drawLine(start.x, start.y, end.x, end.y);
            g2d.dispose();
            repaint();
        }
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">eraseElement</span><span=
 class=3D"hljs-params">(Point start, Point end)</span> {
        <span class=3D"hljs-keyword">if</span> (isInCanvasBounds(start) &am=
p;&amp; isInCanvasBounds(end)) {
            <span class=3D"hljs-type">Graphics2D</span> <span class=3D"hljs=
-variable">g2d</span> <span class=3D"hljs-operator">=3D</span> canvas.creat=
eGraphics();
            g2d.setComposite(AlphaComposite.Clear);
            g2d.setStroke(<span class=3D"hljs-keyword">new</span> <span cla=
ss=3D"hljs-title class_">BasicStroke</span>(<span class=3D"hljs-number">2</=
span>));
            g2d.drawLine(start.x, start.y, end.x, end.y);
            g2d.setComposite(AlphaComposite.SrcOver);
            g2d.dispose();
            repaint();
        }
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-type">b=
oolean</span> <span class=3D"hljs-title function_">isInCanvasBounds</span><=
span class=3D"hljs-params">(Point point)</span> {
        <span class=3D"hljs-keyword">return</span> point.x &gt;=3D <span cl=
ass=3D"hljs-number">0</span> &amp;&amp; point.x &lt; canvas.getWidth() &amp=
;&amp;
                point.y &gt;=3D <span class=3D"hljs-number">0</span> &amp;&=
amp; point.y &lt; canvas.getHeight();
    }

    <span class=3D"hljs-keyword">private</span> Point <span class=3D"hljs-t=
itle function_">getNearestGridPoint</span><span class=3D"hljs-params">(Poin=
t point)</span> {
        <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">=
x</span> <span class=3D"hljs-operator">=3D</span> (point.x / gridSize) * gr=
idSize;
        <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">=
y</span> <span class=3D"hljs-operator">=3D</span> (point.y / gridSize) * gr=
idSize;

        <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-keyw=
ord">new</span> <span class=3D"hljs-title class_">Point</span>(x, y);
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">clearCanvas</span><span =
class=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">Graphics2D</span> <span class=3D"hljs-var=
iable">g2d</span> <span class=3D"hljs-operator">=3D</span> canvas.createGra=
phics();
        g2d.setComposite(AlphaComposite.Clear);
        g2d.fillRect(<span class=3D"hljs-number">0</span>, <span class=3D"h=
ljs-number">0</span>, canvas.getWidth(), canvas.getHeight());
        g2d.setComposite(AlphaComposite.SrcOver);
        g2d.dispose();
        repaint();
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">saveImage</span><span cl=
ass=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">JFileChooser</span> <span class=3D"hljs-v=
ariable">fileChooser</span> <span class=3D"hljs-operator">=3D</span> <span =
class=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JFileCh=
ooser</span>();
        fileChooser.setDialogTitle(<span class=3D"hljs-string">"Save Image"=
</span>);
        <span class=3D"hljs-keyword">if</span> (fileChooser.showSaveDialog(=
<span class=3D"hljs-built_in">this</span>) =3D=3D JFileChooser.APPROVE_OPTI=
ON) {
            <span class=3D"hljs-type">File</span> <span class=3D"hljs-varia=
ble">file</span> <span class=3D"hljs-operator">=3D</span> fileChooser.getSe=
lectedFile();
            <span class=3D"hljs-keyword">try</span> {
                ImageIO.write(canvas, <span class=3D"hljs-string">"PNG"</sp=
an>, file);
            } <span class=3D"hljs-keyword">catch</span> (IOException ex) {
                ex.printStackTrace();
            }
        }
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">setupMenuBar</span><span=
 class=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">JMenuBar</span> <span class=3D"hljs-varia=
ble">menuBar</span> <span class=3D"hljs-operator">=3D</span> <span class=3D=
"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuBar</span>=
();

        <span class=3D"hljs-type">JMenu</span> <span class=3D"hljs-variable=
">fileMenu</span> <span class=3D"hljs-operator">=3D</span> <span class=3D"h=
ljs-keyword">new</span> <span class=3D"hljs-title class_">JMenu</span>(<spa=
n class=3D"hljs-string">"File"</span>);
        <span class=3D"hljs-type">JMenuItem</span> <span class=3D"hljs-vari=
able">saveItem</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuItem</s=
pan>(<span class=3D"hljs-string">"Save"</span>);
        saveItem.addActionListener(e -&gt; saveImage());
        fileMenu.add(saveItem);

        <span class=3D"hljs-type">JMenuItem</span> <span class=3D"hljs-vari=
able">exitItem</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuItem</s=
pan>(<span class=3D"hljs-string">"Exit"</span>);
        exitItem.addActionListener(e -&gt; System.exit(<span class=3D"hljs-=
number">0</span>));
        fileMenu.add(exitItem);

        <span class=3D"hljs-type">JMenu</span> <span class=3D"hljs-variable=
">elementMenu</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenu</span>=
(<span class=3D"hljs-string">"Element"</span>);
        <span class=3D"hljs-type">ButtonGroup</span> <span class=3D"hljs-va=
riable">group</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">ButtonGroup<=
/span>();
        <span class=3D"hljs-keyword">for</span> (FloorElementType type : Fl=
oorElementType.values()) {
            <span class=3D"hljs-type">JRadioButtonMenuItem</span> <span cla=
ss=3D"hljs-variable">item</span> <span class=3D"hljs-operator">=3D</span> <=
span class=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JR=
adioButtonMenuItem</span>(type.name());
            item.addActionListener(e -&gt; currentElementType =3D type);
            group.add(item);
            elementMenu.add(item);
        }

        menuBar.add(fileMenu);
        menuBar.add(elementMenu);
        setJMenuBar(menuBar);
    }

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword"=
>static</span> <span class=3D"hljs-keyword">void</span> <span class=3D"hljs=
-title function_">main</span><span class=3D"hljs-params">(String[] args)</s=
pan> {
        SwingUtilities.invokeLater(() -&gt; <span class=3D"hljs-keyword">ne=
w</span> <span class=3D"hljs-title class_">App</span>().setVisible(<span cl=
ass=3D"hljs-literal">true</span>));
    }
}
</code></div></div></pre><p>In this modified version, pressing the "E" key =
enables erase mode, allowing the user to erase lines between points instead=
 of drawing</p></div></div></div></div></div></div></div></div><div class=
=3D"w-full text-token-text-primary" data-testid=3D"conversation-turn-48" st=
yle=3D"--avatar-color: #19c37d;"><div class=3D"px-4 py-2 justify-center tex=
t-base md:gap-6 m-auto"><div class=3D"flex flex-1 text-base mx-auto gap-3 m=
d:max-w-3xl lg:max-w-[40rem] xl:max-w-[48rem] group"><div class=3D"flex-shr=
ink-0 flex flex-col relative items-end"><div><div class=3D"pt-0.5"><div cla=
ss=3D"gizmo-shadow-stroke flex h-6 w-6 items-center justify-center overflow=
-hidden rounded-full"><div class=3D"relative p-1 rounded-sm h-9 w-9 text-wh=
ite flex items-center justify-center" style=3D"background-color: rgb(121, 1=
37, 255); width: 24px; height: 24px;"><svg stroke=3D"currentColor" fill=3D"=
none" stroke-width=3D"2" viewBox=3D"0 0 24 24" stroke-linecap=3D"round" str=
oke-linejoin=3D"round" class=3D"icon-sm" height=3D"1em" width=3D"1em" xmlns=
=3D"http://www.w3.org/2000/svg"><path d=3D"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 =
0 0-4 4v2"></path><circle cx=3D"12" cy=3D"7" r=3D"4"></circle></svg></div><=
/div></div></div></div><div class=3D"relative flex w-full flex-col"><div cl=
ass=3D"font-semibold select-none">Anonymous</div><div class=3D"flex-col gap=
-1 md:gap-3"><div class=3D"flex flex-grow flex-col max-w-full"><div data-me=
ssage-author-role=3D"user" data-message-id=3D"aaa2f06b-cf2a-41a2-b962-99577=
b939751" class=3D"min-h-[20px] text-message flex flex-col items-start gap-3=
 whitespace-pre-wrap break-words [.text-message+&amp;]:mt-5 overflow-x-auto=
"><div class=3D"">This code is wrong because you now allow users to make di=
agonal lines. Please use this code as a basis: import javax.imageio.ImageIO=
;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

public class App extends JFrame {

    private BufferedImage canvas;
    private Point startPoint;
    private Point endPoint;
    private int gridSize =3D 20; // Size of grid cells
    private FloorElementType currentElementType =3D FloorElementType.WALL; =
// Default to drawing walls

    public enum FloorElementType {
        WALL(Color.BLACK),
        WINDOW(Color.BLUE),
        DOOR(Color.RED);

        private final Color color;

        FloorElementType(Color color) {
            this.color =3D color;
        }

        public Color getColor() {
            return color;
        }
    }

    public App() {
        super("Floor Plan Designer");
        initUI();
    }

    private void initUI() {
        Dimension screenSize =3D Toolkit.getDefaultToolkit().getScreenSize(=
);
        int width =3D (int) screenSize.getWidth();
        int height =3D (int) screenSize.getHeight();
        canvas =3D new BufferedImage(width, height, BufferedImage.TYPE_INT_=
ARGB);
        clearCanvas();

        JPanel panel =3D new JPanel() {
            @Override
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
                g.drawImage(canvas, 0, 0, null);

                // Draw grid lines
                g.setColor(Color.LIGHT_GRAY);
                for (int x =3D 0; x &lt;=3D getWidth(); x +=3D gridSize) {
                    g.drawLine(x, 0, x, getHeight());
                }
                for (int y =3D 0; y &lt;=3D getHeight(); y +=3D gridSize) {
                    g.drawLine(0, y, getWidth(), y);
                }
            }
        };

        panel.setPreferredSize(new Dimension(width, height));
        panel.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                startPoint =3D getNearestGridPoint(e.getPoint());
                endPoint =3D startPoint;
            }

            @Override
            public void mouseReleased(MouseEvent e) {
                endPoint =3D getNearestGridPoint(e.getPoint());
                if (startPoint.x =3D=3D endPoint.x || startPoint.y =3D=3D e=
ndPoint.y) {
                    drawElement(startPoint, endPoint);
                }
            }
        });

        panel.addMouseMotionListener(new MouseMotionAdapter() {
            @Override
            public void mouseDragged(MouseEvent e) {
                Point currentPoint =3D getNearestGridPoint(e.getPoint());
                if (currentPoint.x =3D=3D startPoint.x || currentPoint.y =
=3D=3D startPoint.y) {
                    endPoint =3D currentPoint;
                    drawElement(startPoint, endPoint);
                }
            }
        });

        add(panel);
        setupMenuBar();
        setExtendedState(JFrame.MAXIMIZED_BOTH); // Maximize the frame
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
    }

    private void drawElement(Point start, Point end) {
        if (isInCanvasBounds(start) &amp;&amp; isInCanvasBounds(end)) {
            Graphics2D g2d =3D canvas.createGraphics();
            g2d.setColor(currentElementType.getColor());
            g2d.setStroke(new BasicStroke(2));
            g2d.drawLine(start.x, start.y, end.x, end.y);
            g2d.dispose();
            repaint();
        }
    }

    private boolean isInCanvasBounds(Point point) {
        return point.x &gt;=3D 0 &amp;&amp; point.x &lt; canvas.getWidth() =
&amp;&amp;
                point.y &gt;=3D 0 &amp;&amp; point.y &lt; canvas.getHeight(=
);
    }

    private Point getNearestGridPoint(Point point) {
        int x =3D (point.x / gridSize) * gridSize;
        int y =3D (point.y / gridSize) * gridSize;

        return new Point(x, y);
    }

    private void clearCanvas() {
        Graphics2D g2d =3D canvas.createGraphics();
        g2d.setComposite(AlphaComposite.Clear);
        g2d.fillRect(0, 0, canvas.getWidth(), canvas.getHeight());
        g2d.setComposite(AlphaComposite.SrcOver);
        g2d.dispose();
        repaint();
    }

    private void saveImage() {
        JFileChooser fileChooser =3D new JFileChooser();
        fileChooser.setDialogTitle("Save Image");
        if (fileChooser.showSaveDialog(this) =3D=3D JFileChooser.APPROVE_OP=
TION) {
            File file =3D fileChooser.getSelectedFile();
            try {
                ImageIO.write(canvas, "PNG", file);
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
    }

    private void setupMenuBar() {
        JMenuBar menuBar =3D new JMenuBar();

        JMenu fileMenu =3D new JMenu("File");
        JMenuItem saveItem =3D new JMenuItem("Save");
        saveItem.addActionListener(e -&gt; saveImage());
        fileMenu.add(saveItem);

        JMenuItem exitItem =3D new JMenuItem("Exit");
        exitItem.addActionListener(e -&gt; System.exit(0));
        fileMenu.add(exitItem);

        JMenu elementMenu =3D new JMenu("Element");
        ButtonGroup group =3D new ButtonGroup();
        for (FloorElementType type : FloorElementType.values()) {
            JRadioButtonMenuItem item =3D new JRadioButtonMenuItem(type.nam=
e());
            item.addActionListener(e -&gt; currentElementType =3D type);
            group.add(item);
            elementMenu.add(item);
        }

        menuBar.add(fileMenu);
        menuBar.add(elementMenu);
        setJMenuBar(menuBar);
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -&gt; new App().setVisible(true));
    }
}
</div></div></div></div></div></div></div></div><div class=3D"w-full text-t=
oken-text-primary" data-testid=3D"conversation-turn-49" style=3D"--avatar-c=
olor: #19c37d;"><div class=3D"px-4 py-2 justify-center text-base md:gap-6 m=
-auto"><div class=3D"flex flex-1 text-base mx-auto gap-3 md:max-w-3xl lg:ma=
x-w-[40rem] xl:max-w-[48rem] group final-completion"><div class=3D"flex-shr=
ink-0 flex flex-col relative items-end"><div><div class=3D"pt-0.5"><div cla=
ss=3D"gizmo-shadow-stroke flex h-6 w-6 items-center justify-center overflow=
-hidden rounded-full"><div class=3D"relative p-1 rounded-sm h-9 w-9 text-wh=
ite flex items-center justify-center" style=3D"background-color: rgb(25, 19=
5, 125); width: 24px; height: 24px;"><svg width=3D"41" height=3D"41" viewBo=
x=3D"0 0 41 41" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg" class=3D=
"icon-sm" role=3D"img"><text x=3D"-9999" y=3D"-9999">ChatGPT</text><path d=
=3D"M37.5324 16.8707C37.9808 15.5241 38.1363 14.0974 37.9886 12.6859C37.840=
9 11.2744 37.3934 9.91076 36.676 8.68622C35.6126 6.83404 33.9882 5.3676 32.=
0373 4.4985C30.0864 3.62941 27.9098 3.40259 25.8215 3.85078C24.8796 2.7893 =
23.7219 1.94125 22.4257 1.36341C21.1295 0.785575 19.7249 0.491269 18.3058 0=
.500197C16.1708 0.495044 14.0893 1.16803 12.3614 2.42214C10.6335 3.67624 9.=
34853 5.44666 8.6917 7.47815C7.30085 7.76286 5.98686 8.3414 4.8377 9.17505C=
3.68854 10.0087 2.73073 11.0782 2.02839 12.312C0.956464 14.1591 0.498905 16=
.2988 0.721698 18.4228C0.944492 20.5467 1.83612 22.5449 3.268 24.1293C2.819=
66 25.4759 2.66413 26.9026 2.81182 28.3141C2.95951 29.7256 3.40701 31.0892 =
4.12437 32.3138C5.18791 34.1659 6.8123 35.6322 8.76321 36.5013C10.7141 37.3=
704 12.8907 37.5973 14.9789 37.1492C15.9208 38.2107 17.0786 39.0587 18.3747=
 39.6366C19.6709 40.2144 21.0755 40.5087 22.4946 40.4998C24.6307 40.5054 26=
.7133 39.8321 28.4418 38.5772C30.1704 37.3223 31.4556 35.5506 32.1119 33.51=
79C33.5027 33.2332 34.8167 32.6547 35.9659 31.821C37.115 30.9874 38.0728 29=
.9178 38.7752 28.684C39.8458 26.8371 40.3023 24.6979 40.0789 22.5748C39.855=
6 20.4517 38.9639 18.4544 37.5324 16.8707ZM22.4978 37.8849C20.7443 37.8874 =
19.0459 37.2733 17.6994 36.1501C17.7601 36.117 17.8666 36.0586 17.936 36.01=
61L25.9004 31.4156C26.1003 31.3019 26.2663 31.137 26.3813 30.9378C26.4964 3=
0.7386 26.5563 30.5124 26.5549 30.2825V19.0542L29.9213 20.998C29.9389 21.00=
68 29.9541 21.0198 29.9656 21.0359C29.977 21.052 29.9842 21.0707 29.9867 21=
.0902V30.3889C29.9842 32.375 29.1946 34.2791 27.7909 35.6841C26.3872 37.089=
2 24.4838 37.8806 22.4978 37.8849ZM6.39227 31.0064C5.51397 29.4888 5.19742 =
27.7107 5.49804 25.9832C5.55718 26.0187 5.66048 26.0818 5.73461 26.1244L13.=
699 30.7248C13.8975 30.8408 14.1233 30.902 14.3532 30.902C14.583 30.902 14.=
8088 30.8408 15.0073 30.7248L24.731 25.1103V28.9979C24.7321 29.0177 24.7283=
 29.0376 24.7199 29.0556C24.7115 29.0736 24.6988 29.0893 24.6829 29.1012L16=
.6317 33.7497C14.9096 34.7416 12.8643 35.0097 10.9447 34.4954C9.02506 33.98=
11 7.38785 32.7263 6.39227 31.0064ZM4.29707 13.6194C5.17156 12.0998 6.55279=
 10.9364 8.19885 10.3327C8.19885 10.4013 8.19491 10.5228 8.19491 10.6071V19=
.808C8.19351 20.0378 8.25334 20.2638 8.36823 20.4629C8.48312 20.6619 8.6489=
3 20.8267 8.84863 20.9404L18.5723 26.5542L15.206 28.4979C15.1894 28.5089 15=
.1703 28.5155 15.1505 28.5173C15.1307 28.5191 15.1107 28.516 15.0924 28.508=
2L7.04046 23.8557C5.32135 22.8601 4.06716 21.2235 3.55289 19.3046C3.03862 1=
7.3858 3.30624 15.3413 4.29707 13.6194ZM31.955 20.0556L22.2312 14.4411L25.5=
976 12.4981C25.6142 12.4872 25.6333 12.4805 25.6531 12.4787C25.6729 12.4769=
 25.6928 12.4801 25.7111 12.4879L33.7631 17.1364C34.9967 17.849 36.0017 18.=
8982 36.6606 20.1613C37.3194 21.4244 37.6047 22.849 37.4832 24.2684C37.3617=
 25.6878 36.8382 27.0432 35.9743 28.1759C35.1103 29.3086 33.9415 30.1717 32=
.6047 30.6641C32.6047 30.5947 32.6047 30.4733 32.6047 30.3889V21.188C32.606=
6 20.9586 32.5474 20.7328 32.4332 20.5338C32.319 20.3348 32.154 20.1698 31.=
955 20.0556ZM35.3055 15.0128C35.2464 14.9765 35.1431 14.9142 35.069 14.8717=
L27.1045 10.2712C26.906 10.1554 26.6803 10.0943 26.4504 10.0943C26.2206 10.=
0943 25.9948 10.1554 25.7963 10.2712L16.0726 15.8858V11.9982C16.0715 11.978=
3 16.0753 11.9585 16.0837 11.9405C16.0921 11.9225 16.1048 11.9068 16.1207 1=
1.8949L24.1719 7.25025C25.4053 6.53903 26.8158 6.19376 28.2383 6.25482C29.6=
608 6.31589 31.0364 6.78077 32.2044 7.59508C33.3723 8.40939 34.2842 9.53945=
 34.8334 10.8531C35.3826 12.1667 35.5464 13.6095 35.3055 15.0128ZM14.2424 2=
1.9419L10.8752 19.9981C10.8576 19.9893 10.8423 19.9763 10.8309 19.9602C10.8=
195 19.9441 10.8122 19.9254 10.8098 19.9058V10.6071C10.8107 9.18295 11.2173=
 7.78848 11.9819 6.58696C12.7466 5.38544 13.8377 4.42659 15.1275 3.82264C16=
.4173 3.21869 17.8524 2.99464 19.2649 3.1767C20.6775 3.35876 22.0089 3.9394=
1 23.1034 4.85067C23.0427 4.88379 22.937 4.94215 22.8668 4.98473L14.9024 9.=
58517C14.7025 9.69878 14.5366 9.86356 14.4215 10.0626C14.3065 10.2616 14.24=
66 10.4877 14.2479 10.7175L14.2424 21.9419ZM16.071 17.9991L20.4018 15.4978L=
24.7325 17.9975V22.9985L20.4018 25.4983L16.071 22.9985V17.9991Z" fill=3D"cu=
rrentColor"></path></svg></div></div></div></div></div><div class=3D"relati=
ve flex w-full flex-col agent-turn"><div class=3D"font-semibold select-none=
">ChatGPT</div><div class=3D"flex-col gap-1 md:gap-3"><div class=3D"flex fl=
ex-grow flex-col max-w-full"><div data-message-author-role=3D"assistant" da=
ta-message-id=3D"cfd24740-c9a7-49e3-b167-5abdd2f2bec1" class=3D"min-h-[20px=
] text-message flex flex-col items-start gap-3 whitespace-pre-wrap break-wo=
rds [.text-message+&amp;]:mt-5 overflow-x-auto"><div class=3D"markdown pros=
e w-full break-words dark:prose-invert dark"><p>Here's the modified code ba=
sed on the provided one. This version allows users to draw only straight li=
nes along the grid lines, without allowing diagonal lines:</p><pre><div cla=
ss=3D"dark bg-gray-950 rounded-md"><div class=3D"flex items-center relative=
 text-token-text-secondary bg-token-main-surface-secondary px-4 py-2 text-x=
s font-sans justify-between rounded-t-md"><span>java</span><span class=3D""=
 data-state=3D"closed"><button class=3D"flex gap-1 items-center"><svg width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg" class=3D"icon-sm"><path fill-rule=3D"evenodd" clip-rule=
=3D"evenodd" d=3D"M12 4C10.8954 4 10 4.89543 10 6H14C14 4.89543 13.1046 4 1=
2 4ZM8.53513 4C9.22675 2.8044 10.5194 2 12 2C13.4806 2 14.7733 2.8044 15.46=
49 4H17C18.6569 4 20 5.34315 20 7V19C20 20.6569 18.6569 22 17 22H7C5.34315 =
22 4 20.6569 4 19V7C4 5.34315 5.34315 4 7 4H8.53513ZM8 6H7C6.44772 6 6 6.44=
772 6 7V19C6 19.5523 6.44772 20 7 20H17C17.5523 20 18 19.5523 18 19V7C18 6.=
44772 17.5523 6 17 6H16C16 7.10457 15.1046 8 14 8H10C8.89543 8 8 7.10457 8 =
6Z" fill=3D"currentColor"></path></svg>Copy code</button></span></div><div =
class=3D"p-4 overflow-y-auto"><code class=3D"!whitespace-pre hljs language-=
java"><span class=3D"hljs-keyword">import</span> javax.imageio.ImageIO;
<span class=3D"hljs-keyword">import</span> javax.swing.*;
<span class=3D"hljs-keyword">import</span> java.awt.*;
<span class=3D"hljs-keyword">import</span> java.awt.event.*;
<span class=3D"hljs-keyword">import</span> java.awt.image.BufferedImage;
<span class=3D"hljs-keyword">import</span> java.io.File;
<span class=3D"hljs-keyword">import</span> java.io.IOException;

<span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword">cla=
ss</span> <span class=3D"hljs-title class_">App</span> <span class=3D"hljs-=
keyword">extends</span> <span class=3D"hljs-title class_">JFrame</span> {

    <span class=3D"hljs-keyword">private</span> BufferedImage canvas;
    <span class=3D"hljs-keyword">private</span> Point startPoint;
    <span class=3D"hljs-keyword">private</span> Point endPoint;
    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-type">i=
nt</span> <span class=3D"hljs-variable">gridSize</span> <span class=3D"hljs=
-operator">=3D</span> <span class=3D"hljs-number">20</span>; <span class=3D=
"hljs-comment">// Size of grid cells</span>
    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-type">F=
loorElementType</span> <span class=3D"hljs-variable">currentElementType</sp=
an> <span class=3D"hljs-operator">=3D</span> FloorElementType.WALL; <span c=
lass=3D"hljs-comment">// Default to drawing walls</span>

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword"=
>enum</span> <span class=3D"hljs-title class_">FloorElementType</span> {
        WALL(Color.BLACK),
        WINDOW(Color.BLUE),
        DOOR(Color.RED);

        <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-key=
word">final</span> Color color;

        FloorElementType(Color color) {
            <span class=3D"hljs-built_in">this</span>.color =3D color;
        }

        <span class=3D"hljs-keyword">public</span> Color <span class=3D"hlj=
s-title function_">getColor</span><span class=3D"hljs-params">()</span> {
            <span class=3D"hljs-keyword">return</span> color;
        }
    }

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-title fu=
nction_">App</span><span class=3D"hljs-params">()</span> {
        <span class=3D"hljs-built_in">super</span>(<span class=3D"hljs-stri=
ng">"Floor Plan Designer"</span>);
        initUI();
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">initUI</span><span class=
=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">Dimension</span> <span class=3D"hljs-vari=
able">screenSize</span> <span class=3D"hljs-operator">=3D</span> Toolkit.ge=
tDefaultToolkit().getScreenSize();
        <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">=
width</span> <span class=3D"hljs-operator">=3D</span> (<span class=3D"hljs-=
type">int</span>) screenSize.getWidth();
        <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">=
height</span> <span class=3D"hljs-operator">=3D</span> (<span class=3D"hljs=
-type">int</span>) screenSize.getHeight();
        canvas =3D <span class=3D"hljs-keyword">new</span> <span class=3D"h=
ljs-title class_">BufferedImage</span>(width, height, BufferedImage.TYPE_IN=
T_ARGB);
        clearCanvas();

        <span class=3D"hljs-type">JPanel</span> <span class=3D"hljs-variabl=
e">panel</span> <span class=3D"hljs-operator">=3D</span> <span class=3D"hlj=
s-keyword">new</span> <span class=3D"hljs-title class_">JPanel</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">protected</span> <span class=3D"hl=
js-keyword">void</span> <span class=3D"hljs-title function_">paintComponent=
</span><span class=3D"hljs-params">(Graphics g)</span> {
                <span class=3D"hljs-built_in">super</span>.paintComponent(g=
);
                g.drawImage(canvas, <span class=3D"hljs-number">0</span>, <=
span class=3D"hljs-number">0</span>, <span class=3D"hljs-literal">null</spa=
n>);

                <span class=3D"hljs-comment">// Draw grid lines</span>
                g.setColor(Color.LIGHT_GRAY);
                <span class=3D"hljs-keyword">for</span> (<span class=3D"hlj=
s-type">int</span> <span class=3D"hljs-variable">x</span> <span class=3D"hl=
js-operator">=3D</span> <span class=3D"hljs-number">0</span>; x &lt;=3D get=
Width(); x +=3D gridSize) {
                    g.drawLine(x, <span class=3D"hljs-number">0</span>, x, =
getHeight());
                }
                <span class=3D"hljs-keyword">for</span> (<span class=3D"hlj=
s-type">int</span> <span class=3D"hljs-variable">y</span> <span class=3D"hl=
js-operator">=3D</span> <span class=3D"hljs-number">0</span>; y &lt;=3D get=
Height(); y +=3D gridSize) {
                    g.drawLine(<span class=3D"hljs-number">0</span>, y, get=
Width(), y);
                }
            }
        };

        panel.setPreferredSize(<span class=3D"hljs-keyword">new</span> <spa=
n class=3D"hljs-title class_">Dimension</span>(width, height));
        panel.addMouseListener(<span class=3D"hljs-keyword">new</span> <spa=
n class=3D"hljs-title class_">MouseAdapter</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">mousePressed</spa=
n><span class=3D"hljs-params">(MouseEvent e)</span> {
                startPoint =3D getNearestGridPoint(e.getPoint());
                endPoint =3D startPoint;
            }

            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">mouseReleased</sp=
an><span class=3D"hljs-params">(MouseEvent e)</span> {
                endPoint =3D getNearestGridPoint(e.getPoint());
                drawElement(startPoint, endPoint); <span class=3D"hljs-comm=
ent">// Always draw straight lines</span>
            }
        });

        panel.addMouseMotionListener(<span class=3D"hljs-keyword">new</span=
> <span class=3D"hljs-title class_">MouseMotionAdapter</span>() {
            <span class=3D"hljs-meta">@Override</span>
            <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-=
keyword">void</span> <span class=3D"hljs-title function_">mouseDragged</spa=
n><span class=3D"hljs-params">(MouseEvent e)</span> {
                endPoint =3D getNearestGridPoint(e.getPoint());
                drawElement(startPoint, endPoint); <span class=3D"hljs-comm=
ent">// Always draw straight lines</span>
            }
        });

        add(panel);
        setupMenuBar();
        setExtendedState(JFrame.MAXIMIZED_BOTH); <span class=3D"hljs-commen=
t">// Maximize the frame</span>
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(<span class=3D"hljs-literal">null</span>);
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">drawElement</span><span =
class=3D"hljs-params">(Point start, Point end)</span> {
        <span class=3D"hljs-keyword">if</span> (isInCanvasBounds(start) &am=
p;&amp; isInCanvasBounds(end)) {
            <span class=3D"hljs-keyword">if</span> (start.x =3D=3D end.x ||=
 start.y =3D=3D end.y) {
                <span class=3D"hljs-type">Graphics2D</span> <span class=3D"=
hljs-variable">g2d</span> <span class=3D"hljs-operator">=3D</span> canvas.c=
reateGraphics();
                g2d.setColor(currentElementType.getColor());
                g2d.setStroke(<span class=3D"hljs-keyword">new</span> <span=
 class=3D"hljs-title class_">BasicStroke</span>(<span class=3D"hljs-number"=
>2</span>));
                g2d.drawLine(start.x, start.y, end.x, end.y);
                g2d.dispose();
                repaint();
            }
        }
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-type">b=
oolean</span> <span class=3D"hljs-title function_">isInCanvasBounds</span><=
span class=3D"hljs-params">(Point point)</span> {
        <span class=3D"hljs-keyword">return</span> point.x &gt;=3D <span cl=
ass=3D"hljs-number">0</span> &amp;&amp; point.x &lt; canvas.getWidth() &amp=
;&amp;
                point.y &gt;=3D <span class=3D"hljs-number">0</span> &amp;&=
amp; point.y &lt; canvas.getHeight();
    }

    <span class=3D"hljs-keyword">private</span> Point <span class=3D"hljs-t=
itle function_">getNearestGridPoint</span><span class=3D"hljs-params">(Poin=
t point)</span> {
        <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">=
x</span> <span class=3D"hljs-operator">=3D</span> (point.x / gridSize) * gr=
idSize;
        <span class=3D"hljs-type">int</span> <span class=3D"hljs-variable">=
y</span> <span class=3D"hljs-operator">=3D</span> (point.y / gridSize) * gr=
idSize;

        <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-keyw=
ord">new</span> <span class=3D"hljs-title class_">Point</span>(x, y);
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">clearCanvas</span><span =
class=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">Graphics2D</span> <span class=3D"hljs-var=
iable">g2d</span> <span class=3D"hljs-operator">=3D</span> canvas.createGra=
phics();
        g2d.setComposite(AlphaComposite.Clear);
        g2d.fillRect(<span class=3D"hljs-number">0</span>, <span class=3D"h=
ljs-number">0</span>, canvas.getWidth(), canvas.getHeight());
        g2d.setComposite(AlphaComposite.SrcOver);
        g2d.dispose();
        repaint();
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">saveImage</span><span cl=
ass=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">JFileChooser</span> <span class=3D"hljs-v=
ariable">fileChooser</span> <span class=3D"hljs-operator">=3D</span> <span =
class=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JFileCh=
ooser</span>();
        fileChooser.setDialogTitle(<span class=3D"hljs-string">"Save Image"=
</span>);
        <span class=3D"hljs-keyword">if</span> (fileChooser.showSaveDialog(=
<span class=3D"hljs-built_in">this</span>) =3D=3D JFileChooser.APPROVE_OPTI=
ON) {
            <span class=3D"hljs-type">File</span> <span class=3D"hljs-varia=
ble">file</span> <span class=3D"hljs-operator">=3D</span> fileChooser.getSe=
lectedFile();
            <span class=3D"hljs-keyword">try</span> {
                ImageIO.write(canvas, <span class=3D"hljs-string">"PNG"</sp=
an>, file);
            } <span class=3D"hljs-keyword">catch</span> (IOException ex) {
                ex.printStackTrace();
            }
        }
    }

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">void</span> <span class=3D"hljs-title function_">setupMenuBar</span><span=
 class=3D"hljs-params">()</span> {
        <span class=3D"hljs-type">JMenuBar</span> <span class=3D"hljs-varia=
ble">menuBar</span> <span class=3D"hljs-operator">=3D</span> <span class=3D=
"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuBar</span>=
();

        <span class=3D"hljs-type">JMenu</span> <span class=3D"hljs-variable=
">fileMenu</span> <span class=3D"hljs-operator">=3D</span> <span class=3D"h=
ljs-keyword">new</span> <span class=3D"hljs-title class_">JMenu</span>(<spa=
n class=3D"hljs-string">"File"</span>);
        <span class=3D"hljs-type">JMenuItem</span> <span class=3D"hljs-vari=
able">saveItem</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuItem</s=
pan>(<span class=3D"hljs-string">"Save"</span>);
        saveItem.addActionListener(e -&gt; saveImage());
        fileMenu.add(saveItem);

        <span class=3D"hljs-type">JMenuItem</span> <span class=3D"hljs-vari=
able">exitItem</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenuItem</s=
pan>(<span class=3D"hljs-string">"Exit"</span>);
        exitItem.addActionListener(e -&gt; System.exit(<span class=3D"hljs-=
number">0</span>));
        fileMenu.add(exitItem);

        <span class=3D"hljs-type">JMenu</span> <span class=3D"hljs-variable=
">elementMenu</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JMenu</span>=
(<span class=3D"hljs-string">"Element"</span>);
        <span class=3D"hljs-type">ButtonGroup</span> <span class=3D"hljs-va=
riable">group</span> <span class=3D"hljs-operator">=3D</span> <span class=
=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">ButtonGroup<=
/span>();
        <span class=3D"hljs-keyword">for</span> (FloorElementType type : Fl=
oorElementType.values()) {
            <span class=3D"hljs-type">JRadioButtonMenuItem</span> <span cla=
ss=3D"hljs-variable">item</span> <span class=3D"hljs-operator">=3D</span> <=
span class=3D"hljs-keyword">new</span> <span class=3D"hljs-title class_">JR=
adioButtonMenuItem</span>(type.name());
            item.addActionListener(e -&gt; currentElementType =3D type);
            group.add(item);
            elementMenu.add(item);
        }

        menuBar.add(fileMenu);
        menuBar.add(elementMenu);
        setJMenuBar(menuBar);
    }

    <span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword"=
>static</span> <span class=3D"hljs-keyword">void</span> <span class=3D"hljs=
-title function_">main</span><span class=3D"hljs-params">(String[] args)</s=
pan> {
        SwingUtilities.invokeLater(() -&gt; <span class=3D"hljs-keyword">ne=
w</span> <span class=3D"hljs-title class_">App</span>().setVisible(<span cl=
ass=3D"hljs-literal">true</span>));
    }
}
</code></div></div></pre><p>In this code, I've removed the checks for diago=
nal lines, ensuring that only straight lines along the grid lines can be dr=
awn.</p></div></div></div></div></div></div></div></div></div></div></div><=
div class=3D"w-full pt-2 md:pt-0 dark:border-white/20 md:border-transparent=
 md:dark:border-transparent md:w-[calc(100%-.5rem)]"><div class=3D"relative=
 flex w-full flex-1 items-center justify-center gap-2 pt-3 empty:hidden"><a=
 class=3D"flex items-center gap-2 rounded-xl bg-green-600 px-5 py-3.5 font-=
medium text-white transition hover:opacity-70 w-40 justify-center" href=3D"=
https://chat.openai.com/gpts"><div>Upgrade to Plus to create your own <span=
 class=3D"font-bold">GPT</span></div></a></div><div class=3D"relative px-2 =
py-2 text-center text-xs text-token-text-secondary md:px-[60px]"><div class=
=3D"flex justify-center gap-3 text-token-text-tertiary"><button>Report cont=
ent</button><span>|</span><a href=3D"https://openai.com/policies/terms-of-u=
se" target=3D"_blank" rel=3D"noreferrer">Terms of use</a><span>|</span><a h=
ref=3D"https://openai.com/policies/privacy-policy" target=3D"_blank" rel=3D=
"noreferrer">Privacy policy</a><span>|</span></div></div></div></div><div c=
lass=3D"group fixed bottom-3 right-3 z-10 hidden gap-1 lg:flex"><div class=
=3D"group relative" data-headlessui-state=3D""><button class=3D"flex items-=
center justify-center rounded-full border border-token-border-light text-to=
ken-text-secondary" id=3D"headlessui-menu-button-:rp:" type=3D"button" aria=
-haspopup=3D"true" aria-expanded=3D"false" data-headlessui-state=3D""><div =
class=3D"flex h-6 w-6 items-center justify-center text-xs">?</div></button>=
</div></div></main></div></div><div class=3D"absolute left-0 right-0 top-0 =
z-[2]"></div><audio class=3D"fixed bottom-0 left-0 hidden h-0 w-0" autoplay=
=3D"" crossorigin=3D"anonymous"></audio></div><next-route-announcer><p aria=
-live=3D"assertive" id=3D"__next-route-announcer__" role=3D"alert" style=3D=
"border: 0px; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; ov=
erflow: hidden; padding: 0px; position: absolute; top: 0px; width: 1px; whi=
te-space: nowrap; overflow-wrap: normal;"></p></next-route-announcer><div p=
ortal-container=3D""><span class=3D"pointer-events-none fixed inset-0 z-[60=
] mx-auto my-2 flex max-w-[560px] flex-col items-stretch justify-start md:p=
b-5"></span></div><iframe id=3D"intercom-frame" style=3D"position: absolute=
 !important; opacity: 0 !important; width: 1px !important; height: 1px !imp=
ortant; top: 0 !important; left: 0 !important; border: none !important; dis=
play: block !important; z-index: -1 !important; pointer-events: none;" aria=
-hidden=3D"true" tabindex=3D"-1" title=3D"Intercom"></iframe><div class=3D"=
intercom-lightweight-app"></div></body></html>
------MultipartBoundary--ET94CoNVQv3VTDDkD373fFCMxXhXaLX2IQoKh3TLns----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-c0e174c4-d759-4d25-b569-d4f5bc0bfc29@mhtml.blink

@charset "utf-8";

@keyframes intercom-lightweight-app-launcher {=20
  0% { opacity: 0; transform: scale(0.5); }
  100% { opacity: 1; transform: scale(1); }
}

@keyframes intercom-lightweight-app-gradient {=20
  0% { opacity: 0; }
  100% { opacity: 1; }
}

@keyframes intercom-lightweight-app-messenger {=20
  0% { opacity: 0; transform: scale(0); }
  40% { opacity: 1; }
  100% { transform: scale(1); }
}

.intercom-lightweight-app { position: fixed; z-index: 2147483001; width: 0p=
x; height: 0px; font-family: intercom-font, "Helvetica Neue", "Apple Color =
Emoji", Helvetica, Arial, sans-serif; }

.intercom-lightweight-app-gradient { position: fixed; z-index: 2147483002; =
width: 500px; height: 500px; bottom: 0px; right: 0px; pointer-events: none;=
 background: radial-gradient(at right bottom, rgba(29, 39, 54, 0.16) 0%, rg=
ba(29, 39, 54, 0) 72%); animation: 200ms ease-out 0s 1 normal none running =
intercom-lightweight-app-gradient; }

.intercom-lightweight-app-launcher { position: fixed; z-index: 2147483003; =
border: none; bottom: 20px; right: 20px; max-width: 48px; width: 48px; max-=
height: 48px; height: 48px; border-radius: 50%; background: rgb(32, 33, 35)=
; cursor: pointer; box-shadow: rgba(0, 0, 0, 0.06) 0px 1px 6px 0px, rgba(0,=
 0, 0, 0.16) 0px 2px 32px 0px; transition: transform 167ms cubic-bezier(0.3=
3, 0, 0, 1) 0s; box-sizing: content-box; padding: 0px !important; margin: 0=
px !important; }

.intercom-lightweight-app-launcher:hover { transition: transform 250ms cubi=
c-bezier(0.33, 0, 0, 1) 0s; transform: scale(1.1); }

.intercom-lightweight-app-launcher:active { transform: scale(0.85); transit=
ion: transform 134ms cubic-bezier(0.45, 0, 0.2, 1) 0s; }

.intercom-lightweight-app-launcher:focus { outline: none; }

.intercom-lightweight-app-launcher-icon { display: flex; align-items: cente=
r; justify-content: center; position: absolute; top: 0px; left: 0px; width:=
 48px; height: 48px; transition: transform 100ms linear 0s, opacity 80ms li=
near 0s; }

.intercom-lightweight-app-launcher-icon-open { opacity: 1; transform: rotat=
e(0deg) scale(1); }

.intercom-lightweight-app-launcher-icon-open svg { width: 24px; height: 24p=
x; }

.intercom-lightweight-app-launcher-icon-open svg path { fill: rgb(255, 255,=
 255); }

.intercom-lightweight-app-launcher-icon-self-serve { opacity: 1; transform:=
 rotate(0deg) scale(1); }

.intercom-lightweight-app-launcher-icon-self-serve svg { height: 44px; }

.intercom-lightweight-app-launcher-icon-self-serve svg path { fill: rgb(255=
, 255, 255); }

.intercom-lightweight-app-launcher-custom-icon-open { max-height: 24px; max=
-width: 24px; opacity: 1; transform: rotate(0deg) scale(1); }

.intercom-lightweight-app-launcher-icon-minimize { opacity: 0; transform: r=
otate(-60deg) scale(0); }

.intercom-lightweight-app-launcher-icon-minimize svg path { fill: rgb(255, =
255, 255); }

.intercom-lightweight-app-messenger { position: fixed; z-index: 2147483003;=
 overflow: hidden; background-color: white; animation: 250ms cubic-bezier(0=
, 1, 1, 1) 0s 1 normal none running intercom-lightweight-app-messenger; tra=
nsform-origin: right bottom; width: 400px; height: calc(100% - 40px); max-h=
eight: 704px; min-height: 250px; right: 20px; bottom: 20px; box-shadow: rgb=
a(0, 0, 0, 0.16) 0px 5px 40px; border-radius: 16px; }

.intercom-lightweight-app-messenger-header { height: 64px; border-bottom: n=
one; background: rgb(32, 33, 35); }

.intercom-lightweight-app-messenger-footer { position: absolute; bottom: 0p=
x; width: 100%; height: 80px; background: rgb(255, 255, 255); font-size: 14=
px; line-height: 21px; border-top: 1px solid rgba(0, 0, 0, 0.05); box-shado=
w: rgba(0, 0, 0, 0.05) 0px 0px 25px; }

@media print {
  .intercom-lightweight-app { display: none; }
}
------MultipartBoundary--ET94CoNVQv3VTDDkD373fFCMxXhXaLX2IQoKh3TLns----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://cdn.oaistatic.com/_next/static/css/141e63fd73f26239.css

@charset "utf-8";

@font-face { font-display: swap; font-family: Signifier; font-style: normal=
; font-weight: 400; src: url("https://cdn.oaistatic.com/_next/static/media/=
signifier-light.c131ea48.woff2") format("woff2"); }

@font-face { font-display: swap; font-family: Signifier; font-style: italic=
; font-weight: 400; src: url("https://cdn.oaistatic.com/_next/static/media/=
signifier-light-italic.ae129369.woff2") format("woff2"); }

@font-face { font-display: swap; font-family: Signifier; font-style: normal=
; font-weight: 700; src: url("https://cdn.oaistatic.com/_next/static/media/=
signifier-bold.3a11015f.woff2") format("woff2"); }

@font-face { font-display: swap; font-family: Signifier; font-style: italic=
; font-weight: 700; src: url("https://cdn.oaistatic.com/_next/static/media/=
signifier-bold-italic.52d511e3.woff2") format("woff2"); }

@font-face { font-display: swap; font-family: S=C3=B6hne; font-style: norma=
l; font-weight: 400; src: url("https://cdn.oaistatic.com/_next/static/media=
/soehne-buch.13189857.woff2") format("woff2"); }

@font-face { font-display: swap; font-family: S=C3=B6hne; font-style: itali=
c; font-weight: 400; src: url("https://cdn.oaistatic.com/_next/static/media=
/soehne-buch-kursiv.1052965d.woff2") format("woff2"); }

@font-face { font-display: swap; font-family: S=C3=B6hne; font-style: norma=
l; font-weight: 500; src: url("https://cdn.oaistatic.com/_next/static/media=
/soehne-kraftig.204b461c.woff2") format("woff2"); }

@font-face { font-display: swap; font-family: S=C3=B6hne; font-style: itali=
c; font-weight: 500; src: url("https://cdn.oaistatic.com/_next/static/media=
/soehne-kraftig-kursiv.a0040f3f.woff2") format("woff2"); }

@font-face { font-display: swap; font-family: S=C3=B6hne; font-style: norma=
l; font-weight: 600; src: url("https://cdn.oaistatic.com/_next/static/media=
/soehne-halbfett.977f1845.woff2") format("woff2"); }

@font-face { font-display: swap; font-family: S=C3=B6hne; font-style: itali=
c; font-weight: 600; src: url("https://cdn.oaistatic.com/_next/static/media=
/soehne-halbfett-kursiv.cb37a814.woff2") format("woff2"); }

@font-face { font-display: swap; font-family: "S=C3=B6hne Mono"; font-style=
: normal; font-weight: 400; src: url("https://cdn.oaistatic.com/_next/stati=
c/media/soehne-mono-buch.de677af1.woff2") format("woff2"); }

@font-face { font-display: swap; font-family: "S=C3=B6hne Mono"; font-style=
: normal; font-weight: 700; src: url("https://cdn.oaistatic.com/_next/stati=
c/media/soehne-mono-halbfett.b082e8e2.woff2") format("woff2"); }

@font-face { font-display: swap; font-family: "S=C3=B6hne Mono"; font-style=
: italic; font-weight: 400; src: url("https://cdn.oaistatic.com/_next/stati=
c/media/soehne-mono-buch-kursiv.8eeb89d0.woff2") format("woff2"); }

@font-face { font-display: swap; font-family: "S=C3=B6hne Circle"; font-sty=
le: normal; font-weight: 400; src: url("https://cdn.oaistatic.com/_next/sta=
tic/media/soehne-circle-buch.d446e5e9.woff2") format("woff2"); }

@font-face { font-display: swap; font-family: "S=C3=B6hne Circle"; font-sty=
le: normal; font-weight: 600; src: url("https://cdn.oaistatic.com/_next/sta=
tic/media/soehne-circle-halbfett.9eb377ad.woff2") format("woff2"); }

*, ::after, ::before { border: 0px solid rgb(227, 227, 227); box-sizing: bo=
rder-box; }

::after, ::before { --tw-content: ""; }

html { text-size-adjust: 100%; font-feature-settings: normal; font-family: =
S=C3=B6hne, ui-sans-serif, system-ui, -apple-system, "Segoe UI", Roboto, Ub=
untu, Cantarell, "Noto Sans", sans-serif, "Helvetica Neue", Arial, "Apple C=
olor Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; font-=
variation-settings: normal; line-height: 1.5; tab-size: 4; }

body { line-height: inherit; margin: 0px; }

hr { border-top-width: 1px; color: inherit; height: 0px; }

abbr:where([title]) { text-decoration: underline dotted currentcolor; }

h1, h2, h3, h4, h5, h6 { font-size: inherit; font-weight: inherit; }

a { color: inherit; text-decoration: inherit; }

b, strong { font-weight: bolder; }

code, kbd, pre, samp { font-family: "S=C3=B6hne Mono", Monaco, "Andale Mono=
", "Ubuntu Mono", monospace; font-size: 1em; }

small { font-size: 80%; }

sub, sup { font-size: 75%; line-height: 0; position: relative; vertical-ali=
gn: baseline; }

sub { bottom: -0.25em; }

sup { top: -0.5em; }

table { border-collapse: collapse; border-color: inherit; text-indent: 0px;=
 }

button, input, optgroup, select, textarea { color: inherit; font-family: in=
herit; font-size: 100%; font-weight: inherit; line-height: inherit; margin:=
 0px; padding: 0px; }

button, select { text-transform: none; }

[type=3D"button"], [type=3D"reset"], [type=3D"submit"], button { appearance=
: button; background-color: transparent; background-image: none; }

progress { vertical-align: baseline; }

::-webkit-inner-spin-button, ::-webkit-outer-spin-button { height: auto; }

[type=3D"search"] { appearance: textfield; outline-offset: -2px; }

::-webkit-search-decoration { appearance: none; }

::-webkit-file-upload-button { appearance: button; font: inherit; }

summary { display: list-item; }

blockquote, dd, dl, fieldset, figure, h1, h2, h3, h4, h5, h6, hr, p, pre { =
margin: 0px; }

fieldset, legend { padding: 0px; }

menu, ol, ul { list-style: none; margin: 0px; padding: 0px; }

textarea { resize: vertical; }

input::-webkit-input-placeholder, textarea::-webkit-input-placeholder { col=
or: rgb(180, 180, 180); }

input::placeholder, textarea::placeholder { color: rgb(180, 180, 180); }

[role=3D"button"], button { cursor: pointer; }

:disabled { cursor: default; }

audio, canvas, embed, iframe, img, object, svg, video { display: block; ver=
tical-align: middle; }

img, video { height: auto; max-width: 100%; }

[hidden] { display: none; }

[multiple], [type=3D"date"], [type=3D"datetime-local"], [type=3D"email"], [=
type=3D"month"], [type=3D"number"], [type=3D"password"], [type=3D"search"],=
 [type=3D"tel"], [type=3D"text"], [type=3D"time"], [type=3D"url"], [type=3D=
"week"], select, textarea { --tw-shadow: 0 0 transparent; appearance: none;=
 background-color: rgb(255, 255, 255); border-color: rgb(155, 155, 155); bo=
rder-radius: 0px; border-width: 1px; font-size: 1rem; line-height: 1.5rem; =
padding: 0.5rem 0.75rem; }

[multiple]:focus, [type=3D"date"]:focus, [type=3D"datetime-local"]:focus, [=
type=3D"email"]:focus, [type=3D"month"]:focus, [type=3D"number"]:focus, [ty=
pe=3D"password"]:focus, [type=3D"search"]:focus, [type=3D"tel"]:focus, [typ=
e=3D"text"]:focus, [type=3D"time"]:focus, [type=3D"url"]:focus, [type=3D"we=
ek"]:focus, select:focus, textarea:focus { --tw-ring-inset: var(--tw-empty,=
/*!*/ /*!*/); --tw-ring-offset-width: 0px; --tw-ring-offset-color: #fff; --=
tw-ring-color: #2563eb; --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0=
 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow:=
 var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--t=
w-ring-color); border-color: rgb(37, 99, 235); box-shadow: var(--tw-ring-of=
fset-shadow),var(--tw-ring-shadow),var(--tw-shadow); outline: transparent s=
olid 2px; outline-offset: 2px; }

input::-webkit-input-placeholder, textarea::-webkit-input-placeholder { col=
or: rgb(155, 155, 155); opacity: 1; }

input::placeholder, textarea::placeholder { color: rgb(155, 155, 155); opac=
ity: 1; }

::-webkit-datetime-edit-fields-wrapper { padding: 0px; }

::-webkit-date-and-time-value { min-height: 1.5em; }

::-webkit-datetime-edit, ::-webkit-datetime-edit-day-field, ::-webkit-datet=
ime-edit-hour-field, ::-webkit-datetime-edit-meridiem-field, ::-webkit-date=
time-edit-millisecond-field, ::-webkit-datetime-edit-minute-field, ::-webki=
t-datetime-edit-month-field, ::-webkit-datetime-edit-second-field, ::-webki=
t-datetime-edit-year-field { padding-bottom: 0px; padding-top: 0px; }

select { background-image: url("data:image/svg+xml;charset=3Dutf-8,%3Csvg x=
mlns=3D'http://www.w3.org/2000/svg' fill=3D'none' viewBox=3D'0 0 20 20'%3E%=
3Cpath stroke=3D'%239B9B9B' stroke-linecap=3D'round' stroke-linejoin=3D'rou=
nd' stroke-width=3D'1.5' d=3D'm6 8 4 4 4-4'/%3E%3C/svg%3E"); background-pos=
ition: right 0.5rem center; background-repeat: no-repeat; background-size: =
1.5em 1.5em; padding-right: 2.5rem; -webkit-print-color-adjust: exact; }

[multiple] { background-image: none; background-position: 0px 0px; backgrou=
nd-repeat: repeat; background-size: initial; padding-right: 0.75rem; -webki=
t-print-color-adjust: inherit; }

[type=3D"checkbox"], [type=3D"radio"] { --tw-shadow: 0 0 transparent; appea=
rance: none; background-color: rgb(255, 255, 255); background-origin: borde=
r-box; border-color: rgb(155, 155, 155); border-width: 1px; color: rgb(37, =
99, 235); display: inline-block; flex-shrink: 0; height: 1rem; padding: 0px=
; -webkit-print-color-adjust: exact; user-select: none; vertical-align: mid=
dle; width: 1rem; }

[type=3D"checkbox"] { border-radius: 0px; }

[type=3D"radio"] { border-radius: 100%; }

[type=3D"checkbox"]:focus, [type=3D"radio"]:focus { --tw-ring-inset: var(--=
tw-empty,/*!*/ /*!*/); --tw-ring-offset-width: 2px; --tw-ring-offset-color:=
 #fff; --tw-ring-color: #2563eb; --tw-ring-offset-shadow: var(--tw-ring-ins=
et) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-rin=
g-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)=
) var(--tw-ring-color); box-shadow: var(--tw-ring-offset-shadow),var(--tw-r=
ing-shadow),var(--tw-shadow); outline: transparent solid 2px; outline-offse=
t: 2px; }

[type=3D"checkbox"]:checked, [type=3D"radio"]:checked { background-color: c=
urrentcolor; background-position: 50% center; background-repeat: no-repeat;=
 background-size: 100% 100%; border-color: transparent; }

[type=3D"checkbox"]:checked { background-image: url("data:image/svg+xml;cha=
rset=3Dutf-8,%3Csvg viewBox=3D'0 0 16 16' fill=3D'%23fff' xmlns=3D'http://w=
ww.w3.org/2000/svg'%3E%3Cpath d=3D'M12.207 4.793a1 1 0 0 1 0 1.414l-5 5a1 1=
 0 0 1-1.414 0l-2-2a1 1 0 0 1 1.414-1.414L6.5 9.086l4.293-4.293a1 1 0 0 1 1=
.414 0z'/%3E%3C/svg%3E"); }

[type=3D"radio"]:checked { background-image: url("data:image/svg+xml;charse=
t=3Dutf-8,%3Csvg viewBox=3D'0 0 16 16' fill=3D'%23fff' xmlns=3D'http://www.=
w3.org/2000/svg'%3E%3Ccircle cx=3D'8' cy=3D'8' r=3D'3'/%3E%3C/svg%3E"); }

[type=3D"checkbox"]:checked:focus, [type=3D"checkbox"]:checked:hover, [type=
=3D"radio"]:checked:focus, [type=3D"radio"]:checked:hover { background-colo=
r: currentcolor; border-color: transparent; }

[type=3D"checkbox"]:indeterminate { background-color: currentcolor; backgro=
und-image: url("data:image/svg+xml;charset=3Dutf-8,%3Csvg xmlns=3D'http://w=
ww.w3.org/2000/svg' fill=3D'none' viewBox=3D'0 0 16 16'%3E%3Cpath stroke=3D=
'%23fff' stroke-linecap=3D'round' stroke-linejoin=3D'round' stroke-width=3D=
'2' d=3D'M4 8h8'/%3E%3C/svg%3E"); background-position: 50% center; backgrou=
nd-repeat: no-repeat; background-size: 100% 100%; border-color: transparent=
; }

[type=3D"checkbox"]:indeterminate:focus, [type=3D"checkbox"]:indeterminate:=
hover { background-color: currentcolor; border-color: transparent; }

[type=3D"file"] { background: initial; border-color: inherit; border-radius=
: 0px; border-width: 0px; font-size: inherit; line-height: inherit; padding=
: 0px; }

[type=3D"file"]:focus { outline: -webkit-focus-ring-color auto 1px; }

h1 { font-size: 1.875rem; line-height: 2.25rem; }

h1, h2, h3 { font-weight: 600; }

h2, h3 { font-size: 1.5rem; line-height: 2rem; }

input[type=3D"number"]::-webkit-inner-spin-button, input[type=3D"number"]::=
-webkit-outer-spin-button { appearance: none; margin: 0px; }

*, ::after, ::before { --tw-border-spacing-x: 0; --tw-border-spacing-y: 0; =
--tw-translate-x: 0; --tw-translate-y: 0; --tw-rotate: 0; --tw-skew-x: 0; -=
-tw-skew-y: 0; --tw-scale-x: 1; --tw-scale-y: 1; --tw-pan-x: ; --tw-pan-y: =
; --tw-pinch-zoom: ; --tw-scroll-snap-strictness: proximity; --tw-gradient-=
from-position: ; --tw-gradient-via-position: ; --tw-gradient-to-position: ;=
 --tw-ordinal: ; --tw-slashed-zero: ; --tw-numeric-figure: ; --tw-numeric-s=
pacing: ; --tw-numeric-fraction: ; --tw-ring-inset: ; --tw-ring-offset-widt=
h: 0px; --tw-ring-offset-color: #fff; --tw-ring-color: rgba(69,89,164,.5); =
--tw-ring-offset-shadow: 0 0 transparent; --tw-ring-shadow: 0 0 transparent=
; --tw-shadow: 0 0 transparent; --tw-shadow-colored: 0 0 transparent; --tw-=
blur: ; --tw-brightness: ; --tw-contrast: ; --tw-grayscale: ; --tw-hue-rota=
te: ; --tw-invert: ; --tw-saturate: ; --tw-sepia: ; --tw-drop-shadow: ; --t=
w-backdrop-blur: ; --tw-backdrop-brightness: ; --tw-backdrop-contrast: ; --=
tw-backdrop-grayscale: ; --tw-backdrop-hue-rotate: ; --tw-backdrop-invert: =
; --tw-backdrop-opacity: ; --tw-backdrop-saturate: ; --tw-backdrop-sepia: ;=
 }

::-webkit-backdrop { --tw-border-spacing-x: 0; --tw-border-spacing-y: 0; --=
tw-translate-x: 0; --tw-translate-y: 0; --tw-rotate: 0; --tw-skew-x: 0; --t=
w-skew-y: 0; --tw-scale-x: 1; --tw-scale-y: 1; --tw-pan-x: ; --tw-pan-y: ; =
--tw-pinch-zoom: ; --tw-scroll-snap-strictness: proximity; --tw-gradient-fr=
om-position: ; --tw-gradient-via-position: ; --tw-gradient-to-position: ; -=
-tw-ordinal: ; --tw-slashed-zero: ; --tw-numeric-figure: ; --tw-numeric-spa=
cing: ; --tw-numeric-fraction: ; --tw-ring-inset: ; --tw-ring-offset-width:=
 0px; --tw-ring-offset-color: #fff; --tw-ring-color: rgba(69,89,164,.5); --=
tw-ring-offset-shadow: 0 0 transparent; --tw-ring-shadow: 0 0 transparent; =
--tw-shadow: 0 0 transparent; --tw-shadow-colored: 0 0 transparent; --tw-bl=
ur: ; --tw-brightness: ; --tw-contrast: ; --tw-grayscale: ; --tw-hue-rotate=
: ; --tw-invert: ; --tw-saturate: ; --tw-sepia: ; --tw-drop-shadow: ; --tw-=
backdrop-blur: ; --tw-backdrop-brightness: ; --tw-backdrop-contrast: ; --tw=
-backdrop-grayscale: ; --tw-backdrop-hue-rotate: ; --tw-backdrop-invert: ; =
--tw-backdrop-opacity: ; --tw-backdrop-saturate: ; --tw-backdrop-sepia: ; }

::backdrop { --tw-border-spacing-x: 0; --tw-border-spacing-y: 0; --tw-trans=
late-x: 0; --tw-translate-y: 0; --tw-rotate: 0; --tw-skew-x: 0; --tw-skew-y=
: 0; --tw-scale-x: 1; --tw-scale-y: 1; --tw-pan-x: ; --tw-pan-y: ; --tw-pin=
ch-zoom: ; --tw-scroll-snap-strictness: proximity; --tw-gradient-from-posit=
ion: ; --tw-gradient-via-position: ; --tw-gradient-to-position: ; --tw-ordi=
nal: ; --tw-slashed-zero: ; --tw-numeric-figure: ; --tw-numeric-spacing: ; =
--tw-numeric-fraction: ; --tw-ring-inset: ; --tw-ring-offset-width: 0px; --=
tw-ring-offset-color: #fff; --tw-ring-color: rgba(69,89,164,.5); --tw-ring-=
offset-shadow: 0 0 transparent; --tw-ring-shadow: 0 0 transparent; --tw-sha=
dow: 0 0 transparent; --tw-shadow-colored: 0 0 transparent; --tw-blur: ; --=
tw-brightness: ; --tw-contrast: ; --tw-grayscale: ; --tw-hue-rotate: ; --tw=
-invert: ; --tw-saturate: ; --tw-sepia: ; --tw-drop-shadow: ; --tw-backdrop=
-blur: ; --tw-backdrop-brightness: ; --tw-backdrop-contrast: ; --tw-backdro=
p-grayscale: ; --tw-backdrop-hue-rotate: ; --tw-backdrop-invert: ; --tw-bac=
kdrop-opacity: ; --tw-backdrop-saturate: ; --tw-backdrop-sepia: ; }

:root { --white: #fff; --black: #000; --gray-50: #f9f9f9; --gray-100: #ecec=
ec; --gray-200: #cdcdcd; --gray-300: #b4b4b4; --gray-400: #9b9b9b; --gray-5=
00: #676767; --gray-600: #424242; --gray-700: #2f2f2f; --gray-800: #212121;=
 --gray-900: #171717; --gray-950: #0d0d0d; --brand-purple: #ab68ff; }

html { --text-primary: var(--gray-950); --text-secondary: var(--gray-600); =
--text-tertiary: var(--gray-500); --text-quaternary: var(--gray-300); --bor=
der-light: rgba(0,0,0,.1); --border-medium: rgba(0,0,0,.15); --border-heavy=
: rgba(0,0,0,.2); --border-xheavy: rgba(0,0,0,.25); --main-surface-primary:=
 var(--white); --main-surface-secondary: var(--gray-50); --main-surface-ter=
tiary: var(--gray-100); --sidebar-surface-primary: var(--gray-50); --sideba=
r-surface-secondary: var(--gray-100); --sidebar-surface-tertiary: var(--gra=
y-100); --link: #2964aa; --link-hover: #749ac8; }

.dark { --text-primary: var(--gray-100); --text-secondary: var(--gray-300);=
 --text-tertiary: var(--gray-500); --text-quaternary: var(--gray-700); --bo=
rder-light: hsla(0,0%,100%,.1); --border-medium: hsla(0,0%,100%,.15); --bor=
der-heavy: hsla(0,0%,100%,.2); --border-xheavy: hsla(0,0%,100%,.25); --main=
-surface-primary: var(--gray-800); --main-surface-secondary: var(--gray-700=
); --main-surface-tertiary: var(--gray-600); --sidebar-surface-primary: var=
(--gray-900); --sidebar-surface-secondary: var(--gray-800); --sidebar-surfa=
ce-tertiary: var(--gray-700); --link: #7ab7ff; --link-hover: #5e83b3; }

.popover { --main-surface-primary: var(--white) !important; --main-surface-=
secondary: var(--gray-100) !important; --main-surface-tertiary: var(--gray-=
200) !important; }

.dark .popover, .dark.popover, .popover .dark { --main-surface-primary: var=
(--gray-700) !important; --main-surface-secondary: var(--gray-600) !importa=
nt; --main-surface-tertiary: var(--gray-500) !important; --text-primary: va=
r(--white) !important; --text-secondary: var(--gray-200) !important; --text=
-tertiary: var(--gray-300) !important; }

textarea:focus { border-color: inherit; box-shadow: none; outline: none; }

::-webkit-scrollbar { height: 1rem; width: 0.5rem; }

::-webkit-scrollbar:horizontal { height: 0.5rem; width: 1rem; }

::-webkit-scrollbar-track { background-color: transparent; border-radius: 9=
999px; }

::-webkit-scrollbar-thumb { --tw-border-opacity: 1; background-color: rgba(=
227, 227, 227, 0.8); border-color: rgba(255,255,255,var(--tw-border-opacity=
)); border-radius: 9999px; border-width: 1px; }

::-webkit-scrollbar-thumb:hover { --tw-bg-opacity: 1; background-color: rgb=
a(227,227,227,var(--tw-bg-opacity)); }

.dark ::-webkit-scrollbar-thumb { background-color: rgba(255, 255, 255, 0.1=
); }

.dark ::-webkit-scrollbar-thumb:hover { background-color: rgba(255, 255, 25=
5, 0.3); }

@media (min-width: 768px) {
  .scrollbar-trigger ::-webkit-scrollbar-thumb { visibility: hidden; }
  .scrollbar-trigger:hover ::-webkit-scrollbar-thumb { visibility: visible;=
 }
}

.container { width: 100%; }

@media (min-width: 640px) {
  .container { max-width: 640px; }
}

@media (min-width: 768px) {
  .container { max-width: 768px; }
}

@media (min-width: 1024px) {
  .container { max-width: 1024px; }
}

@media (min-width: 1280px) {
  .container { max-width: 1280px; }
}

@media (min-width: 1536px) {
  .container { max-width: 1536px; }
}

.prose { color: var(--tw-prose-body); max-width: 65ch; }

.prose :where([class~=3D"lead"]):not(:where([class~=3D"not-prose"] *)) { co=
lor: var(--tw-prose-lead); font-size: 1.25em; line-height: 1.6; margin-bott=
om: 1.2em; margin-top: 1.2em; }

.prose :where(a):not(:where([class~=3D"not-prose"] *)) { color: var(--tw-pr=
ose-links); font-weight: 500; text-decoration: underline; }

.prose :where(strong):not(:where([class~=3D"not-prose"] *)) { color: var(--=
tw-prose-bold); font-weight: 600; }

.prose :where(a strong):not(:where([class~=3D"not-prose"] *)) { color: inhe=
rit; }

.prose :where(blockquote strong):not(:where([class~=3D"not-prose"] *)) { co=
lor: inherit; }

.prose :where(thead th strong):not(:where([class~=3D"not-prose"] *)) { colo=
r: inherit; }

.prose :where(ol):not(:where([class~=3D"not-prose"] *)) { list-style-type: =
decimal; margin-bottom: 1.25em; margin-top: 1.25em; padding-left: 1.625em; =
}

.prose :where(ol[type=3D"A"]):not(:where([class~=3D"not-prose"] *)) { list-=
style-type: upper-alpha; }

.prose :where(ol[type=3D"a"]):not(:where([class~=3D"not-prose"] *)) { list-=
style-type: lower-alpha; }

.prose :where():not(:where([class~=3D"not-prose"] *)) { list-style-type: up=
per-alpha; }

.prose :where():not(:where([class~=3D"not-prose"] *)) { list-style-type: lo=
wer-alpha; }

.prose :where(ol[type=3D"I"]):not(:where([class~=3D"not-prose"] *)) { list-=
style-type: upper-roman; }

.prose :where(ol[type=3D"i"]):not(:where([class~=3D"not-prose"] *)) { list-=
style-type: lower-roman; }

.prose :where():not(:where([class~=3D"not-prose"] *)) { list-style-type: up=
per-roman; }

.prose :where():not(:where([class~=3D"not-prose"] *)) { list-style-type: lo=
wer-roman; }

.prose :where(ol[type=3D"1"]):not(:where([class~=3D"not-prose"] *)) { list-=
style-type: decimal; }

.prose :where(ul):not(:where([class~=3D"not-prose"] *)) { list-style-type: =
disc; margin-bottom: 1.25em; margin-top: 1.25em; padding-left: 1.625em; }

.prose :where(ol > li):not(:where([class~=3D"not-prose"] *))::marker { colo=
r: var(--tw-prose-counters); font-weight: 400; }

.prose :where(ul > li):not(:where([class~=3D"not-prose"] *))::marker { colo=
r: var(--tw-prose-bullets); }

.prose :where(hr):not(:where([class~=3D"not-prose"] *)) { border-color: var=
(--tw-prose-hr); border-top-width: 1px; margin-bottom: 3em; margin-top: 3em=
; }

.prose :where(blockquote):not(:where([class~=3D"not-prose"] *)) { border-le=
ft-color: var(--tw-prose-quote-borders); border-left-width: 0.25rem; color:=
 var(--tw-prose-quotes); font-style: normal; font-weight: 500; margin-botto=
m: 1.6em; margin-top: 1.6em; padding-left: 1em; quotes: "=E2=80=9C" "=E2=80=
=9D" "=E2=80=98" "=E2=80=99"; }

.prose :where(blockquote p:first-of-type):not(:where([class~=3D"not-prose"]=
 *))::before { content: open-quote; }

.prose :where(blockquote p:last-of-type):not(:where([class~=3D"not-prose"] =
*))::after { content: close-quote; }

.prose :where(h1):not(:where([class~=3D"not-prose"] *)) { color: var(--tw-p=
rose-headings); font-size: 2.25em; font-weight: 800; line-height: 1.11111; =
margin-bottom: 0.888889em; margin-top: 0px; }

.prose :where(h1 strong):not(:where([class~=3D"not-prose"] *)) { color: inh=
erit; font-weight: 900; }

.prose :where(h2):not(:where([class~=3D"not-prose"] *)) { color: var(--tw-p=
rose-headings); font-size: 1.5em; font-weight: 700; line-height: 1.33333; m=
argin-bottom: 1em; margin-top: 2em; }

.prose :where(h2 strong):not(:where([class~=3D"not-prose"] *)) { color: inh=
erit; font-weight: 800; }

.prose :where(h3):not(:where([class~=3D"not-prose"] *)) { color: var(--tw-p=
rose-headings); font-size: 1.25em; font-weight: 600; line-height: 1.6; marg=
in-bottom: 0.6em; margin-top: 1.6em; }

.prose :where(h3 strong):not(:where([class~=3D"not-prose"] *)) { color: inh=
erit; font-weight: 700; }

.prose :where(h4):not(:where([class~=3D"not-prose"] *)) { color: var(--tw-p=
rose-headings); font-weight: 600; line-height: 1.5; margin-bottom: 0.5em; m=
argin-top: 1.5em; }

.prose :where(h4 strong):not(:where([class~=3D"not-prose"] *)) { color: inh=
erit; font-weight: 700; }

.prose :where(img):not(:where([class~=3D"not-prose"] *)) { margin-bottom: 2=
em; margin-top: 2em; }

.prose :where(figure > *):not(:where([class~=3D"not-prose"] *)) { margin-bo=
ttom: 0px; margin-top: 0px; }

.prose :where(figcaption):not(:where([class~=3D"not-prose"] *)) { color: va=
r(--tw-prose-captions); font-size: 0.875em; line-height: 1.42857; margin-to=
p: 0.857143em; }

.prose :where(code):not(:where([class~=3D"not-prose"] *)) { color: var(--tw=
-prose-code); font-size: 0.875em; font-weight: 600; }

.prose :where(code):not(:where([class~=3D"not-prose"] *))::before { content=
: "`"; }

.prose :where(code):not(:where([class~=3D"not-prose"] *))::after { content:=
 "`"; }

.prose :where(a code):not(:where([class~=3D"not-prose"] *)) { color: inheri=
t; }

.prose :where(h1 code):not(:where([class~=3D"not-prose"] *)) { color: inher=
it; }

.prose :where(h2 code):not(:where([class~=3D"not-prose"] *)) { color: inher=
it; font-size: 0.875em; }

.prose :where(h3 code):not(:where([class~=3D"not-prose"] *)) { color: inher=
it; font-size: 0.9em; }

.prose :where(h4 code):not(:where([class~=3D"not-prose"] *)) { color: inher=
it; }

.prose :where(blockquote code):not(:where([class~=3D"not-prose"] *)) { colo=
r: inherit; }

.prose :where(thead th code):not(:where([class~=3D"not-prose"] *)) { color:=
 inherit; }

.prose :where(pre):not(:where([class~=3D"not-prose"] *)) { background-color=
: transparent; border-radius: 0.375rem; color: currentcolor; font-size: 0.8=
75em; font-weight: 400; line-height: 1.71429; margin: 0px; overflow-x: auto=
; padding: 0px; }

.prose :where(pre code):not(:where([class~=3D"not-prose"] *)) { background-=
color: transparent; border-radius: 0px; border-width: 0px; color: inherit; =
font-family: inherit; font-size: inherit; font-weight: inherit; line-height=
: inherit; padding: 0px; }

.prose :where(pre code):not(:where([class~=3D"not-prose"] *))::before { con=
tent: none; }

.prose :where(pre code):not(:where([class~=3D"not-prose"] *))::after { cont=
ent: none; }

.prose :where(table):not(:where([class~=3D"not-prose"] *)) { font-size: 0.8=
75em; line-height: 1.71429; margin-bottom: 2em; margin-top: 2em; table-layo=
ut: auto; text-align: left; width: 100%; }

.prose :where(thead):not(:where([class~=3D"not-prose"] *)) { border-bottom-=
color: var(--tw-prose-th-borders); border-bottom-width: 1px; }

.prose :where(thead th):not(:where([class~=3D"not-prose"] *)) { color: var(=
--tw-prose-headings); font-weight: 600; padding-bottom: 0.571429em; padding=
-left: 0.571429em; padding-right: 0.571429em; vertical-align: bottom; }

.prose :where(tbody tr):not(:where([class~=3D"not-prose"] *)) { border-bott=
om-color: var(--tw-prose-td-borders); border-bottom-width: 1px; }

.prose :where(tbody tr:last-child):not(:where([class~=3D"not-prose"] *)) { =
border-bottom-width: 0px; }

.prose :where(tbody td):not(:where([class~=3D"not-prose"] *)) { vertical-al=
ign: baseline; }

.prose :where(tfoot):not(:where([class~=3D"not-prose"] *)) { border-top-col=
or: var(--tw-prose-th-borders); border-top-width: 1px; }

.prose :where(tfoot td):not(:where([class~=3D"not-prose"] *)) { vertical-al=
ign: top; }

.prose { --tw-prose-body: var(--text-primary); --tw-prose-headings: var(--t=
ext-primary); --tw-prose-lead: var(--text-primary); --tw-prose-links: var(-=
-text-primary); --tw-prose-bold: var(--text-primary); --tw-prose-counters: =
var(--text-tertiary); --tw-prose-bullets: var(--text-tertiary); --tw-prose-=
hr: var(--border-xheavy); --tw-prose-quotes: var(--text-primary); --tw-pros=
e-quote-borders: #e5e7eb; --tw-prose-captions: var(--text-secondary); --tw-=
prose-code: var(--text-primary); --tw-prose-pre-code: #e5e7eb; --tw-prose-p=
re-bg: #1f2937; --tw-prose-th-borders: #d1d5db; --tw-prose-td-borders: #e5e=
7eb; --tw-prose-invert-body: var(--text-primary); --tw-prose-invert-heading=
s: var(--text-primary); --tw-prose-invert-lead: var(--text-primary); --tw-p=
rose-invert-links: var(--text-primary); --tw-prose-invert-bold: var(--text-=
primary); --tw-prose-invert-counters: var(--text-tertiary); --tw-prose-inve=
rt-bullets: var(--text-tertiary); --tw-prose-invert-hr: var(--border-xheavy=
); --tw-prose-invert-quotes: var(--text-primary); --tw-prose-invert-quote-b=
orders: #374151; --tw-prose-invert-captions: var(--text-secondary); --tw-pr=
ose-invert-code: var(--text-primary); --tw-prose-invert-pre-code: #d1d5db; =
--tw-prose-invert-pre-bg: rgba(0,0,0,.5); --tw-prose-invert-th-borders: #4b=
5563; --tw-prose-invert-td-borders: #374151; font-size: 1rem; line-height: =
1.75; }

.prose :where(p):not(:where([class~=3D"not-prose"] *)) { margin-bottom: 1.2=
5em; margin-top: 1.25em; }

.prose :where(video):not(:where([class~=3D"not-prose"] *)) { margin-bottom:=
 2em; margin-top: 2em; }

.prose :where(figure):not(:where([class~=3D"not-prose"] *)) { margin-bottom=
: 2em; margin-top: 2em; }

.prose :where(li):not(:where([class~=3D"not-prose"] *)) { margin-bottom: 0.=
5em; margin-top: 0.5em; }

.prose :where(ol > li):not(:where([class~=3D"not-prose"] *)) { padding-left=
: 0.375em; }

.prose :where(ul > li):not(:where([class~=3D"not-prose"] *)) { padding-left=
: 0.375em; }

.prose :where(.prose > ul > li p):not(:where([class~=3D"not-prose"] *)) { m=
argin-bottom: 0.75em; margin-top: 0.75em; }

.prose :where(.prose > ul > li > :first-child):not(:where([class~=3D"not-pr=
ose"] *)) { margin-top: 1.25em; }

.prose :where(.prose > ul > li > :last-child):not(:where([class~=3D"not-pro=
se"] *)) { margin-bottom: 1.25em; }

.prose :where(.prose > ol > li > :first-child):not(:where([class~=3D"not-pr=
ose"] *)) { margin-top: 1.25em; }

.prose :where(.prose > ol > li > :last-child):not(:where([class~=3D"not-pro=
se"] *)) { margin-bottom: 1.25em; }

.prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~=3D"not-prose"]=
 *)) { margin-bottom: 0.75em; margin-top: 0.75em; }

.prose :where(hr + *):not(:where([class~=3D"not-prose"] *)) { margin-top: 0=
px; }

.prose :where(h2 + *):not(:where([class~=3D"not-prose"] *)) { margin-top: 0=
px; }

.prose :where(h3 + *):not(:where([class~=3D"not-prose"] *)) { margin-top: 0=
px; }

.prose :where(h4 + *):not(:where([class~=3D"not-prose"] *)) { margin-top: 0=
px; }

.prose :where(thead th:first-child):not(:where([class~=3D"not-prose"] *)) {=
 padding-left: 0px; }

.prose :where(thead th:last-child):not(:where([class~=3D"not-prose"] *)) { =
padding-right: 0px; }

.prose :where(tbody td, tfoot td):not(:where([class~=3D"not-prose"] *)) { p=
adding: 0.571429em; }

.prose :where(tbody td:first-child, tfoot td:first-child):not(:where([class=
~=3D"not-prose"] *)) { padding-left: 0px; }

.prose :where(tbody td:last-child, tfoot td:last-child):not(:where([class~=
=3D"not-prose"] *)) { padding-right: 0px; }

.prose :where(.prose > :first-child):not(:where([class~=3D"not-prose"] *)) =
{ margin-top: 0px; }

.prose :where(.prose > :last-child):not(:where([class~=3D"not-prose"] *)) {=
 margin-bottom: 0px; }

.prose-sm :where(.prose > ul > li p):not(:where([class~=3D"not-prose"] *)) =
{ margin-bottom: 0.571429em; margin-top: 0.571429em; }

.prose-sm :where(.prose > ul > li > :first-child):not(:where([class~=3D"not=
-prose"] *)) { margin-top: 1.14286em; }

.prose-sm :where(.prose > ul > li > :last-child):not(:where([class~=3D"not-=
prose"] *)) { margin-bottom: 1.14286em; }

.prose-sm :where(.prose > ol > li > :first-child):not(:where([class~=3D"not=
-prose"] *)) { margin-top: 1.14286em; }

.prose-sm :where(.prose > ol > li > :last-child):not(:where([class~=3D"not-=
prose"] *)) { margin-bottom: 1.14286em; }

.prose-sm :where(.prose > :first-child):not(:where([class~=3D"not-prose"] *=
)) { margin-top: 0px; }

.prose-sm :where(.prose > :last-child):not(:where([class~=3D"not-prose"] *)=
) { margin-bottom: 0px; }

.prose-base :where(.prose > ul > li p):not(:where([class~=3D"not-prose"] *)=
) { margin-bottom: 0.75em; margin-top: 0.75em; }

.prose-base :where(.prose > ul > li > :first-child):not(:where([class~=3D"n=
ot-prose"] *)) { margin-top: 1.25em; }

.prose-base :where(.prose > ul > li > :last-child):not(:where([class~=3D"no=
t-prose"] *)) { margin-bottom: 1.25em; }

.prose-base :where(.prose > ol > li > :first-child):not(:where([class~=3D"n=
ot-prose"] *)) { margin-top: 1.25em; }

.prose-base :where(.prose > ol > li > :last-child):not(:where([class~=3D"no=
t-prose"] *)) { margin-bottom: 1.25em; }

.prose-base :where(.prose > :first-child):not(:where([class~=3D"not-prose"]=
 *)) { margin-top: 0px; }

.prose-base :where(.prose > :last-child):not(:where([class~=3D"not-prose"] =
*)) { margin-bottom: 0px; }

.prose-lg :where(.prose > ul > li p):not(:where([class~=3D"not-prose"] *)) =
{ margin-bottom: 0.888889em; margin-top: 0.888889em; }

.prose-lg :where(.prose > ul > li > :first-child):not(:where([class~=3D"not=
-prose"] *)) { margin-top: 1.33333em; }

.prose-lg :where(.prose > ul > li > :last-child):not(:where([class~=3D"not-=
prose"] *)) { margin-bottom: 1.33333em; }

.prose-lg :where(.prose > ol > li > :first-child):not(:where([class~=3D"not=
-prose"] *)) { margin-top: 1.33333em; }

.prose-lg :where(.prose > ol > li > :last-child):not(:where([class~=3D"not-=
prose"] *)) { margin-bottom: 1.33333em; }

.prose-lg :where(.prose > :first-child):not(:where([class~=3D"not-prose"] *=
)) { margin-top: 0px; }

.prose-lg :where(.prose > :last-child):not(:where([class~=3D"not-prose"] *)=
) { margin-bottom: 0px; }

.prose-xl :where(.prose > ul > li p):not(:where([class~=3D"not-prose"] *)) =
{ margin-bottom: 0.8em; margin-top: 0.8em; }

.prose-xl :where(.prose > ul > li > :first-child):not(:where([class~=3D"not=
-prose"] *)) { margin-top: 1.2em; }

.prose-xl :where(.prose > ul > li > :last-child):not(:where([class~=3D"not-=
prose"] *)) { margin-bottom: 1.2em; }

.prose-xl :where(.prose > ol > li > :first-child):not(:where([class~=3D"not=
-prose"] *)) { margin-top: 1.2em; }

.prose-xl :where(.prose > ol > li > :last-child):not(:where([class~=3D"not-=
prose"] *)) { margin-bottom: 1.2em; }

.prose-xl :where(.prose > :first-child):not(:where([class~=3D"not-prose"] *=
)) { margin-top: 0px; }

.prose-xl :where(.prose > :last-child):not(:where([class~=3D"not-prose"] *)=
) { margin-bottom: 0px; }

.prose-2xl :where(.prose > ul > li p):not(:where([class~=3D"not-prose"] *))=
 { margin-bottom: 0.833333em; margin-top: 0.833333em; }

.prose-2xl :where(.prose > ul > li > :first-child):not(:where([class~=3D"no=
t-prose"] *)) { margin-top: 1.33333em; }

.prose-2xl :where(.prose > ul > li > :last-child):not(:where([class~=3D"not=
-prose"] *)) { margin-bottom: 1.33333em; }

.prose-2xl :where(.prose > ol > li > :first-child):not(:where([class~=3D"no=
t-prose"] *)) { margin-top: 1.33333em; }

.prose-2xl :where(.prose > ol > li > :last-child):not(:where([class~=3D"not=
-prose"] *)) { margin-bottom: 1.33333em; }

.prose-2xl :where(.prose > :first-child):not(:where([class~=3D"not-prose"] =
*)) { margin-top: 0px; }

.prose-2xl :where(.prose > :last-child):not(:where([class~=3D"not-prose"] *=
)) { margin-bottom: 0px; }

.form-input, .form-multiselect, .form-select, .form-textarea { --tw-shadow:=
 0 0 transparent; appearance: none; background-color: rgb(255, 255, 255); b=
order-color: rgb(155, 155, 155); border-radius: 0px; border-width: 1px; fon=
t-size: 1rem; line-height: 1.5rem; padding: 0.5rem 0.75rem; }

.form-input:focus, .form-multiselect:focus, .form-select:focus, .form-texta=
rea:focus { --tw-ring-inset: var(--tw-empty,/*!*/ /*!*/); --tw-ring-offset-=
width: 0px; --tw-ring-offset-color: #fff; --tw-ring-color: #2563eb; --tw-ri=
ng-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) va=
r(--tw-ring-offset-color); --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 cal=
c(1px + var(--tw-ring-offset-width)) var(--tw-ring-color); border-color: rg=
b(37, 99, 235); box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-shad=
ow),var(--tw-shadow); outline: transparent solid 2px; outline-offset: 2px; =
}

.form-input::-webkit-input-placeholder, .form-textarea::-webkit-input-place=
holder { color: rgb(155, 155, 155); opacity: 1; }

.form-input::placeholder, .form-textarea::placeholder { color: rgb(155, 155=
, 155); opacity: 1; }

.form-input::-webkit-datetime-edit-fields-wrapper { padding: 0px; }

.form-input::-webkit-date-and-time-value { min-height: 1.5em; }

.form-input::-webkit-datetime-edit, .form-input::-webkit-datetime-edit-day-=
field, .form-input::-webkit-datetime-edit-hour-field, .form-input::-webkit-=
datetime-edit-meridiem-field, .form-input::-webkit-datetime-edit-millisecon=
d-field, .form-input::-webkit-datetime-edit-minute-field, .form-input::-web=
kit-datetime-edit-month-field, .form-input::-webkit-datetime-edit-second-fi=
eld, .form-input::-webkit-datetime-edit-year-field { padding-bottom: 0px; p=
adding-top: 0px; }

.btn { align-items: center; border-color: transparent; border-radius: 0.5re=
m; border-width: 1px; display: inline-flex; font-size: 0.875rem; font-weigh=
t: 500; line-height: 1.25rem; padding: 0.5rem 0.75rem; pointer-events: auto=
; }

.btn:focus { outline: transparent solid 2px; outline-offset: 2px; }

.btn:disabled { cursor: not-allowed; opacity: 0.5; }

.btn:active { opacity: 0.8; }

.btn-primary { --tw-bg-opacity: 1; --tw-text-opacity: 1; background-color: =
rgba(16,163,127,var(--tw-bg-opacity)); color: rgba(255,255,255,var(--tw-tex=
t-opacity)); }

.btn-primary:hover { --tw-bg-opacity: 1; background-color: rgba(26,127,100,=
var(--tw-bg-opacity)); }

.btn-primary:focus { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 va=
r(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: va=
r(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-r=
ing-color); --tw-ring-offset-width: 2px; box-shadow: var(--tw-ring-offset-s=
hadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 transparent); }

.btn-primary.focus-visible { --tw-ring-opacity: 1; --tw-ring-color: rgba(25=
,195,125,var(--tw-ring-opacity)); }

.btn-primary:focus-visible { --tw-ring-opacity: 1; --tw-ring-color: rgba(25=
,195,125,var(--tw-ring-opacity)); }

.btn-danger { --tw-bg-opacity: 1; --tw-text-opacity: 1; background-color: r=
gba(185,28,28,var(--tw-bg-opacity)); color: rgba(255,255,255,var(--tw-text-=
opacity)); }

.btn-danger:hover { --tw-bg-opacity: 1; background-color: rgba(153,27,27,va=
r(--tw-bg-opacity)); }

.btn-danger:focus { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var=
(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: var=
(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ri=
ng-color); --tw-ring-offset-width: 2px; box-shadow: var(--tw-ring-offset-sh=
adow),var(--tw-ring-shadow),var(--tw-shadow,0 0 transparent); }

.btn-danger.focus-visible { --tw-ring-opacity: 1; --tw-ring-color: rgba(220=
,38,38,var(--tw-ring-opacity)); }

.btn-danger:focus-visible { --tw-ring-opacity: 1; --tw-ring-color: rgba(220=
,38,38,var(--tw-ring-opacity)); }

.btn-danger:disabled:hover { --tw-bg-opacity: 1; background-color: rgba(185=
,28,28,var(--tw-bg-opacity)); }

.btn-danger-outline { --tw-border-opacity: 1; --tw-text-opacity: 1; border-=
color: rgba(185,28,28,var(--tw-border-opacity)); border-width: 1px; color: =
rgba(185,28,28,var(--tw-text-opacity)); }

.btn-danger-outline:focus { --tw-ring-offset-shadow: var(--tw-ring-inset) 0=
 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-sha=
dow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var=
(--tw-ring-color); --tw-ring-offset-width: 2px; box-shadow: var(--tw-ring-o=
ffset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 transparent); }

.btn-danger-outline.focus-visible { --tw-ring-opacity: 1; --tw-ring-color: =
rgba(220,38,38,var(--tw-ring-opacity)); }

.btn-danger-outline:focus-visible { --tw-ring-opacity: 1; --tw-ring-color: =
rgba(220,38,38,var(--tw-ring-opacity)); }

.btn-neutral { background-color: var(--main-surface-primary); border-color:=
 var(--border-medium); border-width: 1px; color: var(--text-primary); font-=
size: 0.875rem; line-height: 1.25rem; }

.btn-neutral:hover { background-color: var(--main-surface-secondary); }

.btn-neutral:focus { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 va=
r(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: va=
r(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-r=
ing-color); --tw-ring-offset-width: 2px; box-shadow: var(--tw-ring-offset-s=
hadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 transparent); }

.btn-neutral.focus-visible { --tw-ring-opacity: 1; --tw-ring-color: rgba(10=
3,103,103,var(--tw-ring-opacity)); }

.btn-neutral:focus-visible { --tw-ring-opacity: 1; --tw-ring-color: rgba(10=
3,103,103,var(--tw-ring-opacity)); }

.btn-dark { --tw-border-opacity: 1; --tw-bg-opacity: 1; --tw-text-opacity: =
1; background-color: rgba(38,38,38,var(--tw-bg-opacity)); border-color: rgb=
a(103,103,103,var(--tw-border-opacity)); border-width: 1px; color: rgba(255=
,255,255,var(--tw-text-opacity)); }

.btn-dark:hover { --tw-bg-opacity: 1; background-color: rgba(78,78,78,var(-=
-tw-bg-opacity)); }

.btn-light { --tw-bg-opacity: 1; --tw-text-opacity: 1; background-color: rg=
ba(236,236,236,var(--tw-bg-opacity)); color: rgba(0,0,0,var(--tw-text-opaci=
ty)); }

.btn-light:hover { --tw-bg-opacity: 1; background-color: rgba(255,255,255,v=
ar(--tw-bg-opacity)); }

.btn-high-contrast { --tw-bg-opacity: 1; --tw-text-opacity: 1; background-c=
olor: rgba(0,0,0,var(--tw-bg-opacity)); border-width: 0px; color: rgba(255,=
255,255,var(--tw-text-opacity)); }

.btn-high-contrast:hover { background-color: rgba(0, 0, 0, 0.8); }

.dark .btn-high-contrast { --tw-text-opacity: 1; background-color: var(--te=
xt-primary); color: rgba(0,0,0,var(--tw-text-opacity)); }

:is(.dark .btn-high-contrast):hover { background-color: rgba(255, 255, 255,=
 0.8); }

.btn-disabled { background-color: var(--main-surface-tertiary); color: var(=
--text-tertiary); cursor: not-allowed; }

.btn-small { padding: 0.25rem 0.5rem; }

.hide-scrollbar { scrollbar-width: none; }

.hide-scrollbar ::-webkit-scrollbar { display: none; }

.sr-only { clip: rect(0px, 0px, 0px, 0px); border-width: 0px; height: 1px; =
margin: -1px; overflow: hidden; padding: 0px; position: absolute; white-spa=
ce: nowrap; width: 1px; }

.pointer-events-none { pointer-events: none; }

.pointer-events-auto { pointer-events: auto; }

.visible { visibility: visible; }

.\!invisible { visibility: hidden !important; }

.invisible { visibility: hidden; }

.collapse { visibility: collapse; }

.static { position: static; }

.fixed { position: fixed; }

.absolute { position: absolute; }

.relative { position: relative; }

.\!sticky { position: sticky !important; }

.sticky { position: sticky; }

.inset-0 { left: 0px; right: 0px; }

.inset-0, .inset-y-0 { bottom: 0px; top: 0px; }

.-bottom-px { bottom: -1px; }

.-left-2 { left: -0.5rem; }

.-left-3 { left: -0.75rem; }

.-left-6 { left: -1.5rem; }

.-right-1 { right: -0.25rem; }

.-top-1 { top: -0.25rem; }

.-top-\[1px\], .-top-px { top: -1px; }

.bottom-0 { bottom: 0px; }

.bottom-1 { bottom: 0.25rem; }

.bottom-1\.5 { bottom: 0.375rem; }

.bottom-12 { bottom: 3rem; }

.bottom-16 { bottom: 4rem; }

.bottom-2 { bottom: 0.5rem; }

.bottom-3 { bottom: 0.75rem; }

.bottom-4 { bottom: 1rem; }

.bottom-5 { bottom: 1.25rem; }

.bottom-6 { bottom: 1.5rem; }

.bottom-\[64px\] { bottom: 64px; }

.bottom-full { bottom: 100%; }

.left-0 { left: 0px; }

.left-0\.5 { left: 0.125rem; }

.left-1 { left: 0.25rem; }

.left-1\/2 { left: 50%; }

.left-2 { left: 0.5rem; }

.left-3 { left: 0.75rem; }

.left-4 { left: 1rem; }

.left-5 { left: 1.25rem; }

.left-6 { left: 1.5rem; }

.left-\[2px\] { left: 2px; }

.left-\[7px\] { left: 7px; }

.left-full { left: 100%; }

.right-0 { right: 0px; }

.right-1 { right: 0.25rem; }

.right-1\/2 { right: 50%; }

.right-11 { right: 2.75rem; }

.right-2 { right: 0.5rem; }

.right-3 { right: 0.75rem; }

.right-4 { right: 1rem; }

.right-6 { right: 1.5rem; }

.top-0 { top: 0px; }

.top-1 { top: 0.25rem; }

.top-1\/2 { top: 50%; }

.top-11 { top: 2.75rem; }

.top-14 { top: 3.5rem; }

.top-2 { top: 0.5rem; }

.top-3 { top: 0.75rem; }

.top-4 { top: 1rem; }

.top-5 { top: 1.25rem; }

.top-6 { top: 1.5rem; }

.top-8 { top: 2rem; }

.top-\[-3px\] { top: -3px; }

.top-\[-4px\] { top: -4px; }

.top-\[-6px\] { top: -6px; }

.top-\[115px\] { top: 115px; }

.top-\[14px\] { top: 14px; }

.top-\[20px\] { top: 20px; }

.top-\[75px\] { top: 75px; }

.top-\[calc\(100\%-10px\)\] { top: calc(100% - 10px); }

.top-full { top: 100%; }

.-z-0, .z-0 { z-index: 0; }

.z-10 { z-index: 10; }

.z-20 { z-index: 20; }

.z-30 { z-index: 30; }

.z-40 { z-index: 40; }

.z-50 { z-index: 50; }

.z-\[15\] { z-index: 15; }

.z-\[17\] { z-index: 17; }

.z-\[2\] { z-index: 2; }

.z-\[4\] { z-index: 4; }

.z-\[60\] { z-index: 60; }

.col-auto { grid-column: auto; }

.col-span-1 { grid-column: span 1 / span 1; }

.col-span-3 { grid-column: span 3 / span 3; }

.col-start-2 { grid-column-start: 2; }

.row-auto { grid-row: auto; }

.row-span-4 { grid-row: span 4 / span 4; }

.row-start-2 { grid-row-start: 2; }

.float-left { float: left; }

.m-0 { margin: 0px; }

.m-1 { margin: 0.25rem; }

.m-1\.5 { margin: 0.375rem; }

.m-2 { margin: 0.5rem; }

.m-4 { margin: 1rem; }

.m-6 { margin: 1.5rem; }

.m-8 { margin: 2rem; }

.m-auto { margin: auto; }

.-mx-1 { margin-left: -0.25rem; margin-right: -0.25rem; }

.-mx-2 { margin-left: -0.5rem; margin-right: -0.5rem; }

.-mx-4 { margin-left: -1rem; margin-right: -1rem; }

.-my-0 { margin-bottom: 0px; margin-top: 0px; }

.-my-0\.5 { margin-bottom: -0.125rem; margin-top: -0.125rem; }

.-my-1 { margin-bottom: -0.25rem; margin-top: -0.25rem; }

.-my-2 { margin-bottom: -0.5rem; margin-top: -0.5rem; }

.mx-0 { margin-left: 0px; margin-right: 0px; }

.mx-1 { margin-left: 0.25rem; margin-right: 0.25rem; }

.mx-1\.5 { margin-left: 0.375rem; margin-right: 0.375rem; }

.mx-2 { margin-left: 0.5rem; margin-right: 0.5rem; }

.mx-3 { margin-left: 0.75rem; margin-right: 0.75rem; }

.mx-6 { margin-left: 1.5rem; margin-right: 1.5rem; }

.mx-8 { margin-left: 2rem; margin-right: 2rem; }

.mx-\[18px\] { margin-left: 18px; margin-right: 18px; }

.mx-auto { margin-left: auto; margin-right: auto; }

.my-0 { margin-bottom: 0px; margin-top: 0px; }

.my-1 { margin-bottom: 0.25rem; margin-top: 0.25rem; }

.my-1\.5 { margin-bottom: 0.375rem; margin-top: 0.375rem; }

.my-10 { margin-bottom: 2.5rem; margin-top: 2.5rem; }

.my-2 { margin-bottom: 0.5rem; margin-top: 0.5rem; }

.my-2\.5 { margin-bottom: 0.625rem; margin-top: 0.625rem; }

.my-3 { margin-bottom: 0.75rem; margin-top: 0.75rem; }

.my-4 { margin-bottom: 1rem; margin-top: 1rem; }

.my-6 { margin-bottom: 1.5rem; margin-top: 1.5rem; }

.my-\[2px\] { margin-bottom: 2px; margin-top: 2px; }

.my-auto { margin-bottom: auto; margin-top: auto; }

.-mb-10 { margin-bottom: -2.5rem; }

.-mb-2 { margin-bottom: -0.5rem; }

.-ml-1 { margin-left: -0.25rem; }

.-ml-2 { margin-left: -0.5rem; }

.-ml-4 { margin-left: -1rem; }

.-ml-\[1px\] { margin-left: -1px; }

.-mr-1 { margin-right: -0.25rem; }

.-mr-12 { margin-right: -3rem; }

.-mr-2 { margin-right: -0.5rem; }

.-mt-0 { margin-top: 0px; }

.-mt-0\.5 { margin-top: -0.125rem; }

.-mt-1 { margin-top: -0.25rem; }

.-mt-2 { margin-top: -0.5rem; }

.-mt-2\.5 { margin-top: -0.625rem; }

.-mt-3 { margin-top: -0.75rem; }

.-mt-4 { margin-top: -1rem; }

.mb-0 { margin-bottom: 0px; }

.mb-0\.5 { margin-bottom: 0.125rem; }

.mb-1 { margin-bottom: 0.25rem; }

.mb-1\.5 { margin-bottom: 0.375rem; }

.mb-10 { margin-bottom: 2.5rem; }

.mb-12 { margin-bottom: 3rem; }

.mb-16 { margin-bottom: 4rem; }

.mb-2 { margin-bottom: 0.5rem; }

.mb-24 { margin-bottom: 6rem; }

.mb-3 { margin-bottom: 0.75rem; }

.mb-4 { margin-bottom: 1rem; }

.mb-5 { margin-bottom: 1.25rem; }

.mb-6 { margin-bottom: 1.5rem; }

.mb-7 { margin-bottom: 1.75rem; }

.mb-8 { margin-bottom: 2rem; }

.mb-\[18px\] { margin-bottom: 18px; }

.mb-auto { margin-bottom: auto; }

.ml-0 { margin-left: 0px; }

.ml-0\.5 { margin-left: 0.125rem; }

.ml-1 { margin-left: 0.25rem; }

.ml-12 { margin-left: 3rem; }

.ml-2 { margin-left: 0.5rem; }

.ml-3 { margin-left: 0.75rem; }

.ml-4 { margin-left: 1rem; }

.ml-5 { margin-left: 1.25rem; }

.ml-6 { margin-left: 1.5rem; }

.ml-\[-2px\] { margin-left: -2px; }

.ml-\[6px\] { margin-left: 6px; }

.ml-auto { margin-left: auto; }

.mr-1 { margin-right: 0.25rem; }

.mr-2 { margin-right: 0.5rem; }

.mr-3 { margin-right: 0.75rem; }

.mr-4 { margin-right: 1rem; }

.mr-8 { margin-right: 2rem; }

.mr-auto { margin-right: auto; }

.mr-px { margin-right: 1px; }

.mt-0 { margin-top: 0px; }

.mt-0\.5 { margin-top: 0.125rem; }

.mt-1 { margin-top: 0.25rem; }

.mt-10 { margin-top: 2.5rem; }

.mt-2 { margin-top: 0.5rem; }

.mt-3 { margin-top: 0.75rem; }

.mt-4 { margin-top: 1rem; }

.mt-5 { margin-top: 1.25rem; }

.mt-6 { margin-top: 1.5rem; }

.mt-7 { margin-top: 1.75rem; }

.mt-8 { margin-top: 2rem; }

.mt-\[-0\.75px\] { margin-top: -0.75px; }

.mt-\[-2px\] { margin-top: -2px; }

.mt-\[-3px\] { margin-top: -3px; }

.mt-auto { margin-top: auto; }

.box-content { box-sizing: content-box; }

.line-clamp-1 { -webkit-line-clamp: 1; }

.line-clamp-1, .line-clamp-2 { -webkit-box-orient: vertical; display: -webk=
it-box; overflow: hidden; }

.line-clamp-2 { -webkit-line-clamp: 2; }

.line-clamp-3 { -webkit-line-clamp: 3; }

.line-clamp-3, .line-clamp-6 { -webkit-box-orient: vertical; display: -webk=
it-box; overflow: hidden; }

.line-clamp-6 { -webkit-line-clamp: 6; }

.block { display: block; }

.inline-block { display: inline-block; }

.inline { display: inline; }

.flex { display: flex; }

.inline-flex { display: inline-flex; }

.table { display: table; }

.flow-root { display: flow-root; }

.grid { display: grid; }

.contents { display: contents; }

.hidden { display: none; }

.aspect-\[4\/7\] { aspect-ratio: 4 / 7; }

.aspect-\[7\/4\] { aspect-ratio: 7 / 4; }

.aspect-auto { aspect-ratio: auto; }

.aspect-square { aspect-ratio: 1 / 1; }

.\!h-20 { height: 5rem !important; }

.\!h-fit { height: fit-content !important; }

.h-0 { height: 0px; }

.h-1 { height: 0.25rem; }

.h-1\.5 { height: 0.375rem; }

.h-1\/4 { height: 25%; }

.h-10 { height: 2.5rem; }

.h-11 { height: 2.75rem; }

.h-12 { height: 3rem; }

.h-14 { height: 3.5rem; }

.h-16 { height: 4rem; }

.h-2 { height: 0.5rem; }

.h-2\.5 { height: 0.625rem; }

.h-2\/3 { height: 66.6667%; }

.h-20 { height: 5rem; }

.h-24 { height: 6rem; }

.h-3 { height: 0.75rem; }

.h-3\.5 { height: 0.875rem; }

.h-32 { height: 8rem; }

.h-4 { height: 1rem; }

.h-4\/5 { height: 80%; }

.h-40 { height: 10rem; }

.h-44 { height: 11rem; }

.h-48 { height: 12rem; }

.h-5 { height: 1.25rem; }

.h-52 { height: 13rem; }

.h-6 { height: 1.5rem; }

.h-64 { height: 16rem; }

.h-7 { height: 1.75rem; }

.h-8 { height: 2rem; }

.h-9 { height: 2.25rem; }

.h-96 { height: 24rem; }

.h-\[100dvh\] { height: 100dvh; }

.h-\[100vh\] { height: 100vh; }

.h-\[104px\] { height: 104px; }

.h-\[11px\] { height: 11px; }

.h-\[1200px\] { height: 1200px; }

.h-\[12px\] { height: 12px; }

.h-\[14px\] { height: 14px; }

.h-\[15px\] { height: 15px; }

.h-\[16px\] { height: 16px; }

.h-\[18px\] { height: 18px; }

.h-\[19px\] { height: 19px; }

.h-\[1px\] { height: 1px; }

.h-\[20px\] { height: 20px; }

.h-\[22px\] { height: 22px; }

.h-\[23px\] { height: 23px; }

.h-\[24px\] { height: 24px; }

.h-\[24rem\] { height: 24rem; }

.h-\[2px\] { height: 2px; }

.h-\[30px\] { height: 30px; }

.h-\[36px\] { height: 36px; }

.h-\[3px\] { height: 3px; }

.h-\[400px\] { height: 400px; }

.h-\[404px\] { height: 404px; }

.h-\[42px\] { height: 42px; }

.h-\[50px\] { height: 50px; }

.h-\[52px\] { height: 52px; }

.h-\[600px\] { height: 600px; }

.h-\[60px\] { height: 60px; }

.h-\[70px\] { height: 70px; }

.h-\[70vh\] { height: 70vh; }

.h-\[72px\] { height: 72px; }

.h-\[80vh\] { height: 80vh; }

.h-\[calc\(100vh-25rem\)\] { height: calc(-25rem + 100vh); }

.h-auto { height: auto; }

.h-fit { height: fit-content; }

.h-full { height: 100%; }

.h-px { height: 1px; }

.h-screen { height: 100vh; }

.\!max-h-\[100vh\] { max-height: 100vh !important; }

.max-h-0 { max-height: 0px; }

.max-h-32 { max-height: 8rem; }

.max-h-40 { max-height: 10rem; }

.max-h-60 { max-height: 15rem; }

.max-h-64 { max-height: 16rem; }

.max-h-72 { max-height: 18rem; }

.max-h-\[28rem\] { max-height: 28rem; }

.max-h-\[60vh\] { max-height: 60vh; }

.max-h-\[6rem\] { max-height: 6rem; }

.max-h-\[75vh\] { max-height: 75vh; }

.max-h-\[80vh\] { max-height: 80vh; }

.max-h-\[85vh\] { max-height: 85vh; }

.max-h-\[calc\(100vh-150px\)\] { max-height: calc(-150px + 100vh); }

.max-h-\[calc\(100vh-300px\)\] { max-height: calc(-300px + 100vh); }

.max-h-\[min\(calc\(58vh-127px\)\,400px\)\] { max-height: min(-127px + 58vh=
, 400px); }

.min-h-0 { min-height: 0px; }

.min-h-\[1\.5rem\] { min-height: 1.5rem; }

.min-h-\[20px\] { min-height: 20px; }

.min-h-\[36px\] { min-height: 36px; }

.min-h-\[40px\] { min-height: 40px; }

.min-h-\[44px\] { min-height: 44px; }

.min-h-\[50vh\] { min-height: 50vh; }

.min-h-\[64px\] { min-height: 64px; }

.min-h-\[71px\] { min-height: 71px; }

.min-h-\[75vh\] { min-height: 75vh; }

.min-h-\[80vh\] { min-height: 80vh; }

.min-h-\[96px\] { min-height: 96px; }

.min-h-fit { min-height: fit-content; }

.min-h-full { min-height: 100%; }

.min-h-screen { min-height: 100vh; }

.\!w-20 { width: 5rem !important; }

.w-0 { width: 0px; }

.w-1 { width: 0.25rem; }

.w-1\.5 { width: 0.375rem; }

.w-1\/2 { width: 50%; }

.w-1\/3 { width: 33.3333%; }

.w-1\/4 { width: 25%; }

.w-1\/5 { width: 20%; }

.w-10 { width: 2.5rem; }

.w-11 { width: 2.75rem; }

.w-12 { width: 3rem; }

.w-14 { width: 3.5rem; }

.w-16 { width: 4rem; }

.w-2 { width: 0.5rem; }

.w-2\/3 { width: 66.6667%; }

.w-20 { width: 5rem; }

.w-24 { width: 6rem; }

.w-28 { width: 7rem; }

.w-3 { width: 0.75rem; }

.w-3\.5 { width: 0.875rem; }

.w-32 { width: 8rem; }

.w-36 { width: 9rem; }

.w-4 { width: 1rem; }

.w-4\/5 { width: 80%; }

.w-40 { width: 10rem; }

.w-48 { width: 12rem; }

.w-5 { width: 1.25rem; }

.w-6 { width: 1.5rem; }

.w-60 { width: 15rem; }

.w-64 { width: 16rem; }

.w-7 { width: 1.75rem; }

.w-8 { width: 2rem; }

.w-80 { width: 20rem; }

.w-9 { width: 2.25rem; }

.w-96 { width: 24rem; }

.w-\[103px\] { width: 103px; }

.w-\[11px\] { width: 11px; }

.w-\[120px\] { width: 120px; }

.w-\[14px\] { width: 14px; }

.w-\[15px\] { width: 15px; }

.w-\[16px\] { width: 16px; }

.w-\[184px\] { width: 184px; }

.w-\[18px\] { width: 18px; }

.w-\[1px\] { width: 1px; }

.w-\[209px\] { width: 209px; }

.w-\[218px\] { width: 218px; }

.w-\[23px\] { width: 23px; }

.w-\[24px\] { width: 24px; }

.w-\[25vw\] { width: 25vw; }

.w-\[260px\] { width: 260px; }

.w-\[30px\] { width: 30px; }

.w-\[32px\] { width: 32px; }

.w-\[3px\] { width: 3px; }

.w-\[42px\] { width: 42px; }

.w-\[70px\] { width: 70px; }

.w-\[860px\] { width: 860px; }

.w-\[88px\] { width: 88px; }

.w-\[90px\] { width: 90px; }

.w-\[90vw\] { width: 90vw; }

.w-\[960px\] { width: 960px; }

.w-\[calc\(\(100\%-768px\)\/2\)\] { width: calc(50% - 384px); }

.w-\[calc\(100\%-50px\)\] { width: calc(100% - 50px); }

.w-\[var\(--radix-select-trigger-width\)\] { width: var(--radix-select-trig=
ger-width); }

.w-auto { width: auto; }

.w-fit { width: fit-content; }

.w-full { width: 100%; }

.w-px { width: 1px; }

.w-screen { width: 100vw; }

.min-w-0 { min-width: 0px; }

.min-w-\[100px\] { min-width: 100px; }

.min-w-\[180px\] { min-width: 180px; }

.min-w-\[200px\] { min-width: 200px; }

.min-w-\[220px\] { min-width: 220px; }

.min-w-\[250px\] { min-width: 250px; }

.min-w-\[25vw\] { min-width: 25vw; }

.min-w-\[32px\] { min-width: 32px; }

.min-w-\[340px\] { min-width: 340px; }

.min-w-\[50px\] { min-width: 50px; }

.min-w-\[80vw\] { min-width: 80vw; }

.min-w-\[8rem\] { min-width: 8rem; }

.min-w-fit { min-width: fit-content; }

.min-w-full { min-width: 100%; }

.\!max-w-\[80vw\] { max-width: 80vw !important; }

.max-w-2xl { max-width: 42rem; }

.max-w-3xl { max-width: 48rem; }

.max-w-4xl { max-width: 56rem; }

.max-w-5xl { max-width: 64rem; }

.max-w-6xl { max-width: 72rem; }

.max-w-7xl { max-width: 80rem; }

.max-w-\[100vw\] { max-width: 100vw; }

.max-w-\[200px\] { max-width: 200px; }

.max-w-\[220px\] { max-width: 220px; }

.max-w-\[240px\] { max-width: 240px; }

.max-w-\[372px\] { max-width: 372px; }

.max-w-\[400px\] { max-width: 400px; }

.max-w-\[440px\] { max-width: 440px; }

.max-w-\[480px\] { max-width: 480px; }

.max-w-\[550px\] { max-width: 550px; }

.max-w-\[560px\] { max-width: 560px; }

.max-w-\[650px\] { max-width: 650px; }

.max-w-\[90vw\] { max-width: 90vw; }

.max-w-\[96vw\] { max-width: 96vw; }

.max-w-\[calc\(800px\+24px\)\] { max-width: 824px; }

.max-w-full { max-width: 100%; }

.max-w-lg { max-width: 32rem; }

.max-w-md { max-width: 28rem; }

.max-w-sm { max-width: 24rem; }

.max-w-xl { max-width: 36rem; }

.max-w-xs { max-width: 20rem; }

.flex-1 { flex: 1 1 0%; }

.flex-auto { flex: 1 1 auto; }

.flex-initial { flex: 0 1 auto; }

.flex-none { flex: 0 0 auto; }

.flex-shrink { flex-shrink: 1; }

.flex-shrink-0 { flex-shrink: 0; }

.shrink { flex-shrink: 1; }

.shrink-0 { flex-shrink: 0; }

.flex-grow { flex-grow: 1; }

.flex-grow-0 { flex-grow: 0; }

.grow { flex-grow: 1; }

.table-auto { table-layout: auto; }

.table-fixed { table-layout: fixed; }

.border-separate { border-collapse: separate; }

.border-spacing-0 { --tw-border-spacing-x: 0px; --tw-border-spacing-y: 0px;=
 border-spacing: var(--tw-border-spacing-x) var(--tw-border-spacing-y); }

.origin-\[50\%_50\%\] { transform-origin: 50% 50%; }

.-translate-x-1\/2 { --tw-translate-x: -50%; }

.-translate-x-1\/2, .-translate-x-full { transform: translate(var(--tw-tran=
slate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-ske=
w-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-sca=
le-y)); }

.-translate-x-full { --tw-translate-x: -100%; }

.-translate-y-1\/2 { --tw-translate-y: -50%; }

.-translate-y-1\/2, .-translate-y-full { transform: translate(var(--tw-tran=
slate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-ske=
w-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-sca=
le-y)); }

.-translate-y-full { --tw-translate-y: -100%; }

.translate-x-0 { --tw-translate-x: 0px; }

.translate-x-0, .translate-x-0\.5 { transform: translate(var(--tw-translate=
-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x))=
 skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)=
); }

.translate-x-0\.5 { --tw-translate-x: 0.125rem; }

.translate-x-1 { --tw-translate-x: 0.25rem; }

.translate-x-1, .translate-x-1\/2 { transform: translate(var(--tw-translate=
-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x))=
 skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)=
); }

.translate-x-1\/2 { --tw-translate-x: 50%; }

.translate-x-\[-calc\(100\%\+4px\)\] { --tw-translate-x: -calc(100% + 4px);=
 }

.translate-x-\[-calc\(100\%\+4px\)\], .translate-x-full { transform: transl=
ate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) s=
kewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) sc=
aleY(var(--tw-scale-y)); }

.translate-x-full { --tw-translate-x: 100%; }

.translate-y-0 { --tw-translate-y: 0px; }

.translate-y-0, .translate-y-1 { transform: translate(var(--tw-translate-x)=
,var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) sk=
ewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); =
}

.translate-y-1 { --tw-translate-y: 0.25rem; }

.translate-y-3 { --tw-translate-y: 0.75rem; }

.translate-y-3, .translate-y-\[-8px\] { transform: translate(var(--tw-trans=
late-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew=
-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scal=
e-y)); }

.translate-y-\[-8px\] { --tw-translate-y: -8px; }

.translate-y-\[calc\(-50\%-1em\)\] { --tw-translate-y: calc(-50% - 1em); }

.translate-y-\[calc\(-50\%-1em\)\], .translate-y-\[calc\(-50\%-1em\+16px\)\=
] { transform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotat=
e(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(=
var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.translate-y-\[calc\(-50\%-1em\+16px\)\] { --tw-translate-y: calc(-50% - 1e=
m + 16px); }

.translate-y-\[calc\(-50\%-1em-16px\)\] { --tw-translate-y: calc(-50% - 1em=
 - 16px); }

.translate-y-\[calc\(-50\%-1em-16px\)\], .translate-y-\[calc\(100\%-71px\)\=
] { transform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotat=
e(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(=
var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.translate-y-\[calc\(100\%-71px\)\] { --tw-translate-y: calc(100% - 71px); =
}

.-rotate-180 { --tw-rotate: -180deg; }

.-rotate-180, .-rotate-90 { transform: translate(var(--tw-translate-x),var(=
--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(v=
ar(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.-rotate-90 { --tw-rotate: -90deg; }

.rotate-180 { --tw-rotate: 180deg; }

.rotate-180, .rotate-45 { transform: translate(var(--tw-translate-x),var(--=
tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var=
(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.rotate-45 { --tw-rotate: 45deg; }

.rotate-90 { --tw-rotate: 90deg; }

.rotate-90, .scale-0 { transform: translate(var(--tw-translate-x),var(--tw-=
translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--=
tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.scale-0 { --tw-scale-x: 0; --tw-scale-y: 0; }

.-scale-x-100 { --tw-scale-x: -1; }

.-scale-x-100, .scale-x-75 { transform: translate(var(--tw-translate-x),var=
(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(=
var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.scale-x-75 { --tw-scale-x: .75; }

.transform { transform: translate(var(--tw-translate-x),var(--tw-translate-=
y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)=
) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

@-webkit-keyframes pulse {=20
  50% { opacity: 0.5; }
}

@keyframes pulse {=20
  50% { opacity: 0.5; }
}

.animate-pulse { animation: 2s cubic-bezier(0.4, 0, 0.6, 1) 0s infinite nor=
mal none running pulse; }

@-webkit-keyframes slideLeftAndFade {=20
  0% { opacity: 0; transform: translateX(2px); }
  100% { opacity: 1; transform: translateX(0px); }
}

.animate-slideLeftAndFade { animation: 0.4s cubic-bezier(0.16, 1, 0.3, 1) 0=
s 1 normal none running slideLeftAndFade; }

@-webkit-keyframes spin {=20
  100% { transform: rotate(1turn); }
}

@keyframes spin {=20
  100% { transform: rotate(1turn); }
}

.animate-spin { animation: 1s linear 0s infinite normal none running spin; =
}

.cursor-auto { cursor: auto; }

.cursor-default { cursor: default; }

.cursor-none { cursor: none; }

.cursor-not-allowed { cursor: not-allowed; }

.cursor-pointer { cursor: pointer; }

.cursor-progress { cursor: progress; }

.cursor-wait { cursor: wait; }

.select-none { user-select: none; }

.resize-none { resize: none; }

.resize { resize: both; }

.scroll-m-5 { scroll-margin: 1.25rem; }

.scroll-mx-5 { scroll-margin-left: 1.25rem; scroll-margin-right: 1.25rem; }

.scroll-mt-28 { scroll-margin-top: 7rem; }

.list-decimal { list-style-type: decimal; }

.list-disc { list-style-type: disc; }

.list-none { list-style-type: none; }

.appearance-none { appearance: none; }

.grid-flow-row { grid-auto-flow: row; }

.grid-flow-col { grid-auto-flow: column; }

.grid-cols-1 { grid-template-columns: repeat(1, minmax(0px, 1fr)); }

.grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }

.grid-cols-3 { grid-template-columns: repeat(3, minmax(0px, 1fr)); }

.grid-cols-\[10px_1fr_10px\] { grid-template-columns: 10px 1fr 10px; }

.grid-cols-\[auto_max-content\] { grid-template-columns: auto max-content; =
}

.grid-cols-\[repeat\(auto-fit\,minmax\(250px\,1fr\)\)\] { grid-template-col=
umns: repeat(auto-fit, minmax(250px, 1fr)); }

.grid-rows-2 { grid-template-rows: repeat(2, minmax(0px, 1fr)); }

.grid-rows-\[minmax\(10px\,_1fr\)_auto_minmax\(10px\,_1fr\)\] { grid-templa=
te-rows: minmax(10px, 1fr) auto minmax(10px, 1fr); }

.flex-row { flex-direction: row; }

.flex-col { flex-direction: column; }

.flex-col-reverse { flex-direction: column-reverse; }

.flex-wrap { flex-wrap: wrap; }

.flex-wrap-reverse { flex-wrap: wrap-reverse; }

.content-center { align-content: center; }

.items-start { align-items: flex-start; }

.items-end { align-items: flex-end; }

.items-center { align-items: center; }

.items-baseline { align-items: baseline; }

.items-stretch { align-items: stretch; }

.justify-start { justify-content: flex-start; }

.justify-end { justify-content: flex-end; }

.justify-center { justify-content: center; }

.justify-between { justify-content: space-between; }

.justify-around { justify-content: space-around; }

.justify-stretch { justify-content: stretch; }

.\!gap-1 { gap: 0.25rem !important; }

.gap-0 { gap: 0px; }

.gap-0\.5 { gap: 0.125rem; }

.gap-1 { gap: 0.25rem; }

.gap-1\.5 { gap: 0.375rem; }

.gap-10 { gap: 2.5rem; }

.gap-2 { gap: 0.5rem; }

.gap-2\.5 { gap: 0.625rem; }

.gap-3 { gap: 0.75rem; }

.gap-4 { gap: 1rem; }

.gap-5 { gap: 1.25rem; }

.gap-6 { gap: 1.5rem; }

.gap-\[6px\] { gap: 6px; }

.gap-x-1 { column-gap: 0.25rem; }

.gap-x-1\.5 { column-gap: 0.375rem; }

.gap-x-3 { column-gap: 0.75rem; }

.gap-x-4 { column-gap: 1rem; }

.gap-x-9 { column-gap: 2.25rem; }

.gap-y-1 { row-gap: 0.25rem; }

.gap-y-2 { row-gap: 0.5rem; }

.-space-y-px > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; m=
argin-bottom: calc(-1px*var(--tw-space-y-reverse)); margin-top: calc(-1px*(=
1 - var(--tw-space-y-reverse))); }

.space-x-1 > :not([hidden]) ~ :not([hidden]) { --tw-space-x-reverse: 0; mar=
gin-left: calc(.25rem*(1 - var(--tw-space-x-reverse))); margin-right: calc(=
.25rem*var(--tw-space-x-reverse)); }

.space-x-1\.5 > :not([hidden]) ~ :not([hidden]) { --tw-space-x-reverse: 0; =
margin-left: calc(.375rem*(1 - var(--tw-space-x-reverse))); margin-right: c=
alc(.375rem*var(--tw-space-x-reverse)); }

.space-x-2 > :not([hidden]) ~ :not([hidden]) { --tw-space-x-reverse: 0; mar=
gin-left: calc(.5rem*(1 - var(--tw-space-x-reverse))); margin-right: calc(.=
5rem*var(--tw-space-x-reverse)); }

.space-x-4 > :not([hidden]) ~ :not([hidden]) { --tw-space-x-reverse: 0; mar=
gin-left: calc(1rem*(1 - var(--tw-space-x-reverse))); margin-right: calc(1r=
em*var(--tw-space-x-reverse)); }

.space-y-1 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-bottom: calc(.25rem*var(--tw-space-y-reverse)); margin-top: calc(.25rem=
*(1 - var(--tw-space-y-reverse))); }

.space-y-1\.5 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; =
margin-bottom: calc(.375rem*var(--tw-space-y-reverse)); margin-top: calc(.3=
75rem*(1 - var(--tw-space-y-reverse))); }

.space-y-2 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-bottom: calc(.5rem*var(--tw-space-y-reverse)); margin-top: calc(.5rem*(=
1 - var(--tw-space-y-reverse))); }

.space-y-3 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-bottom: calc(.75rem*var(--tw-space-y-reverse)); margin-top: calc(.75rem=
*(1 - var(--tw-space-y-reverse))); }

.space-y-4 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-bottom: calc(1rem*var(--tw-space-y-reverse)); margin-top: calc(1rem*(1 =
- var(--tw-space-y-reverse))); }

.space-y-8 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; mar=
gin-bottom: calc(2rem*var(--tw-space-y-reverse)); margin-top: calc(2rem*(1 =
- var(--tw-space-y-reverse))); }

.divide-x > :not([hidden]) ~ :not([hidden]) { --tw-divide-x-reverse: 0; bor=
der-left-width: calc(1px*(1 - var(--tw-divide-x-reverse))); border-right-wi=
dth: calc(1px*var(--tw-divide-x-reverse)); }

.divide-y > :not([hidden]) ~ :not([hidden]) { --tw-divide-y-reverse: 0; bor=
der-bottom-width: calc(1px*var(--tw-divide-y-reverse)); border-top-width: c=
alc(1px*(1 - var(--tw-divide-y-reverse))); }

.divide-gray-200 > :not([hidden]) ~ :not([hidden]) { --tw-divide-opacity: 1=
; border-color: rgba(227,227,227,var(--tw-divide-opacity)); }

.divide-token-border-light > :not([hidden]) ~ :not([hidden]) { border-color=
: var(--border-light); }

.divide-white\/10 > :not([hidden]) ~ :not([hidden]) { border-color: rgba(25=
5, 255, 255, 0.1); }

.self-start { align-self: flex-start; }

.self-end { align-self: flex-end; }

.self-center { align-self: center; }

.self-stretch { align-self: stretch; }

.justify-self-start { justify-self: start; }

.overflow-auto { overflow: auto; }

.overflow-hidden { overflow: hidden; }

.overflow-visible { overflow: visible; }

.overflow-scroll { overflow: scroll; }

.overflow-x-auto { overflow-x: auto; }

.overflow-y-auto { overflow-y: auto; }

.overflow-x-hidden { overflow-x: hidden; }

.overflow-y-hidden { overflow-y: hidden; }

.overflow-x-clip { overflow-x: clip; }

.overflow-y-scroll { overflow-y: scroll; }

.scroll-smooth { scroll-behavior: smooth; }

.truncate { overflow: hidden; white-space: nowrap; }

.text-ellipsis, .truncate { text-overflow: ellipsis; }

.whitespace-nowrap { white-space: nowrap; }

.\!whitespace-pre { white-space: pre !important; }

.whitespace-pre-line { white-space: pre-line; }

.\!whitespace-pre-wrap { white-space: pre-wrap !important; }

.whitespace-pre-wrap { white-space: pre-wrap; }

.break-words { overflow-wrap: break-word; }

.break-all { word-break: break-all; }

.\!rounded { border-radius: 0.25rem !important; }

.\!rounded-lg { border-radius: 0.5rem !important; }

.rounded { border-radius: 0.25rem; }

.rounded-2xl { border-radius: 1rem; }

.rounded-3xl { border-radius: 1.5rem; }

.rounded-\[2px\] { border-radius: 2px; }

.rounded-\[38px\] { border-radius: 38px; }

.rounded-\[5px\] { border-radius: 5px; }

.rounded-\[6px\] { border-radius: 6px; }

.rounded-full { border-radius: 9999px; }

.rounded-lg { border-radius: 0.5rem; }

.rounded-md { border-radius: 0.375rem; }

.rounded-none { border-radius: 0px; }

.rounded-sm { border-radius: 0.125rem; }

.rounded-xl { border-radius: 0.75rem; }

.rounded-b-lg { border-bottom-left-radius: 0.5rem; border-bottom-right-radi=
us: 0.5rem; }

.rounded-l-full { border-bottom-left-radius: 9999px; border-top-left-radius=
: 9999px; }

.rounded-l-md { border-bottom-left-radius: 0.375rem; border-top-left-radius=
: 0.375rem; }

.rounded-l-none { border-bottom-left-radius: 0px; border-top-left-radius: 0=
px; }

.rounded-r-full { border-bottom-right-radius: 9999px; border-top-right-radi=
us: 9999px; }

.rounded-r-md { border-bottom-right-radius: 0.375rem; border-top-right-radi=
us: 0.375rem; }

.rounded-r-none { border-bottom-right-radius: 0px; border-top-right-radius:=
 0px; }

.rounded-t-2xl { border-top-left-radius: 1rem; border-top-right-radius: 1re=
m; }

.rounded-t-\[30px\] { border-top-left-radius: 30px; border-top-right-radius=
: 30px; }

.rounded-t-md { border-top-left-radius: 0.375rem; border-top-right-radius: =
0.375rem; }

.rounded-t-none { border-top-left-radius: 0px; border-top-right-radius: 0px=
; }

.rounded-t-xl { border-top-left-radius: 0.75rem; border-top-right-radius: 0=
.75rem; }

.rounded-br-full { border-bottom-right-radius: 9999px; }

.rounded-br-sm { border-bottom-right-radius: 0.125rem; }

.border { border-width: 1px; }

.border-0 { border-width: 0px; }

.border-2 { border-width: 2px; }

.border-\[3px\] { border-width: 3px; }

.border-y { border-top-width: 1px; }

.border-b, .border-y { border-bottom-width: 1px; }

.border-b-0 { border-bottom-width: 0px; }

.border-b-2 { border-bottom-width: 2px; }

.border-b-\[0\.5px\] { border-bottom-width: 0.5px; }

.border-l { border-left-width: 1px; }

.border-l-0 { border-left-width: 0px; }

.border-l-2 { border-left-width: 2px; }

.border-l-4 { border-left-width: 4px; }

.border-l-8 { border-left-width: 8px; }

.border-r { border-right-width: 1px; }

.border-r-8 { border-right-width: 8px; }

.border-t { border-top-width: 1px; }

.border-t-0 { border-top-width: 0px; }

.border-t-8 { border-top-width: 8px; }

.border-dashed { border-style: dashed; }

.border-none { border-style: none; }

.border-\[rgba\(0\,0\,0\,0\.1\)\] { border-color: rgba(0, 0, 0, 0.1); }

.border-black { --tw-border-opacity: 1; border-color: rgba(0,0,0,var(--tw-b=
order-opacity)); }

.border-black\/10 { border-color: rgba(0, 0, 0, 0.1); }

.border-black\/20 { border-color: rgba(0, 0, 0, 0.2); }

.border-black\/30 { border-color: rgba(0, 0, 0, 0.3); }

.border-black\/5 { border-color: rgba(0, 0, 0, 0.05); }

.border-gray-100 { --tw-border-opacity: 1; border-color: rgba(236,236,236,v=
ar(--tw-border-opacity)); }

.border-gray-200 { --tw-border-opacity: 1; border-color: rgba(227,227,227,v=
ar(--tw-border-opacity)); }

.border-gray-300 { --tw-border-opacity: 1; border-color: rgba(205,205,205,v=
ar(--tw-border-opacity)); }

.border-gray-400 { --tw-border-opacity: 1; border-color: rgba(180,180,180,v=
ar(--tw-border-opacity)); }

.border-gray-500 { --tw-border-opacity: 1; border-color: rgba(155,155,155,v=
ar(--tw-border-opacity)); }

.border-gray-700 { --tw-border-opacity: 1; border-color: rgba(78,78,78,var(=
--tw-border-opacity)); }

.border-gray-950 { --tw-border-opacity: 1; border-color: rgba(13,13,13,var(=
--tw-border-opacity)); }

.border-green-500 { --tw-border-opacity: 1; border-color: rgba(25,195,125,v=
ar(--tw-border-opacity)); }

.border-green-600 { --tw-border-opacity: 1; border-color: rgba(16,163,127,v=
ar(--tw-border-opacity)); }

.border-orange-400 { --tw-border-opacity: 1; border-color: rgba(255,128,82,=
var(--tw-border-opacity)); }

.border-orange-500 { --tw-border-opacity: 1; border-color: rgba(224,108,43,=
var(--tw-border-opacity)); }

.border-red-500 { --tw-border-opacity: 1; border-color: rgba(239,68,68,var(=
--tw-border-opacity)); }

.border-red-600 { --tw-border-opacity: 1; border-color: rgba(220,38,38,var(=
--tw-border-opacity)); }

.border-token-border-heavy { border-color: var(--border-heavy); }

.border-token-border-light { border-color: var(--border-light); }

.border-token-border-medium { border-color: var(--border-medium); }

.border-token-border-xheavy { border-color: var(--border-xheavy); }

.border-token-main-surface-secondary { border-color: var(--main-surface-sec=
ondary); }

.border-token-main-surface-tertiary { border-color: var(--main-surface-tert=
iary); }

.border-token-text-primary { border-color: var(--text-primary); }

.border-token-text-secondary { border-color: var(--text-secondary); }

.border-token-text-tertiary { border-color: var(--text-tertiary); }

.border-transparent { border-color: transparent; }

.border-white { --tw-border-opacity: 1; border-color: rgba(255,255,255,var(=
--tw-border-opacity)); }

.border-white\/10 { border-color: rgba(255, 255, 255, 0.1); }

.border-white\/20 { border-color: rgba(255, 255, 255, 0.2); }

.border-y-token-border-medium { border-bottom-color: var(--border-medium); =
border-top-color: var(--border-medium); }

.border-l-transparent { border-left-color: transparent; }

.border-r-transparent { border-right-color: transparent; }

.border-t-\[\#0077FF\] { --tw-border-opacity: 1; border-top-color: rgba(0,1=
19,255,var(--tw-border-opacity)); }

.\!bg-brand-purple { --tw-bg-opacity: 1 !important; background-color: rgba(=
171,104,255,var(--tw-bg-opacity)) !important; }

.\!bg-gray-200 { --tw-bg-opacity: 1 !important; background-color: rgba(227,=
227,227,var(--tw-bg-opacity)) !important; }

.\!bg-token-main-surface-primary { background-color: var(--main-surface-pri=
mary) !important; }

.\!bg-token-text-primary { background-color: var(--text-primary) !important=
; }

.\!bg-transparent { background-color: transparent !important; }

.bg-\[\#0077FF\] { --tw-bg-opacity: 1; background-color: rgba(0,119,255,var=
(--tw-bg-opacity)); }

.bg-\[\#10A37F\] { --tw-bg-opacity: 1; background-color: rgba(16,163,127,va=
r(--tw-bg-opacity)); }

.bg-\[\#3C46FF\] { --tw-bg-opacity: 1; background-color: rgba(60,70,255,var=
(--tw-bg-opacity)); }

.bg-\[\#4046EC\] { --tw-bg-opacity: 1; background-color: rgba(64,70,236,var=
(--tw-bg-opacity)); }

.bg-\[\#B161FD\] { --tw-bg-opacity: 1; background-color: rgba(177,97,253,va=
r(--tw-bg-opacity)); }

.bg-\[\#F8CA27\] { --tw-bg-opacity: 1; background-color: rgba(248,202,39,va=
r(--tw-bg-opacity)); }

.bg-\[\#FF5588\] { --tw-bg-opacity: 1; background-color: rgba(255,85,136,va=
r(--tw-bg-opacity)); }

.bg-\[\#FF6E3C\] { --tw-bg-opacity: 1; background-color: rgba(255,110,60,va=
r(--tw-bg-opacity)); }

.bg-black { --tw-bg-opacity: 1; background-color: rgba(0,0,0,var(--tw-bg-op=
acity)); }

.bg-black\/5 { background-color: rgba(0, 0, 0, 0.05); }

.bg-black\/50 { background-color: rgba(0, 0, 0, 0.5); }

.bg-black\/90 { background-color: rgba(0, 0, 0, 0.9); }

.bg-black\/\[\.04\] { background-color: rgba(0, 0, 0, 0.04); }

.bg-black\/\[\.08\] { background-color: rgba(0, 0, 0, 0.08); }

.bg-black\/\[\.12\] { background-color: rgba(0, 0, 0, 0.12); }

.bg-blue-100 { --tw-bg-opacity: 1; background-color: rgba(219,234,254,var(-=
-tw-bg-opacity)); }

.bg-blue-200 { --tw-bg-opacity: 1; background-color: rgba(191,219,254,var(-=
-tw-bg-opacity)); }

.bg-blue-300 { --tw-bg-opacity: 1; background-color: rgba(121,137,255,var(-=
-tw-bg-opacity)); }

.bg-blue-400 { --tw-bg-opacity: 1; background-color: rgba(58,136,255,var(--=
tw-bg-opacity)); }

.bg-blue-500 { --tw-bg-opacity: 1; background-color: rgba(69,89,164,var(--t=
w-bg-opacity)); }

.bg-blue-700 { --tw-bg-opacity: 1; background-color: rgba(29,78,216,var(--t=
w-bg-opacity)); }

.bg-blue-950 { --tw-bg-opacity: 1; background-color: rgba(23,37,84,var(--tw=
-bg-opacity)); }

.bg-brand-blue-800 { --tw-bg-opacity: 1; background-color: rgba(0,102,222,v=
ar(--tw-bg-opacity)); }

.bg-brand-green { --tw-bg-opacity: 1; background-color: rgba(25,195,125,var=
(--tw-bg-opacity)); }

.bg-brand-green\/20 { background-color: rgba(25, 195, 125, 0.2); }

.bg-brand-green\/40 { background-color: rgba(25, 195, 125, 0.4); }

.bg-brand-purple { --tw-bg-opacity: 1; background-color: rgba(171,104,255,v=
ar(--tw-bg-opacity)); }

.bg-gray-100 { --tw-bg-opacity: 1; background-color: rgba(236,236,236,var(-=
-tw-bg-opacity)); }

.bg-gray-200 { --tw-bg-opacity: 1; background-color: rgba(227,227,227,var(-=
-tw-bg-opacity)); }

.bg-gray-300 { --tw-bg-opacity: 1; background-color: rgba(205,205,205,var(-=
-tw-bg-opacity)); }

.bg-gray-400 { --tw-bg-opacity: 1; background-color: rgba(180,180,180,var(-=
-tw-bg-opacity)); }

.bg-gray-50 { --tw-bg-opacity: 1; background-color: rgba(249,249,249,var(--=
tw-bg-opacity)); }

.bg-gray-500 { --tw-bg-opacity: 1; background-color: rgba(155,155,155,var(-=
-tw-bg-opacity)); }

.bg-gray-600 { --tw-bg-opacity: 1; background-color: rgba(103,103,103,var(-=
-tw-bg-opacity)); }

.bg-gray-700 { --tw-bg-opacity: 1; background-color: rgba(78,78,78,var(--tw=
-bg-opacity)); }

.bg-gray-900 { --tw-bg-opacity: 1; background-color: rgba(23,23,23,var(--tw=
-bg-opacity)); }

.bg-gray-950 { --tw-bg-opacity: 1; background-color: rgba(13,13,13,var(--tw=
-bg-opacity)); }

.bg-green-100 { --tw-bg-opacity: 1; background-color: rgba(210,244,211,var(=
--tw-bg-opacity)); }

.bg-green-200 { --tw-bg-opacity: 1; background-color: rgba(185,238,188,var(=
--tw-bg-opacity)); }

.bg-green-50 { --tw-bg-opacity: 1; background-color: rgba(235,250,235,var(-=
-tw-bg-opacity)); }

.bg-green-500 { --tw-bg-opacity: 1; background-color: rgba(25,195,125,var(-=
-tw-bg-opacity)); }

.bg-green-500\/10 { background-color: rgba(25, 195, 125, 0.1); }

.bg-green-600 { --tw-bg-opacity: 1; background-color: rgba(16,163,127,var(-=
-tw-bg-opacity)); }

.bg-orange-500 { --tw-bg-opacity: 1; background-color: rgba(224,108,43,var(=
--tw-bg-opacity)); }

.bg-orange-500\/10 { background-color: rgba(224, 108, 43, 0.1); }

.bg-red-100 { --tw-bg-opacity: 1; background-color: rgba(254,226,226,var(--=
tw-bg-opacity)); }

.bg-red-200 { --tw-bg-opacity: 1; background-color: rgba(254,202,202,var(--=
tw-bg-opacity)); }

.bg-red-500 { --tw-bg-opacity: 1; background-color: rgba(239,68,68,var(--tw=
-bg-opacity)); }

.bg-red-500\/10 { background-color: rgba(239, 68, 68, 0.1); }

.bg-red-600 { --tw-bg-opacity: 1; background-color: rgba(220,38,38,var(--tw=
-bg-opacity)); }

.bg-token-border-light { background-color: var(--border-light); }

.bg-token-border-medium { background-color: var(--border-medium); }

.bg-token-main-surface-primary { background-color: var(--main-surface-prima=
ry); }

.bg-token-main-surface-secondary { background-color: var(--main-surface-sec=
ondary); }

.bg-token-main-surface-tertiary { background-color: var(--main-surface-tert=
iary); }

.bg-token-sidebar-surface-primary { background-color: var(--sidebar-surface=
-primary); }

.bg-token-sidebar-surface-secondary { background-color: var(--sidebar-surfa=
ce-secondary); }

.bg-token-sidebar-surface-tertiary { background-color: var(--sidebar-surfac=
e-tertiary); }

.bg-token-text-primary { background-color: var(--text-primary); }

.bg-token-text-quaternary { background-color: var(--text-quaternary); }

.bg-token-text-secondary { background-color: var(--text-secondary); }

.bg-token-text-tertiary { background-color: var(--text-tertiary); }

.bg-transparent { background-color: transparent; }

.bg-white { --tw-bg-opacity: 1; background-color: rgba(255,255,255,var(--tw=
-bg-opacity)); }

.bg-white\/20 { background-color: rgba(255, 255, 255, 0.2); }

.bg-white\/25 { background-color: rgba(255, 255, 255, 0.25); }

.bg-yellow-100 { --tw-bg-opacity: 1; background-color: rgba(254,249,195,var=
(--tw-bg-opacity)); }

.bg-yellow-200 { --tw-bg-opacity: 1; background-color: rgba(250,230,158,var=
(--tw-bg-opacity)); }

.bg-yellow-400 { --tw-bg-opacity: 1; background-color: rgba(255,198,87,var(=
--tw-bg-opacity)); }

.bg-yellow-500 { --tw-bg-opacity: 1; background-color: rgba(234,179,8,var(-=
-tw-bg-opacity)); }

.bg-opacity-10 { --tw-bg-opacity: 0.1; }

.bg-gradient-to-b { background-image: linear-gradient(to bottom,var(--tw-gr=
adient-stops)); }

.bg-gradient-to-l { background-image: linear-gradient(to left,var(--tw-grad=
ient-stops)); }

.bg-gradient-to-r { background-image: linear-gradient(to right,var(--tw-gra=
dient-stops)); }

.bg-gradient-to-t { background-image: linear-gradient(to top,var(--tw-gradi=
ent-stops)); }

.from-gray-900\/0 { --tw-gradient-from: hsla(0,0%,9%,0) var(--tw-gradient-f=
rom-position); --tw-gradient-to: hsla(0,0%,9%,0) var(--tw-gradient-to-posit=
ion); --tw-gradient-stops: var(--tw-gradient-from),var(--tw-gradient-to); }

.from-token-main-surface-primary { --tw-gradient-from: var(--main-surface-p=
rimary) var(--tw-gradient-from-position); --tw-gradient-to: hsla(0,0%,100%,=
0) var(--tw-gradient-to-position); --tw-gradient-stops: var(--tw-gradient-f=
rom),var(--tw-gradient-to); }

.from-token-main-surface-secondary { --tw-gradient-from: var(--main-surface=
-secondary) var(--tw-gradient-from-position); --tw-gradient-to: hsla(0,0%,1=
00%,0) var(--tw-gradient-to-position); --tw-gradient-stops: var(--tw-gradie=
nt-from),var(--tw-gradient-to); }

.from-token-sidebar-surface-primary { --tw-gradient-from: var(--sidebar-sur=
face-primary) var(--tw-gradient-from-position); --tw-gradient-to: hsla(0,0%=
,100%,0) var(--tw-gradient-to-position); --tw-gradient-stops: var(--tw-grad=
ient-from),var(--tw-gradient-to); }

.from-token-sidebar-surface-secondary { --tw-gradient-from: var(--sidebar-s=
urface-secondary) var(--tw-gradient-from-position); --tw-gradient-to: hsla(=
0,0%,100%,0) var(--tw-gradient-to-position); --tw-gradient-stops: var(--tw-=
gradient-from),var(--tw-gradient-to); }

.from-token-sidebar-surface-tertiary { --tw-gradient-from: var(--sidebar-su=
rface-tertiary) var(--tw-gradient-from-position); --tw-gradient-to: hsla(0,=
0%,100%,0) var(--tw-gradient-to-position); --tw-gradient-stops: var(--tw-gr=
adient-from),var(--tw-gradient-to); }

.from-white { --tw-gradient-from: #fff var(--tw-gradient-from-position); --=
tw-gradient-to: hsla(0,0%,100%,0) var(--tw-gradient-to-position); --tw-grad=
ient-stops: var(--tw-gradient-from),var(--tw-gradient-to); }

.from-0\% { --tw-gradient-from-position: 0%; }

.from-50\% { --tw-gradient-from-position: 50%; }

.from-60\% { --tw-gradient-from-position: 60%; }

.to-gray-900 { --tw-gradient-to: #171717 var(--tw-gradient-to-position); }

.to-transparent { --tw-gradient-to: transparent var(--tw-gradient-to-positi=
on); }

.bg-contain { background-size: contain; }

.bg-cover { background-size: cover; }

.bg-clip-padding { background-clip: padding-box; }

.bg-center { background-position: 50% center; }

.bg-no-repeat { background-repeat: no-repeat; }

.fill-yellow-500 { fill: rgb(234, 179, 8); }

.stroke-brand-purple\/25 { stroke: rgba(171, 104, 255, 0.25); }

.stroke-gray-400 { stroke: rgb(180, 180, 180); }

.stroke-0 { stroke-width: 0; }

.stroke-2 { stroke-width: 2; }

.stroke-\[2\.5\] { stroke-width: 2.5; }

.stroke-\[3\] { stroke-width: 3; }

.stroke-\[4\] { stroke-width: 4; }

.object-contain { object-fit: contain; }

.object-cover { object-fit: cover; }

.object-scale-down { object-fit: scale-down; }

.p-0 { padding: 0px; }

.p-0\.5 { padding: 0.125rem; }

.p-1 { padding: 0.25rem; }

.p-1\.5 { padding: 0.375rem; }

.p-2 { padding: 0.5rem; }

.p-2\.5 { padding: 0.625rem; }

.p-3 { padding: 0.75rem; }

.p-4 { padding: 1rem; }

.p-5 { padding: 1.25rem; }

.p-6 { padding: 1.5rem; }

.p-7 { padding: 1.75rem; }

.p-8 { padding: 2rem; }

.p-\[1px\] { padding: 1px; }

.p-\[3px\] { padding: 3px; }

.p-\[5px\] { padding: 5px; }

.\!px-1 { padding-left: 0.25rem !important; padding-right: 0.25rem !importa=
nt; }

.\!px-1\.5 { padding-left: 0.375rem !important; padding-right: 0.375rem !im=
portant; }

.\!py-0 { padding-bottom: 0px !important; padding-top: 0px !important; }

.\!py-0\.5 { padding-bottom: 0.125rem !important; padding-top: 0.125rem !im=
portant; }

.px-0 { padding-left: 0px; padding-right: 0px; }

.px-0\.5 { padding-left: 0.125rem; padding-right: 0.125rem; }

.px-1 { padding-left: 0.25rem; padding-right: 0.25rem; }

.px-1\.5 { padding-left: 0.375rem; padding-right: 0.375rem; }

.px-16 { padding-left: 4rem; padding-right: 4rem; }

.px-2 { padding-left: 0.5rem; padding-right: 0.5rem; }

.px-2\.5 { padding-left: 0.625rem; padding-right: 0.625rem; }

.px-3 { padding-left: 0.75rem; padding-right: 0.75rem; }

.px-4 { padding-left: 1rem; padding-right: 1rem; }

.px-5 { padding-left: 1.25rem; padding-right: 1.25rem; }

.px-6 { padding-left: 1.5rem; padding-right: 1.5rem; }

.px-7 { padding-left: 1.75rem; padding-right: 1.75rem; }

.px-8 { padding-left: 2rem; padding-right: 2rem; }

.px-\[4px\] { padding-left: 4px; padding-right: 4px; }

.py-0 { padding-bottom: 0px; padding-top: 0px; }

.py-0\.5 { padding-bottom: 0.125rem; padding-top: 0.125rem; }

.py-1 { padding-bottom: 0.25rem; padding-top: 0.25rem; }

.py-1\.5 { padding-bottom: 0.375rem; padding-top: 0.375rem; }

.py-12 { padding-bottom: 3rem; padding-top: 3rem; }

.py-16 { padding-bottom: 4rem; padding-top: 4rem; }

.py-2 { padding-bottom: 0.5rem; padding-top: 0.5rem; }

.py-2\.5 { padding-bottom: 0.625rem; padding-top: 0.625rem; }

.py-3 { padding-bottom: 0.75rem; padding-top: 0.75rem; }

.py-3\.5 { padding-bottom: 0.875rem; padding-top: 0.875rem; }

.py-4 { padding-bottom: 1rem; padding-top: 1rem; }

.py-6 { padding-bottom: 1.5rem; padding-top: 1.5rem; }

.py-8 { padding-bottom: 2rem; padding-top: 2rem; }

.py-\[10px\] { padding-bottom: 10px; padding-top: 10px; }

.py-\[14px\] { padding-bottom: 14px; padding-top: 14px; }

.py-\[2px\] { padding-bottom: 2px; padding-top: 2px; }

.\!pr-2 { padding-right: 0.5rem !important; }

.\!pr-3 { padding-right: 0.75rem !important; }

.\!pt-0 { padding-top: 0px !important; }

.pb-0 { padding-bottom: 0px; }

.pb-0\.5 { padding-bottom: 0.125rem; }

.pb-1 { padding-bottom: 0.25rem; }

.pb-10 { padding-bottom: 2.5rem; }

.pb-12 { padding-bottom: 3rem; }

.pb-2 { padding-bottom: 0.5rem; }

.pb-20 { padding-bottom: 5rem; }

.pb-3 { padding-bottom: 0.75rem; }

.pb-3\.5 { padding-bottom: 0.875rem; }

.pb-36 { padding-bottom: 9rem; }

.pb-4 { padding-bottom: 1rem; }

.pb-5 { padding-bottom: 1.25rem; }

.pb-6 { padding-bottom: 1.5rem; }

.pb-8 { padding-bottom: 2rem; }

.pb-9 { padding-bottom: 2.25rem; }

.pl-1 { padding-left: 0.25rem; }

.pl-10 { padding-left: 2.5rem; }

.pl-12 { padding-left: 3rem; }

.pl-2 { padding-left: 0.5rem; }

.pl-3 { padding-left: 0.75rem; }

.pl-4 { padding-left: 1rem; }

.pl-5 { padding-left: 1.25rem; }

.pl-6 { padding-left: 1.5rem; }

.pl-8 { padding-left: 2rem; }

.pl-9 { padding-left: 2.25rem; }

.pl-\[46px\] { padding-left: 46px; }

.pr-1 { padding-right: 0.25rem; }

.pr-1\.5 { padding-right: 0.375rem; }

.pr-10 { padding-right: 2.5rem; }

.pr-12 { padding-right: 3rem; }

.pr-2 { padding-right: 0.5rem; }

.pr-3 { padding-right: 0.75rem; }

.pr-4 { padding-right: 1rem; }

.pr-5 { padding-right: 1.25rem; }

.pr-6 { padding-right: 1.5rem; }

.pr-7 { padding-right: 1.75rem; }

.pr-8 { padding-right: 2rem; }

.pr-9 { padding-right: 2.25rem; }

.pr-\[56px\] { padding-right: 56px; }

.pt-0 { padding-top: 0px; }

.pt-0\.5 { padding-top: 0.125rem; }

.pt-1 { padding-top: 0.25rem; }

.pt-16 { padding-top: 4rem; }

.pt-2 { padding-top: 0.5rem; }

.pt-20 { padding-top: 5rem; }

.pt-24 { padding-top: 6rem; }

.pt-3 { padding-top: 0.75rem; }

.pt-3\.5 { padding-top: 0.875rem; }

.pt-4 { padding-top: 1rem; }

.pt-5 { padding-top: 1.25rem; }

.pt-6 { padding-top: 1.5rem; }

.pt-8 { padding-top: 2rem; }

.pt-\[1\.125rem\] { padding-top: 1.125rem; }

.pt-\[67\%\] { padding-top: 67%; }

.text-left { text-align: left; }

.text-center { text-align: center; }

.text-right { text-align: right; }

.align-top { vertical-align: top; }

.align-middle { vertical-align: middle; }

.font-mono { font-family: "S=C3=B6hne Mono", Monaco, "Andale Mono", "Ubuntu=
 Mono", monospace; }

.font-sans { font-family: S=C3=B6hne, ui-sans-serif, system-ui, -apple-syst=
em, "Segoe UI", Roboto, Ubuntu, Cantarell, "Noto Sans", sans-serif, "Helvet=
ica Neue", Arial, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol",=
 "Noto Color Emoji"; }

.text-2xl { font-size: 1.5rem; line-height: 2rem; }

.text-3xl { font-size: 1.875rem; line-height: 2.25rem; }

.text-4xl { font-size: 2.25rem; line-height: 2.5rem; }

.text-\[0\.5rem\] { font-size: 0.5rem; }

.text-\[10px\] { font-size: 10px; }

.text-\[11px\] { font-size: 11px; }

.text-\[15px\] { font-size: 15px; }

.text-\[18px\] { font-size: 18px; }

.text-\[20px\] { font-size: 20px; }

.text-\[28px\] { font-size: 28px; }

.text-\[32px\] { font-size: 32px; }

.text-\[8px\] { font-size: 8px; }

.text-base { font-size: 1rem; line-height: 1.5rem; }

.text-lg { font-size: 1.125rem; line-height: 1.75rem; }

.text-sm { font-size: 0.875rem; line-height: 1.25rem; }

.text-xl { font-size: 1.25rem; line-height: 1.75rem; }

.text-xs { font-size: 0.75rem; line-height: 1rem; }

.font-bold { font-weight: 700; }

.font-light { font-weight: 300; }

.font-medium { font-weight: 500; }

.font-normal { font-weight: 400; }

.font-semibold { font-weight: 600; }

.uppercase { text-transform: uppercase; }

.capitalize { text-transform: capitalize; }

.normal-case { text-transform: none; }

.italic { font-style: italic; }

.tabular-nums { --tw-numeric-spacing: tabular-nums; font-variant-numeric: v=
ar(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-n=
umeric-spacing) var(--tw-numeric-fraction); }

.leading-3 { line-height: 0.75rem; }

.leading-5 { line-height: 1.25rem; }

.leading-6 { line-height: 1.5rem; }

.leading-\[1\.2\] { line-height: 1.2; }

.leading-none { line-height: 1; }

.leading-normal { line-height: 1.5; }

.leading-tight { line-height: 1.25; }

.tracking-tight { letter-spacing: -0.025em; }

.tracking-widest { letter-spacing: 0.1em; }

.\!text-token-main-surface-primary { color: var(--main-surface-primary) !im=
portant; }

.text-\[\#10A37F\] { --tw-text-opacity: 1; color: rgba(16,163,127,var(--tw-=
text-opacity)); }

.text-\[\#FE7600\] { --tw-text-opacity: 1; color: rgba(254,118,0,var(--tw-t=
ext-opacity)); }

.text-\[\#fff\] { --tw-text-opacity: 1; color: rgba(255,255,255,var(--tw-te=
xt-opacity)); }

.text-black { --tw-text-opacity: 1; color: rgba(0,0,0,var(--tw-text-opacity=
)); }

.text-black\/60 { color: rgba(0, 0, 0, 0.6); }

.text-black\/70 { color: rgba(0, 0, 0, 0.7); }

.text-blue-500 { --tw-text-opacity: 1; color: rgba(69,89,164,var(--tw-text-=
opacity)); }

.text-blue-600 { --tw-text-opacity: 1; color: rgba(37,99,235,var(--tw-text-=
opacity)); }

.text-brand-blue-800 { --tw-text-opacity: 1; color: rgba(0,102,222,var(--tw=
-text-opacity)); }

.text-brand-purple { --tw-text-opacity: 1; color: rgba(171,104,255,var(--tw=
-text-opacity)); }

.text-gray-100 { --tw-text-opacity: 1; color: rgba(236,236,236,var(--tw-tex=
t-opacity)); }

.text-gray-300 { --tw-text-opacity: 1; color: rgba(205,205,205,var(--tw-tex=
t-opacity)); }

.text-gray-400 { --tw-text-opacity: 1; color: rgba(180,180,180,var(--tw-tex=
t-opacity)); }

.text-gray-500 { --tw-text-opacity: 1; color: rgba(155,155,155,var(--tw-tex=
t-opacity)); }

.text-gray-600 { --tw-text-opacity: 1; color: rgba(103,103,103,var(--tw-tex=
t-opacity)); }

.text-gray-700 { --tw-text-opacity: 1; color: rgba(78,78,78,var(--tw-text-o=
pacity)); }

.text-gray-800 { --tw-text-opacity: 1; color: rgba(38,38,38,var(--tw-text-o=
pacity)); }

.text-gray-900 { --tw-text-opacity: 1; color: rgba(23,23,23,var(--tw-text-o=
pacity)); }

.text-gray-950 { --tw-text-opacity: 1; color: rgba(13,13,13,var(--tw-text-o=
pacity)); }

.text-green-500 { --tw-text-opacity: 1; color: rgba(25,195,125,var(--tw-tex=
t-opacity)); }

.text-green-600 { --tw-text-opacity: 1; color: rgba(16,163,127,var(--tw-tex=
t-opacity)); }

.text-green-700 { --tw-text-opacity: 1; color: rgba(26,127,100,var(--tw-tex=
t-opacity)); }

.text-green-800 { --tw-text-opacity: 1; color: rgba(27,93,74,var(--tw-text-=
opacity)); }

.text-green-900 { --tw-text-opacity: 1; color: rgba(24,61,49,var(--tw-text-=
opacity)); }

.text-orange-300 { --tw-text-opacity: 1; color: rgba(255,160,69,var(--tw-te=
xt-opacity)); }

.text-orange-400 { --tw-text-opacity: 1; color: rgba(255,128,82,var(--tw-te=
xt-opacity)); }

.text-orange-500 { --tw-text-opacity: 1; color: rgba(224,108,43,var(--tw-te=
xt-opacity)); }

.text-red-500 { --tw-text-opacity: 1; color: rgba(239,68,68,var(--tw-text-o=
pacity)); }

.text-red-600 { --tw-text-opacity: 1; color: rgba(220,38,38,var(--tw-text-o=
pacity)); }

.text-red-700 { --tw-text-opacity: 1; color: rgba(185,28,28,var(--tw-text-o=
pacity)); }

.text-red-800 { --tw-text-opacity: 1; color: rgba(153,27,27,var(--tw-text-o=
pacity)); }

.text-token-link { color: var(--link); }

.text-token-main-surface-primary { color: var(--main-surface-primary); }

.text-token-main-surface-tertiary { color: var(--main-surface-tertiary); }

.text-token-text-primary { color: var(--text-primary); }

.text-token-text-quaternary { color: var(--text-quaternary); }

.text-token-text-secondary { color: var(--text-secondary); }

.text-token-text-tertiary { color: var(--text-tertiary); }

.text-white { --tw-text-opacity: 1; color: rgba(255,255,255,var(--tw-text-o=
pacity)); }

.text-white\/25 { color: rgba(255, 255, 255, 0.25); }

.text-white\/50 { color: rgba(255, 255, 255, 0.5); }

.text-white\/80 { color: rgba(255, 255, 255, 0.8); }

.text-yellow-500 { --tw-text-opacity: 1; color: rgba(234,179,8,var(--tw-tex=
t-opacity)); }

.text-yellow-700 { --tw-text-opacity: 1; color: rgba(161,98,7,var(--tw-text=
-opacity)); }

.text-yellow-800 { --tw-text-opacity: 1; color: rgba(133,77,14,var(--tw-tex=
t-opacity)); }

.text-yellow-900 { --tw-text-opacity: 1; color: rgba(146,114,1,var(--tw-tex=
t-opacity)); }

.underline { text-decoration-line: underline; }

.line-through { text-decoration-line: line-through; }

.\!no-underline { text-decoration-line: none !important; }

.antialiased { -webkit-font-smoothing: antialiased; }

.placeholder-black\/50::-webkit-input-placeholder { color: rgba(0, 0, 0, 0.=
5); }

.placeholder-black\/50::placeholder { color: rgba(0, 0, 0, 0.5); }

.placeholder-gray-500::-webkit-input-placeholder { --tw-placeholder-opacity=
: 1; color: rgba(155,155,155,var(--tw-placeholder-opacity)); }

.placeholder-gray-500::placeholder { --tw-placeholder-opacity: 1; color: rg=
ba(155,155,155,var(--tw-placeholder-opacity)); }

.\!opacity-100 { opacity: 1 !important; }

.opacity-0 { opacity: 0; }

.opacity-100 { opacity: 1; }

.opacity-20 { opacity: 0.2; }

.opacity-25 { opacity: 0.25; }

.opacity-30 { opacity: 0.3; }

.opacity-50 { opacity: 0.5; }

.opacity-70 { opacity: 0.7; }

.opacity-75 { opacity: 0.75; }

.opacity-80 { opacity: 0.8; }

.\!shadow-none { --tw-shadow: 0 0 transparent !important; --tw-shadow-color=
ed: 0 0 transparent !important; box-shadow: var(--tw-ring-offset-shadow,0 0=
 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow) !impor=
tant; }

.shadow { --tw-shadow: 0 1px 3px 0 rgba(0,0,0,.1),0 1px 2px -1px rgba(0,0,0=
,.1); --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color),0 1px 2px -1p=
x var(--tw-shadow-color); }

.shadow, .shadow-2xl { box-shadow: var(--tw-ring-offset-shadow,0 0 transpar=
ent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.shadow-2xl { --tw-shadow: 0 25px 50px -12px rgba(0,0,0,.25); --tw-shadow-c=
olored: 0 25px 50px -12px var(--tw-shadow-color); }

.shadow-\[0_0_24px_0_rgba\(0\,0\,0\,0\.05\)\,inset_0_0\.5px_0_0_rgba\(0\,0\=
,0\,0\.05\)\,0_2px_8px_0_rgba\(0\,0\,0\,0\.05\)\] { --tw-shadow: 0 0 24px 0=
 rgba(0,0,0,.05),inset 0 0.5px 0 0 rgba(0,0,0,.05),0 2px 8px 0 rgba(0,0,0,.=
05); --tw-shadow-colored: 0 0 24px 0 var(--tw-shadow-color),inset 0 0.5px 0=
 0 var(--tw-shadow-color),0 2px 8px 0 var(--tw-shadow-color); box-shadow: v=
ar(--tw-ring-offset-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 transp=
arent),var(--tw-shadow); }

.shadow-\[0_1px_2px_rgba\(0\,0\,0\,0\.45\)\] { --tw-shadow: 0 1px 2px rgba(=
0,0,0,.45); --tw-shadow-colored: 0 1px 2px var(--tw-shadow-color); }

.shadow-\[0_1px_2px_rgba\(0\,0\,0\,0\.45\)\], .shadow-\[0_1px_7px_0_rgba\(0=
\,0\,0\,0\.03\)\] { box-shadow: var(--tw-ring-offset-shadow,0 0 transparent=
),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.shadow-\[0_1px_7px_0_rgba\(0\,0\,0\,0\.03\)\] { --tw-shadow: 0 1px 7px 0 r=
gba(0,0,0,.03); --tw-shadow-colored: 0 1px 7px 0 var(--tw-shadow-color); }

.shadow-\[0_2px_12px_0px_rgba\(0\,0\,0\,0\.08\)\] { --tw-shadow: 0 2px 12px=
 0px rgba(0,0,0,.08); --tw-shadow-colored: 0 2px 12px 0px var(--tw-shadow-c=
olor); }

.shadow-\[0_2px_12px_0px_rgba\(0\,0\,0\,0\.08\)\], .shadow-\[0_2px_24px_rgb=
a\(0\,0\,0\,0\.05\)\] { box-shadow: var(--tw-ring-offset-shadow,0 0 transpa=
rent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.shadow-\[0_2px_24px_rgba\(0\,0\,0\,0\.05\)\] { --tw-shadow: 0 2px 24px rgb=
a(0,0,0,.05); --tw-shadow-colored: 0 2px 24px var(--tw-shadow-color); }

.shadow-\[0_2px_3px_0_rgba\(0\,0\,0\,0\.25\)\] { --tw-shadow: 0 2px 3px 0 r=
gba(0,0,0,.25); --tw-shadow-colored: 0 2px 3px 0 var(--tw-shadow-color); }

.shadow-\[0_2px_3px_0_rgba\(0\,0\,0\,0\.25\)\], .shadow-\[0_4px_12px_rgba\(=
0\,0\,0\,0\)\,0_0_0_1px_var\(--border-medium\)\] { box-shadow: var(--tw-rin=
g-offset-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 transparent),var(=
--tw-shadow); }

.shadow-\[0_4px_12px_rgba\(0\,0\,0\,0\)\,0_0_0_1px_var\(--border-medium\)\]=
 { --tw-shadow: 0 4px 12px transparent,0 0 0 1px var(--border-medium); --tw=
-shadow-colored: 0 4px 12px var(--tw-shadow-color),0 0 0 1px var(--tw-shado=
w-color); }

.shadow-\[0px_10px_10px_-6px_rgba\(0\,0\,0\,0\.04\)\] { --tw-shadow: 0px 10=
px 10px -6px rgba(0,0,0,.04); --tw-shadow-colored: 0px 10px 10px -6px var(-=
-tw-shadow-color); }

.shadow-\[0px_10px_10px_-6px_rgba\(0\,0\,0\,0\.04\)\], .shadow-\[0px_4px_14=
px_rgba\(0\,0\,0\,0\.06\)\] { box-shadow: var(--tw-ring-offset-shadow,0 0 t=
ransparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.shadow-\[0px_4px_14px_rgba\(0\,0\,0\,0\.06\)\] { --tw-shadow: 0px 4px 14px=
 rgba(0,0,0,.06); --tw-shadow-colored: 0px 4px 14px var(--tw-shadow-color);=
 }

.shadow-\[inset_0_0_0_1px_rgba\(0\,0\,0\,0\.1\)\] { --tw-shadow: inset 0 0 =
0 1px rgba(0,0,0,.1); --tw-shadow-colored: inset 0 0 0 1px var(--tw-shadow-=
color); }

.shadow-\[inset_0_0_0_1px_rgba\(0\,0\,0\,0\.1\)\], .shadow-lg { box-shadow:=
 var(--tw-ring-offset-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 tran=
sparent),var(--tw-shadow); }

.shadow-lg { --tw-shadow: 0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rg=
ba(0,0,0,.1); --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color),=
0 4px 6px -4px var(--tw-shadow-color); }

.shadow-md { --tw-shadow: 0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba=
(0,0,0,.1); --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color),0 2p=
x 4px -2px var(--tw-shadow-color); }

.shadow-md, .shadow-none { box-shadow: var(--tw-ring-offset-shadow,0 0 tran=
sparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.shadow-none { --tw-shadow: 0 0 transparent; --tw-shadow-colored: 0 0 trans=
parent; }

.shadow-sm { --tw-shadow: 0 1px 2px 0 rgba(0,0,0,.05); --tw-shadow-colored:=
 0 1px 2px 0 var(--tw-shadow-color); }

.shadow-sm, .shadow-xl { box-shadow: var(--tw-ring-offset-shadow,0 0 transp=
arent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.shadow-xl { --tw-shadow: 0 20px 25px -5px rgba(0,0,0,.1),0 8px 10px -6px r=
gba(0,0,0,.1); --tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color)=
,0 8px 10px -6px var(--tw-shadow-color); }

.shadow-xs { --tw-shadow: 0 0 15px rgba(0,0,0,.1); --tw-shadow-colored: 0 0=
 15px var(--tw-shadow-color); }

.shadow-xs, .shadow-xxs { box-shadow: var(--tw-ring-offset-shadow,0 0 trans=
parent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.shadow-xxs { --tw-shadow: 0 1px 7px 0 rgba(0,0,0,.03); --tw-shadow-colored=
: 0 1px 7px 0 var(--tw-shadow-color); }

.outline-none { outline: transparent solid 2px; outline-offset: 2px; }

.outline-0 { outline-width: 0px; }

.ring-0 { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring=
-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: var(--tw-ring=
-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color); }

.ring-0, .ring-1 { box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-s=
hadow),var(--tw-shadow,0 0 transparent); }

.ring-1 { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring=
-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: var(--tw-ring=
-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);=
 }

.ring-2 { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring=
-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: var(--tw-ring=
-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);=
 box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-sh=
adow,0 0 transparent); }

.ring-inset { --tw-ring-inset: inset; }

.ring-black { --tw-ring-opacity: 1; --tw-ring-color: rgba(0,0,0,var(--tw-ri=
ng-opacity)); }

.ring-black\/10 { --tw-ring-color: rgba(0,0,0,.1); }

.ring-transparent { --tw-ring-color: transparent; }

.ring-white { --tw-ring-opacity: 1; --tw-ring-color: rgba(255,255,255,var(-=
-tw-ring-opacity)); }

.ring-opacity-5 { --tw-ring-opacity: 0.05; }

.ring-offset-4 { --tw-ring-offset-width: 4px; }

.ring-offset-black { --tw-ring-offset-color: #000; }

.blur { --tw-blur: blur(8px); }

.blur, .blur-xl { filter: var(--tw-blur) var(--tw-brightness) var(--tw-cont=
rast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-sa=
turate) var(--tw-sepia) var(--tw-drop-shadow); }

.blur-xl { --tw-blur: blur(24px); }

.drop-shadow-md { --tw-drop-shadow: drop-shadow(0 4px 3px rgba(0,0,0,.07)) =
drop-shadow(0 2px 2px rgba(0,0,0,.06)); }

.drop-shadow-md, .grayscale { filter: var(--tw-blur) var(--tw-brightness) v=
ar(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert)=
 var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow); }

.grayscale { --tw-grayscale: grayscale(100%); }

.filter { filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) va=
r(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) =
var(--tw-sepia) var(--tw-drop-shadow); }

.backdrop-blur-sm { --tw-backdrop-blur: blur(4px); }

.backdrop-blur-sm, .backdrop-blur-xl { backdrop-filter: var(--tw-backdrop-b=
lur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-bac=
kdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) va=
r(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepi=
a); }

.backdrop-blur-xl { --tw-backdrop-blur: blur(24px); }

.transition { transition-duration: 0.15s; transition-property: color, backg=
round-color, border-color, text-decoration-color, fill, stroke, opacity, bo=
x-shadow, transform, filter, backdrop-filter, -webkit-transform, -webkit-fi=
lter, -webkit-backdrop-filter; transition-timing-function: cubic-bezier(0.4=
, 0, 0.2, 1); }

.transition-\[flex-basis\] { transition-duration: 0.15s; transition-propert=
y: flex-basis; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }

.transition-\[stroke-dashoffset\] { transition-duration: 0.15s; transition-=
property: stroke-dashoffset; transition-timing-function: cubic-bezier(0.4, =
0, 0.2, 1); }

.transition-\[transform\,opacity\] { transition-duration: 0.15s; transition=
-property: transform, opacity, -webkit-transform; transition-timing-functio=
n: cubic-bezier(0.4, 0, 0.2, 1); }

.transition-all { transition-duration: 0.15s; transition-property: all; tra=
nsition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }

.transition-colors { transition-duration: 0.15s; transition-property: color=
, background-color, border-color, text-decoration-color, fill, stroke; tran=
sition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }

.transition-opacity { transition-duration: 0.15s; transition-property: opac=
ity; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }

.transition-transform { transition-duration: 0.15s; transition-property: tr=
ansform, -webkit-transform; transition-timing-function: cubic-bezier(0.4, 0=
, 0.2, 1); }

.transition-width { transition-duration: 0.15s; transition-property: width;=
 transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }

.delay-100 { transition-delay: 0.1s; }

.delay-\[300ms\] { transition-delay: 0.3s; }

.delay-\[500ms\] { transition-delay: 0.5s; }

.duration-100 { transition-duration: 0.1s; }

.duration-150 { transition-duration: 0.15s; }

.duration-200 { transition-duration: 0.2s; }

.duration-300 { transition-duration: 0.3s; }

.duration-500 { transition-duration: 0.5s; }

.ease-in { transition-timing-function: cubic-bezier(0.4, 0, 1, 1); }

.ease-in-out { transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }

.ease-linear { transition-timing-function: linear; }

.ease-out { transition-timing-function: cubic-bezier(0, 0, 0.2, 1); }

.will-change-\[opacity\,transform\] { will-change: opacity, transform; }

.will-change-transform { will-change: transform; }

.\[grid-area\:_title\] { grid-area: title; }

.\[grid-template-areas\:_\'title_action\'_\'description_action\'\] { grid-t=
emplate-areas: "title action" "description action"; }

.\[text-wrap\:pretty\] { text-wrap: pretty; }

body, html { background-color: var(--main-surface-primary); }

#__next, #root, body, html { height: 100%; }

.markdown { max-width: none; }

.markdown h1 { font-weight: 600; }

.markdown h1:first-child { margin-top: 0px; }

.markdown h2 { font-weight: 600; margin-bottom: 1rem; margin-top: 2rem; }

.markdown h2:first-child { margin-top: 0px; }

.markdown h3 { font-weight: 600; margin-bottom: 0.5rem; margin-top: 1rem; }

.markdown h3:first-child { margin-top: 0px; }

.markdown h4 { font-weight: 400; margin-bottom: 0.5rem; margin-top: 1rem; }

.markdown h4:first-child { margin-top: 0px; }

.markdown h5 { font-weight: 600; }

.markdown h5:first-child { margin-top: 0px; }

.markdown blockquote { --tw-border-opacity: 1; border-color: rgba(155,155,1=
55,var(--tw-border-opacity)); border-left-width: 2px; line-height: 1.5rem; =
margin: 0px; padding-bottom: 0.5rem; padding-left: 1rem; padding-top: 0.5re=
m; }

.markdown blockquote > p { margin: 0px; }

.markdown blockquote > p::after, .markdown blockquote > p::before { display=
: none; }

.markdown ol { counter-reset: list-number 0; display: flex; flex-direction:=
 column; list-style-type: none; padding-left: 0px; }

.markdown ol:first-child > li { padding-left: 1.25rem; }

.markdown ol > li { counter-increment: list-number 1; display: block; margi=
n-bottom: 0px; margin-top: 0px; min-height: 28px; }

.markdown ol > li::before { --tw-translate-x: -100%; --tw-numeric-spacing: =
tabular-nums; color: var(--text-tertiary); content: counters(list-number, "=
.") "."; font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var=
(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);=
 padding-right: 0.5rem; position: absolute; transform: translate(var(--tw-t=
ranslate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-=
skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-=
scale-y)); }

.markdown ul { display: flex; flex-direction: column; padding-left: 0px; }

.markdown ul:first-child > li { padding-left: 1.25rem; }

.markdown ul > li { display: block; margin: 0px; min-height: 28px; }

.markdown ul > li::before { --tw-translate-x: -100%; content: "=E2=80=A2"; =
font-size: 0.875rem; line-height: 1.25rem; padding-right: 0.5rem; position:=
 absolute; transform: translate(var(--tw-translate-x),var(--tw-translate-y)=
) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) =
scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.markdown ol li > p, .markdown ul li > p { margin: 0px; }

.markdown ol li > pre, .markdown ul li > pre { margin-bottom: 0.5rem; margi=
n-top: 0.25rem; }

.markdown ol ol, .markdown ol ul, .markdown ul ol, .markdown ul ul { margin=
-bottom: 0px; margin-left: 1rem; margin-top: 0px; }

.markdown table { --tw-border-spacing-x: 0px; --tw-border-spacing-y: 0px; b=
order-collapse: separate; border-spacing: var(--tw-border-spacing-x) var(--=
tw-border-spacing-y); margin-bottom: 0.25rem; margin-top: 0.25rem; width: 1=
00%; }

.markdown th { background-color: rgba(237, 237, 237, 0.2); border-bottom-wi=
dth: 1px; border-left-width: 1px; border-top-width: 1px; padding: 0.25rem 0=
.75rem; }

.markdown th:first-child { border-top-left-radius: 0.375rem; }

.markdown th:last-child { border-right-width: 1px; border-top-right-radius:=
 0.375rem; }

.markdown td { border-bottom-width: 1px; border-left-width: 1px; padding: 0=
.25rem 0.75rem; }

.markdown td:last-child { border-right-width: 1px; }

.markdown tbody tr:last-child td:first-child { border-bottom-left-radius: 0=
.375rem; }

.markdown tbody tr:last-child td:last-child { border-bottom-right-radius: 0=
.375rem; }

.markdown a { color: var(--link); font-weight: 400; text-decoration-line: n=
one; }

.markdown a:hover { color: var(--link-hover); }

.gizmo .markdown > :not(pre), .gizmo .markdown > :not(pre) > :not(a) { colo=
r: var(--text-primary); }

.conversation-item-time::before { content: attr(data-time); }

button.scroll-convo { display: none; }

@-webkit-keyframes blink {=20
  100% { visibility: hidden; }
}

@keyframes blink {=20
  100% { visibility: hidden; }
}

.animate-flash { animation: 2s steps(60, start) 0s 1 normal none running fl=
ash; }

@-webkit-keyframes flash {=20
  0% { background-color: rgba(255, 255, 255, 0.4); }
}

@keyframes flash {=20
  0% { background-color: rgba(255, 255, 255, 0.4); }
}

.result-streaming > :not(ol):not(ul):not(pre):last-child::after, .result-st=
reaming > pre:last-child code::after { content: "=E2=97=8F"; font-family: "=
S=C3=B6hne Circle", system-ui, -apple-system, "Segoe UI", Roboto, Ubuntu, C=
antarell, "Noto Sans", sans-serif; line-height: normal; margin-left: 0.25re=
m; vertical-align: baseline; }

.result-thinking:empty:last-child::after { -webkit-font-smoothing: subpixel=
-antialiased; animation: 1.25s ease-in-out 0s infinite normal none running =
pulseSize; backface-visibility: hidden; background-color: var(--text-primar=
y); border-radius: 50%; box-sizing: border-box; content: " "; display: bloc=
k; height: 12px; position: absolute; top: 7px; transform: translateZ(0px); =
transform-origin: center center; width: 12px; will-change: transform; }

@supports (selector(:has(*))) {
  .result-streaming > ol:last-child > li:last-child > ol:last-child > li:la=
st-child::after, .result-streaming > ol:last-child > li:last-child > ol:las=
t-child > li:last-child > ol:last-child > li:last-child::after, .result-str=
eaming > ol:last-child > li:last-child > ol:last-child > li:last-child > ul=
:last-child > li:last-child::after, .result-streaming > ol:last-child > li:=
last-child > ul:last-child > li:last-child::after, .result-streaming > ol:l=
ast-child > li:last-child > ul:last-child > li:last-child > ol:last-child >=
 li:last-child::after, .result-streaming > ol:last-child > li:last-child > =
ul:last-child > li:last-child > ul:last-child > li:last-child::after, .resu=
lt-streaming > ul:last-child > li:last-child > ol:last-child > li:last-chil=
d::after, .result-streaming > ul:last-child > li:last-child > ol:last-child=
 > li:last-child > ol:last-child > li:last-child::after, .result-streaming =
> ul:last-child > li:last-child > ol:last-child > li:last-child > ul:last-c=
hild > li:last-child::after, .result-streaming > ul:last-child > li:last-ch=
ild > ul:last-child > li:last-child::after, .result-streaming > ul:last-chi=
ld > li:last-child > ul:last-child > li:last-child > ol:last-child > li:las=
t-child::after, .result-streaming > ul:last-child > li:last-child > ul:last=
-child > li:last-child > ul:last-child > li:last-child::after, .result-stre=
aming > ul:last-child > li:last-child[*|\:not-has\(]::after { content: "=E2=
=97=8F"; font-family: "S=C3=B6hne Circle", system-ui, -apple-system, "Segoe=
 UI", Roboto, Ubuntu, Cantarell, "Noto Sans", sans-serif; line-height: norm=
al; margin-left: 0.25rem; vertical-align: baseline; }
  .result-streaming > ul:last-child > li:last-child:not(:has(* > li))::afte=
r { content: "=E2=97=8F"; font-family: "S=C3=B6hne Circle", system-ui, -app=
le-system, "Segoe UI", Roboto, Ubuntu, Cantarell, "Noto Sans", sans-serif; =
line-height: normal; margin-left: 0.25rem; vertical-align: baseline; }
  .result-streaming > ol:last-child > li:last-child[*|\:not-has\(]::after {=
 content: "=E2=97=8F"; font-family: "S=C3=B6hne Circle", system-ui, -apple-=
system, "Segoe UI", Roboto, Ubuntu, Cantarell, "Noto Sans", sans-serif; lin=
e-height: normal; margin-left: 0.25rem; vertical-align: baseline; }
  .result-streaming > ol:last-child > li:last-child:not(:has(* > li))::afte=
r { content: "=E2=97=8F"; font-family: "S=C3=B6hne Circle", system-ui, -app=
le-system, "Segoe UI", Roboto, Ubuntu, Cantarell, "Noto Sans", sans-serif; =
line-height: normal; margin-left: 0.25rem; vertical-align: baseline; }
}

@supports not (selector(:has(*))) {
  .result-streaming > ol:last-child > li:last-child::after, .result-streami=
ng > ul:last-child > li:last-child::after { content: "=E2=97=8F"; font-fami=
ly: "S=C3=B6hne Circle", system-ui, -apple-system, "Segoe UI", Roboto, Ubun=
tu, Cantarell, "Noto Sans", sans-serif; line-height: normal; margin-left: 0=
.25rem; vertical-align: baseline; }
}

@-webkit-keyframes pulseSize {=20
  0%, 100% { transform: scaleX(1); }
  50% { transform: scale3d(1.25, 1.25, 1); }
}

@keyframes pulseSize {=20
  0%, 100% { transform: scaleX(1); }
  50% { transform: scale3d(1.25, 1.25, 1); }
}

@-webkit-keyframes toast-open {=20
  0% { opacity: 0; transform: translateY(-100%); }
  100% { transform: translateY(0px); }
}

@keyframes toast-open {=20
  0% { opacity: 0; transform: translateY(-100%); }
  100% { transform: translateY(0px); }
}

@-webkit-keyframes toast-close {=20
  0% { opacity: 1; }
  100% { opacity: 0; }
}

@keyframes toast-close {=20
  0% { opacity: 1; }
  100% { opacity: 0; }
}

button[data-state=3D"closed"] .toggle-item-button-closed, button[data-state=
=3D"open"] .toggle-item-button-open { display: none; }

.toast-root { align-items: center; display: flex; flex-direction: column; h=
eight: 0px; transition: all 0.24s cubic-bezier(0, 0, 0.2, 1) 0s; }

.toast-root[data-state=3D"entered"], .toast-root[data-state=3D"entering"] {=
 animation: 0.24s cubic-bezier(0.175, 0.885, 0.32, 1.175) 0s 1 normal both =
running toast-open; }

.toast-root[data-state=3D"exiting"] { animation: 0.12s cubic-bezier(0.4, 0,=
 1, 1) 0s 1 normal both running toast-close; }

.toast-root .alert-root { box-shadow: rgba(67, 90, 111, 0.3) 0px 0px 1px, r=
gba(67, 90, 111, 0.3) 0px 5px 8px -4px; flex-shrink: 0; pointer-events: all=
; }

.interact-bounce { transition-duration: 0.15s; transition-property: transfo=
rm, -webkit-transform; transition-timing-function: cubic-bezier(0.4, 0, 0.2=
, 1); }

.interact-bounce:hover { --tw-scale-x: 1.05; --tw-scale-y: 1.05; }

.interact-bounce:active, .interact-bounce:hover { transform: translate(var(=
--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var=
(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var=
(--tw-scale-y)); }

.interact-bounce:active { --tw-scale-x: .9; --tw-scale-y: .9; }

.title { font-feature-settings: normal; font-family: S=C3=B6hne, ui-sans-se=
rif, system-ui, -apple-system, "Segoe UI", Roboto, Ubuntu, Cantarell, "Noto=
 Sans", sans-serif, "Helvetica Neue", Arial, "Apple Color Emoji", "Segoe UI=
 Emoji", "Segoe UI Symbol", "Noto Color Emoji"; font-variation-settings: no=
rmal; }

.font-circle { font-family: "S=C3=B6hne Circle", system-ui, -apple-system, =
"Segoe UI", Roboto, Ubuntu, Cantarell, "Noto Sans", sans-serif; }

.icon-xs { stroke-width: 1.5; height: 0.75rem; width: 0.75rem; }

.icon-sm { stroke-width: 2; height: 1rem; width: 1rem; }

.icon-md { stroke-width: 1.5; height: 18px; width: 18px; }

.icon-lg { stroke-width: 1.5; height: 1.5rem; width: 1.5rem; }

.icon-xl { stroke-width: 1.5; height: 1.75rem; width: 1.75rem; }

.icon-2xl { stroke-width: 1.5; height: 2rem; width: 2rem; }

.icon-workspace-avatar-preview { stroke-width: 1.5; height: 96px; width: 96=
px; }

.icon-cover { stroke-width: 1.5; height: 234px; width: 234px; }

.gizmo-shadow-stroke { position: relative; }

.gizmo-shadow-stroke::after { --tw-shadow: inset 0 0 0 1px rgba(0,0,0,.1); =
--tw-shadow-colored: inset 0 0 0 1px var(--tw-shadow-color); border-radius:=
 9999px; inset: 0px; content: ""; position: absolute; }

.dark .gizmo-shadow-stroke::after, .gizmo-shadow-stroke::after { box-shadow=
: var(--tw-ring-offset-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 tra=
nsparent),var(--tw-shadow); }

.dark .gizmo-shadow-stroke::after { --tw-shadow: inset 0 0 0 1px hsla(0,0%,=
100%,.2); --tw-shadow-colored: inset 0 0 0 1px var(--tw-shadow-color); }

.no-scrollbar::-webkit-scrollbar { display: none; }

.no-scrollbar { scrollbar-width: none; }

.dark .dark\:prose-invert { --tw-prose-body: var(--tw-prose-invert-body); -=
-tw-prose-headings: var(--tw-prose-invert-headings); --tw-prose-lead: var(-=
-tw-prose-invert-lead); --tw-prose-links: var(--tw-prose-invert-links); --t=
w-prose-bold: var(--tw-prose-invert-bold); --tw-prose-counters: var(--tw-pr=
ose-invert-counters); --tw-prose-bullets: var(--tw-prose-invert-bullets); -=
-tw-prose-hr: var(--tw-prose-invert-hr); --tw-prose-quotes: var(--tw-prose-=
invert-quotes); --tw-prose-quote-borders: var(--tw-prose-invert-quote-borde=
rs); --tw-prose-captions: var(--tw-prose-invert-captions); --tw-prose-code:=
 var(--tw-prose-invert-code); --tw-prose-pre-code: var(--tw-prose-invert-pr=
e-code); --tw-prose-pre-bg: var(--tw-prose-invert-pre-bg); --tw-prose-th-bo=
rders: var(--tw-prose-invert-th-borders); --tw-prose-td-borders: var(--tw-p=
rose-invert-td-borders); }

.marker\:text-token-text-tertiary ::marker { color: var(--text-tertiary); }

.marker\:text-token-text-tertiary::marker { color: var(--text-tertiary); }

.placeholder\:text-gray-300::-webkit-input-placeholder { --tw-text-opacity:=
 1; color: rgba(205,205,205,var(--tw-text-opacity)); }

.placeholder\:text-gray-300::placeholder { --tw-text-opacity: 1; color: rgb=
a(205,205,205,var(--tw-text-opacity)); }

.placeholder\:text-gray-600::-webkit-input-placeholder { --tw-text-opacity:=
 1; color: rgba(103,103,103,var(--tw-text-opacity)); }

.placeholder\:text-gray-600::placeholder { --tw-text-opacity: 1; color: rgb=
a(103,103,103,var(--tw-text-opacity)); }

.placeholder\:text-token-text-tertiary::-webkit-input-placeholder { color: =
var(--text-tertiary); }

.placeholder\:text-token-text-tertiary::placeholder { color: var(--text-ter=
tiary); }

.after\:block::after { content: var(--tw-content); display: block; }

.after\:h-2::after { content: var(--tw-content); height: 0.5rem; }

.after\:w-2::after { content: var(--tw-content); width: 0.5rem; }

.after\:rounded-\[50\%\]::after { border-radius: 50%; content: var(--tw-con=
tent); }

.after\:bg-token-text-primary::after { background-color: var(--text-primary=
); content: var(--tw-content); }

.after\:content-\[\'\'\]::after { --tw-content: ""; content: var(--tw-conte=
nt); }

.first\:ml-4:first-child { margin-left: 1rem; }

.first\:mt-0:first-child { margin-top: 0px; }

.first\:border-0:first-child { border-width: 0px; }

.last\:mb-0:last-child { margin-bottom: 0px; }

.last\:mb-2:last-child { margin-bottom: 0.5rem; }

.last\:mr-4:last-child { margin-right: 1rem; }

.last\:min-h-\[calc\(100vh-8rem\)\]:last-child { min-height: calc(-8rem + 1=
00vh); }

.last\:border-0:last-child { border-width: 0px; }

.last\:border-b:last-child { border-bottom-width: 1px; }

.last\:border-r-0:last-child { border-right-width: 0px; }

.last\:pb-0:last-child { padding-bottom: 0px; }

.last\:pr-0:last-child { padding-right: 0px; }

.last-of-type\:border-b-0:last-of-type { border-bottom-width: 0px; }

.checked\:border-blue-600:checked { --tw-border-opacity: 1; border-color: r=
gba(37,99,235,var(--tw-border-opacity)); }

.checked\:border-token-text-secondary:checked { border-color: var(--text-se=
condary); }

.checked\:\!bg-black:checked { --tw-bg-opacity: 1 !important; background-co=
lor: rgba(0,0,0,var(--tw-bg-opacity)) !important; }

.checked\:bg-blue-600:checked { --tw-bg-opacity: 1; background-color: rgba(=
37,99,235,var(--tw-bg-opacity)); }

.empty\:hidden:empty { display: none; }

.focus-within\:z-10[focus-within] { z-index: 10; }

.focus-within\:z-10:focus-within { z-index: 10; }

.focus-within\:border-green-500[focus-within] { --tw-border-opacity: 1; bor=
der-color: rgba(25,195,125,var(--tw-border-opacity)); }

.focus-within\:border-green-500:focus-within { --tw-border-opacity: 1; bord=
er-color: rgba(25,195,125,var(--tw-border-opacity)); }

.focus-within\:border-green-600[focus-within] { --tw-border-opacity: 1; bor=
der-color: rgba(16,163,127,var(--tw-border-opacity)); }

.focus-within\:border-green-600:focus-within { --tw-border-opacity: 1; bord=
er-color: rgba(16,163,127,var(--tw-border-opacity)); }

.focus-within\:border-token-border-xheavy[focus-within] { border-color: var=
(--border-xheavy); }

.focus-within\:border-token-border-xheavy:focus-within { border-color: var(=
--border-xheavy); }

.focus-within\:bg-token-main-surface-tertiary[focus-within] { background-co=
lor: var(--main-surface-tertiary); }

.focus-within\:bg-token-main-surface-tertiary:focus-within { background-col=
or: var(--main-surface-tertiary); }

.focus-within\:shadow-none[focus-within] { --tw-shadow: 0 0 transparent; --=
tw-shadow-colored: 0 0 transparent; box-shadow: var(--tw-ring-offset-shadow=
,0 0 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.focus-within\:shadow-none:focus-within { --tw-shadow: 0 0 transparent; --t=
w-shadow-colored: 0 0 transparent; box-shadow: var(--tw-ring-offset-shadow,=
0 0 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.focus-within\:outline-none[focus-within] { outline: transparent solid 2px;=
 outline-offset: 2px; }

.focus-within\:outline-none:focus-within { outline: transparent solid 2px; =
outline-offset: 2px; }

.focus-within\:ring-0[focus-within] { --tw-ring-offset-shadow: var(--tw-rin=
g-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --t=
w-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width))=
 var(--tw-ring-color); box-shadow: var(--tw-ring-offset-shadow),var(--tw-ri=
ng-shadow),var(--tw-shadow,0 0 transparent); }

.focus-within\:ring-0:focus-within { --tw-ring-offset-shadow: var(--tw-ring=
-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw=
-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) =
var(--tw-ring-color); box-shadow: var(--tw-ring-offset-shadow),var(--tw-rin=
g-shadow),var(--tw-shadow,0 0 transparent); }

.focus-within\:ring-1[focus-within] { --tw-ring-offset-shadow: var(--tw-rin=
g-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --t=
w-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-w=
idth)) var(--tw-ring-color); box-shadow: var(--tw-ring-offset-shadow),var(-=
-tw-ring-shadow),var(--tw-shadow,0 0 transparent); }

.focus-within\:ring-1:focus-within { --tw-ring-offset-shadow: var(--tw-ring=
-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw=
-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-wi=
dth)) var(--tw-ring-color); box-shadow: var(--tw-ring-offset-shadow),var(--=
tw-ring-shadow),var(--tw-shadow,0 0 transparent); }

.focus-within\:ring-green-600[focus-within] { --tw-ring-opacity: 1; --tw-ri=
ng-color: rgba(16,163,127,var(--tw-ring-opacity)); }

.focus-within\:ring-green-600:focus-within { --tw-ring-opacity: 1; --tw-rin=
g-color: rgba(16,163,127,var(--tw-ring-opacity)); }

.focus-within\:ring-token-text-secondary[focus-within] { --tw-ring-color: v=
ar(--text-secondary); }

.focus-within\:ring-token-text-secondary:focus-within { --tw-ring-color: va=
r(--text-secondary); }

.focus-within\:ring-transparent[focus-within] { --tw-ring-color: transparen=
t; }

.focus-within\:ring-transparent:focus-within { --tw-ring-color: transparent=
; }

.hover\:cursor-pointer:hover { cursor: pointer; }

.hover\:border-\[var\(--avatar-color\)\]:hover { border-color: var(--avatar=
-color); }

.hover\:border-black\/10:hover { border-color: rgba(0, 0, 0, 0.1); }

.hover\:border-gray-100:hover { --tw-border-opacity: 1; border-color: rgba(=
236,236,236,var(--tw-border-opacity)); }

.hover\:border-token-border-medium:hover { border-color: var(--border-mediu=
m); }

.hover\:bg-\[\#0000FF\]:hover { --tw-bg-opacity: 1; background-color: rgba(=
0,0,255,var(--tw-bg-opacity)); }

.hover\:bg-\[\#0077FF\]:hover { --tw-bg-opacity: 1; background-color: rgba(=
0,119,255,var(--tw-bg-opacity)); }

.hover\:bg-\[\#6E73FC\]:hover { --tw-bg-opacity: 1; background-color: rgba(=
110,115,252,var(--tw-bg-opacity)); }

.hover\:bg-black:hover { --tw-bg-opacity: 1; background-color: rgba(0,0,0,v=
ar(--tw-bg-opacity)); }

.hover\:bg-black\/10:hover { background-color: rgba(0, 0, 0, 0.1); }

.hover\:bg-blue-700:hover { --tw-bg-opacity: 1; background-color: rgba(29,7=
8,216,var(--tw-bg-opacity)); }

.hover\:bg-brand-green\/30:hover { background-color: rgba(25, 195, 125, 0.3=
); }

.hover\:bg-brand-purple:hover { --tw-bg-opacity: 1; background-color: rgba(=
171,104,255,var(--tw-bg-opacity)); }

.hover\:bg-gray-100:hover { --tw-bg-opacity: 1; background-color: rgba(236,=
236,236,var(--tw-bg-opacity)); }

.hover\:bg-gray-200:hover { --tw-bg-opacity: 1; background-color: rgba(227,=
227,227,var(--tw-bg-opacity)); }

.hover\:bg-gray-50:hover { --tw-bg-opacity: 1; background-color: rgba(249,2=
49,249,var(--tw-bg-opacity)); }

.hover\:bg-gray-500\/10:hover { background-color: rgba(156, 156, 156, 0.1);=
 }

.hover\:bg-gray-700:hover { --tw-bg-opacity: 1; background-color: rgba(78,7=
8,78,var(--tw-bg-opacity)); }

.hover\:bg-green-100:hover { --tw-bg-opacity: 1; background-color: rgba(210=
,244,211,var(--tw-bg-opacity)); }

.hover\:bg-token-main-surface-secondary:hover { background-color: var(--mai=
n-surface-secondary); }

.hover\:bg-token-main-surface-tertiary:hover { background-color: var(--main=
-surface-tertiary); }

.hover\:bg-token-sidebar-surface-secondary:hover { background-color: var(--=
sidebar-surface-secondary); }

.hover\:bg-transparent:hover { background-color: transparent; }

.hover\:bg-white:hover { --tw-bg-opacity: 1; background-color: rgba(255,255=
,255,var(--tw-bg-opacity)); }

.hover\:bg-white\/40:hover { background-color: rgba(255, 255, 255, 0.4); }

.hover\:text-black\/50:hover { color: rgba(0, 0, 0, 0.5); }

.hover\:text-black\/70:hover { color: rgba(0, 0, 0, 0.7); }

.hover\:text-blue-600:hover { --tw-text-opacity: 1; color: rgba(37,99,235,v=
ar(--tw-text-opacity)); }

.hover\:text-red-500:hover { --tw-text-opacity: 1; color: rgba(239,68,68,va=
r(--tw-text-opacity)); }

.hover\:text-token-link-hover:hover { color: var(--link-hover); }

.hover\:text-token-text-primary:hover { color: var(--text-primary); }

.hover\:text-token-text-secondary:hover { color: var(--text-secondary); }

.hover\:text-token-text-tertiary:hover { color: var(--text-tertiary); }

.hover\:text-white\/40:hover { color: rgba(255, 255, 255, 0.4); }

.hover\:underline:hover { text-decoration-line: underline; }

.hover\:opacity-100:hover { opacity: 1; }

.hover\:opacity-70:hover { opacity: 0.7; }

.hover\:opacity-75:hover { opacity: 0.75; }

.hover\:opacity-80:hover { opacity: 0.8; }

.hover\:brightness-90:hover { --tw-brightness: brightness(.9); filter: var(=
--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(=
--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--=
tw-drop-shadow); }

.hover\:delay-0:hover { transition-delay: 0s; }

.focus\:border-0:focus { border-width: 0px; }

.focus\:border-none:focus { border-style: none; }

.focus\:border-blue-500:focus { --tw-border-opacity: 1; border-color: rgba(=
69,89,164,var(--tw-border-opacity)); }

.focus\:border-gray-200:focus { --tw-border-opacity: 1; border-color: rgba(=
227,227,227,var(--tw-border-opacity)); }

.focus\:border-green-500:focus { --tw-border-opacity: 1; border-color: rgba=
(25,195,125,var(--tw-border-opacity)); }

.focus\:border-green-600:focus { --tw-border-opacity: 1; border-color: rgba=
(16,163,127,var(--tw-border-opacity)); }

.focus\:border-orange-400:focus { --tw-border-opacity: 1; border-color: rgb=
a(255,128,82,var(--tw-border-opacity)); }

.focus\:border-red-500:focus { --tw-border-opacity: 1; border-color: rgba(2=
39,68,68,var(--tw-border-opacity)); }

.focus\:border-token-text-primary:focus { border-color: var(--text-primary)=
; }

.focus\:shadow-none:focus { --tw-shadow: 0 0 transparent; --tw-shadow-color=
ed: 0 0 transparent; box-shadow: var(--tw-ring-offset-shadow,0 0 transparen=
t),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.focus\:outline-none:focus { outline: transparent solid 2px; outline-offset=
: 2px; }

.focus\:ring-0:focus { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 =
var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: =
var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-=
color); }

.focus\:ring-0:focus, .focus\:ring-1:focus { box-shadow: var(--tw-ring-offs=
et-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 transparent); }

.focus\:ring-1:focus { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 =
var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: =
var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw=
-ring-color); }

.focus\:ring-2:focus { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 =
var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: =
var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw=
-ring-color); box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-shadow=
),var(--tw-shadow,0 0 transparent); }

.focus\:ring-inset:focus { --tw-ring-inset: inset; }

.focus\:ring-blue-400:focus { --tw-ring-opacity: 1; --tw-ring-color: rgba(5=
8,136,255,var(--tw-ring-opacity)); }

.focus\:ring-blue-500:focus { --tw-ring-opacity: 1; --tw-ring-color: rgba(6=
9,89,164,var(--tw-ring-opacity)); }

.focus\:ring-gray-200:focus { --tw-ring-opacity: 1; --tw-ring-color: rgba(2=
27,227,227,var(--tw-ring-opacity)); }

.focus\:ring-green-500:focus { --tw-ring-opacity: 1; --tw-ring-color: rgba(=
25,195,125,var(--tw-ring-opacity)); }

.focus\:ring-green-600:focus { --tw-ring-opacity: 1; --tw-ring-color: rgba(=
16,163,127,var(--tw-ring-opacity)); }

.focus\:ring-token-text-primary:focus { --tw-ring-color: var(--text-primary=
); }

.focus\:ring-white:focus { --tw-ring-opacity: 1; --tw-ring-color: rgba(255,=
255,255,var(--tw-ring-opacity)); }

.focus\:ring-offset-0:focus { --tw-ring-offset-width: 0px; }

.focus-visible\:border-none.focus-visible { border-style: none; }

.focus-visible\:border-none:focus-visible { border-style: none; }

.focus-visible\:border-green-500.focus-visible { --tw-border-opacity: 1; bo=
rder-color: rgba(25,195,125,var(--tw-border-opacity)); }

.focus-visible\:border-green-500:focus-visible { --tw-border-opacity: 1; bo=
rder-color: rgba(25,195,125,var(--tw-border-opacity)); }

.focus-visible\:border-token-border-light.focus-visible { border-color: var=
(--border-light); }

.focus-visible\:border-token-border-light:focus-visible { border-color: var=
(--border-light); }

.focus-visible\:ring-0.focus-visible { --tw-ring-offset-shadow: var(--tw-ri=
ng-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --=
tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)=
) var(--tw-ring-color); box-shadow: var(--tw-ring-offset-shadow),var(--tw-r=
ing-shadow),var(--tw-shadow,0 0 transparent); }

.focus-visible\:ring-0:focus-visible { --tw-ring-offset-shadow: var(--tw-ri=
ng-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --=
tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)=
) var(--tw-ring-color); box-shadow: var(--tw-ring-offset-shadow),var(--tw-r=
ing-shadow),var(--tw-shadow,0 0 transparent); }

.active\:scale-\[0\.9\]:active { --tw-scale-x: 0.9; --tw-scale-y: 0.9; tran=
sform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--=
tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw=
-scale-x)) scaleY(var(--tw-scale-y)); }

.active\:opacity-50:active { opacity: 0.5; }

.active\:opacity-90:active { opacity: 0.9; }

.enabled\:bg-black:enabled { --tw-bg-opacity: 1; background-color: rgba(0,0=
,0,var(--tw-bg-opacity)); }

.disabled\:cursor-auto:disabled { cursor: auto; }

.disabled\:bg-token-main-surface-tertiary:disabled { background-color: var(=
--main-surface-tertiary); }

.disabled\:text-gray-300:disabled { --tw-text-opacity: 1; color: rgba(205,2=
05,205,var(--tw-text-opacity)); }

.disabled\:text-gray-400:disabled { --tw-text-opacity: 1; color: rgba(180,1=
80,180,var(--tw-text-opacity)); }

.disabled\:text-token-border-medium:disabled { color: var(--border-medium);=
 }

.disabled\:text-token-text-tertiary:disabled { color: var(--text-tertiary);=
 }

.disabled\:opacity-10:disabled { opacity: 0.1; }

.disabled\:opacity-20:disabled { opacity: 0.2; }

.disabled\:opacity-40:disabled { opacity: 0.4; }

.disabled\:hover\:bg-gray-900:hover:disabled { --tw-bg-opacity: 1; backgrou=
nd-color: rgba(23,23,23,var(--tw-bg-opacity)); }

.group:last-child .group-last\:border-b-0 { border-bottom-width: 0px; }

.group:hover .group-hover\:visible, .group\/dalle-image:hover .group-hover\=
/dalle-image\:visible { visibility: visible; }

.group:hover .group-hover\:flex { display: flex; }

.group:hover .group-hover\:hidden { display: none; }

.group:hover .group-hover\:w-20 { width: 5rem; }

.group:hover .group-hover\:border-t-\[\#0077FF\] { --tw-border-opacity: 1; =
border-top-color: rgba(0,119,255,var(--tw-border-opacity)); }

.group:hover .group-hover\:bg-token-main-surface-secondary { background-col=
or: var(--main-surface-secondary); }

.group:hover .group-hover\:from-token-sidebar-surface-secondary { --tw-grad=
ient-from: var(--sidebar-surface-secondary) var(--tw-gradient-from-position=
); --tw-gradient-to: hsla(0,0%,100%,0) var(--tw-gradient-to-position); --tw=
-gradient-stops: var(--tw-gradient-from),var(--tw-gradient-to); }

.group:hover .group-hover\:from-60\% { --tw-gradient-from-position: 60%; }

.group:hover .group-hover\:text-token-text-primary { color: var(--text-prim=
ary); }

.group:hover .group-hover\:underline { text-decoration-line: underline; }

.group:hover .group-hover\:opacity-100 { opacity: 1; }

.group:hover .group-hover\:opacity-50 { opacity: 0.5; }

.group:hover .group-hover\:grayscale-0 { --tw-grayscale: grayscale(0); filt=
er: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-graysca=
le) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia=
) var(--tw-drop-shadow); }

.group[data-disabled] .group-data-\[disabled\]\:opacity-50 { opacity: 0.5; =
}

.radix-disabled\:pointer-events-none[data-disabled] { pointer-events: none;=
 }

.radix-disabled\:cursor-auto[data-disabled] { cursor: auto; }

.radix-disabled\:bg-transparent[data-disabled] { background-color: transpar=
ent; }

.radix-disabled\:text-token-text-tertiary[data-disabled] { color: var(--tex=
t-tertiary); }

.radix-disabled\:opacity-50[data-disabled] { opacity: 0.5; }

.radix-highlighted\:bg-gray-50[data-highlighted] { --tw-bg-opacity: 1; back=
ground-color: rgba(249,249,249,var(--tw-bg-opacity)); }

.radix-highlighted\:bg-token-main-surface-secondary[data-highlighted] { bac=
kground-color: var(--main-surface-secondary); }

.radix-highlighted\:outline-none[data-highlighted] { outline: transparent s=
olid 2px; outline-offset: 2px; }

.radix-state-active\:bg-token-main-surface-tertiary[data-state=3D"active"] =
{ background-color: var(--main-surface-tertiary); }

.radix-state-active\:bg-white[data-state=3D"active"] { --tw-bg-opacity: 1; =
background-color: rgba(255,255,255,var(--tw-bg-opacity)); }

.radix-state-active\:text-token-text-primary[data-state=3D"active"] { color=
: var(--text-primary); }

.radix-state-active\:text-token-text-secondary[data-state=3D"active"] { col=
or: var(--text-secondary); }

.radix-state-checked\:translate-x-\[13px\][data-state=3D"checked"] { --tw-t=
ranslate-x: 13px; }

.radix-state-checked\:translate-x-\[13px\][data-state=3D"checked"], .radix-=
state-checked\:translate-x-\[14px\][data-state=3D"checked"] { transform: tr=
anslate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate=
)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)=
) scaleY(var(--tw-scale-y)); }

.radix-state-checked\:translate-x-\[14px\][data-state=3D"checked"] { --tw-t=
ranslate-x: 14px; }

.radix-state-checked\:border[data-state=3D"checked"] { border-width: 1px; }

.radix-state-checked\:border-green-500[data-state=3D"checked"] { --tw-borde=
r-opacity: 1; border-color: rgba(25,195,125,var(--tw-border-opacity)); }

.radix-state-checked\:bg-green-500[data-state=3D"checked"] { --tw-bg-opacit=
y: 1; background-color: rgba(25,195,125,var(--tw-bg-opacity)); }

.radix-state-checked\:bg-green-600[data-state=3D"checked"] { --tw-bg-opacit=
y: 1; background-color: rgba(16,163,127,var(--tw-bg-opacity)); }

.radix-state-checked\:bg-token-main-surface-primary[data-state=3D"checked"]=
 { background-color: var(--main-surface-primary); }

.radix-state-checked\:text-token-text-primary[data-state=3D"checked"] { col=
or: var(--text-primary); }

.radix-state-checked\:shadow-\[0_0_2px_rgba\(0\,0\,0\,\.03\)\][data-state=
=3D"checked"] { --tw-shadow: 0 0 2px rgba(0,0,0,.03); --tw-shadow-colored: =
0 0 2px var(--tw-shadow-color); box-shadow: var(--tw-ring-offset-shadow,0 0=
 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

@-webkit-keyframes alertShow {=20
  0% { opacity: 0; transform: translate(-50%, -48%) scale(0.96); }
  100% { opacity: 1; transform: translate(-50%, -50%) scale(1); }
}

@keyframes alertShow {=20
  0% { opacity: 0; transform: translate(-50%, -48%) scale(0.96); }
  100% { opacity: 1; transform: translate(-50%, -50%) scale(1); }
}

.radix-state-open\:animate-alertShow[data-state=3D"open"] { animation: 0.15=
s cubic-bezier(0.16, 1, 0.3, 1) 0s 1 normal none running alertShow; }

@-webkit-keyframes contentShow {=20
  0% { opacity: 0; transform: scale(0.96); }
  100% { opacity: 1; transform: scale(1); }
}

@keyframes contentShow {=20
  0% { opacity: 0; transform: scale(0.96); }
  100% { opacity: 1; transform: scale(1); }
}

.radix-state-open\:animate-contentShow[data-state=3D"open"] { animation: 0.=
15s cubic-bezier(0.16, 1, 0.3, 1) 0s 1 normal none running contentShow; }

@-webkit-keyframes show {=20
  0% { opacity: 0; }
  100% { opacity: 1; }
}

@keyframes show {=20
  0% { opacity: 0; }
  100% { opacity: 1; }
}

.radix-state-open\:animate-show[data-state=3D"open"] { animation: 0.1s cubi=
c-bezier(0.16, 1, 0.3, 1) 0s 1 normal none running show; }

.radix-state-open\:bg-token-border-light[data-state=3D"open"] { background-=
color: var(--border-light); }

.radix-state-open\:bg-token-main-surface-secondary[data-state=3D"open"] { b=
ackground-color: var(--main-surface-secondary); }

.radix-state-open\:text-token-text-secondary[data-state=3D"open"] { color: =
var(--text-secondary); }

.radix-state-open\:text-token-text-tertiary[data-state=3D"open"] { color: v=
ar(--text-tertiary); }

@-webkit-keyframes slideUpAndFade {=20
  0% { opacity: 0; transform: translateY(2px); }
  100% { opacity: 1; transform: translateY(0px); }
}

@keyframes slideUpAndFade {=20
  0% { opacity: 0; transform: translateY(2px); }
  100% { opacity: 1; transform: translateY(0px); }
}

.radix-side-bottom\:animate-slideUpAndFade[data-side=3D"bottom"] { animatio=
n: 0.4s cubic-bezier(0.16, 1, 0.3, 1) 0s 1 normal none running slideUpAndFa=
de; }

@-webkit-keyframes slideRightAndFade {=20
  0% { opacity: 0; transform: translateX(-2px); }
  100% { opacity: 1; transform: translateX(0px); }
}

@keyframes slideRightAndFade {=20
  0% { opacity: 0; transform: translateX(-2px); }
  100% { opacity: 1; transform: translateX(0px); }
}

.radix-side-left\:animate-slideRightAndFade[data-side=3D"left"] { animation=
: 0.4s cubic-bezier(0.16, 1, 0.3, 1) 0s 1 normal none running slideRightAnd=
Fade; }

@keyframes slideLeftAndFade {=20
  0% { opacity: 0; transform: translateX(2px); }
  100% { opacity: 1; transform: translateX(0px); }
}

.radix-side-right\:animate-slideLeftAndFade[data-side=3D"right"] { animatio=
n: 0.4s cubic-bezier(0.16, 1, 0.3, 1) 0s 1 normal none running slideLeftAnd=
Fade; }

@-webkit-keyframes slideDownAndFade {=20
  0% { opacity: 0; transform: translateY(-2px); }
  100% { opacity: 1; transform: translateY(0px); }
}

@keyframes slideDownAndFade {=20
  0% { opacity: 0; transform: translateY(-2px); }
  100% { opacity: 1; transform: translateY(0px); }
}

.radix-side-top\:animate-slideDownAndFade[data-side=3D"top"] { animation: 0=
.4s cubic-bezier(0.16, 1, 0.3, 1) 0s 1 normal none running slideDownAndFade=
; }

.group-ui-open\:bg-token-sidebar-surface-secondary.group[data-headlessui-st=
ate~=3D"open"] { background-color: var(--sidebar-surface-secondary); }

.group:where([data-headlessui-state~=3D"open"]) .group-ui-open\:bg-token-si=
debar-surface-secondary { background-color: var(--sidebar-surface-secondary=
); }

:is(.dark .dark\:divide-gray-900) > :not([hidden]) ~ :not([hidden]) { --tw-=
divide-opacity: 1; border-color: rgba(23,23,23,var(--tw-divide-opacity)); }

.dark .dark\:border { border-width: 1px; }

.dark .dark\:border-b { border-bottom-width: 1px; }

.dark .dark\:border-r { border-right-width: 1px; }

.dark .dark\:border-black\/20 { border-color: rgba(0, 0, 0, 0.2); }

.dark .dark\:border-gray-200 { --tw-border-opacity: 1; border-color: rgba(2=
27,227,227,var(--tw-border-opacity)); }

.dark .dark\:border-gray-300 { --tw-border-opacity: 1; border-color: rgba(2=
05,205,205,var(--tw-border-opacity)); }

.dark .dark\:border-gray-500 { --tw-border-opacity: 1; border-color: rgba(1=
55,155,155,var(--tw-border-opacity)); }

.dark .dark\:border-gray-600 { --tw-border-opacity: 1; border-color: rgba(1=
03,103,103,var(--tw-border-opacity)); }

.dark .dark\:border-gray-700 { --tw-border-opacity: 1; border-color: rgba(7=
8,78,78,var(--tw-border-opacity)); }

.dark .dark\:border-gray-800 { --tw-border-opacity: 1; border-color: rgba(3=
8,38,38,var(--tw-border-opacity)); }

.dark .dark\:border-token-border-heavy { border-color: var(--border-heavy);=
 }

.dark .dark\:border-token-border-medium { border-color: var(--border-medium=
); }

.dark .dark\:border-white { --tw-border-opacity: 1; border-color: rgba(255,=
255,255,var(--tw-border-opacity)); }

.dark .dark\:border-white\/10 { border-color: rgba(255, 255, 255, 0.1); }

.dark .dark\:border-white\/20 { border-color: rgba(255, 255, 255, 0.2); }

.dark .dark\:border-white\/30 { border-color: rgba(255, 255, 255, 0.3); }

.dark .dark\:bg-\[\#272832\] { --tw-bg-opacity: 1; background-color: rgba(3=
9,40,50,var(--tw-bg-opacity)); }

.dark .dark\:bg-\[rgba\(255\,255\,255\,0\.15\)\] { background-color: rgba(2=
55, 255, 255, 0.15); }

.dark .dark\:bg-black { --tw-bg-opacity: 1; background-color: rgba(0,0,0,va=
r(--tw-bg-opacity)); }

.dark .dark\:bg-black\/25 { background-color: rgba(0, 0, 0, 0.25); }

.dark .dark\:bg-black\/80 { background-color: rgba(0, 0, 0, 0.8); }

.dark .dark\:bg-brand-green\/50 { background-color: rgba(25, 195, 125, 0.5)=
; }

.dark .dark\:bg-gray-100 { --tw-bg-opacity: 1; background-color: rgba(236,2=
36,236,var(--tw-bg-opacity)); }

.dark .dark\:bg-gray-50 { --tw-bg-opacity: 1; background-color: rgba(249,24=
9,249,var(--tw-bg-opacity)); }

.dark .dark\:bg-gray-500 { --tw-bg-opacity: 1; background-color: rgba(155,1=
55,155,var(--tw-bg-opacity)); }

.dark .dark\:bg-gray-600 { --tw-bg-opacity: 1; background-color: rgba(103,1=
03,103,var(--tw-bg-opacity)); }

.dark .dark\:bg-gray-700 { --tw-bg-opacity: 1; background-color: rgba(78,78=
,78,var(--tw-bg-opacity)); }

.dark .dark\:bg-gray-900 { --tw-bg-opacity: 1; background-color: rgba(23,23=
,23,var(--tw-bg-opacity)); }

.dark .dark\:bg-orange-500 { --tw-bg-opacity: 1; background-color: rgba(224=
,108,43,var(--tw-bg-opacity)); }

.dark .dark\:bg-red-200 { --tw-bg-opacity: 1; background-color: rgba(254,20=
2,202,var(--tw-bg-opacity)); }

.dark .dark\:bg-transparent { background-color: transparent; }

.dark .dark\:bg-white { --tw-bg-opacity: 1; background-color: rgba(255,255,=
255,var(--tw-bg-opacity)); }

.dark .dark\:bg-white\/5 { background-color: rgba(255, 255, 255, 0.05); }

.dark .dark\:from-gray-800 { --tw-gradient-from: #262626 var(--tw-gradient-=
from-position); --tw-gradient-to: rgba(38,38,38,0) var(--tw-gradient-to-pos=
ition); --tw-gradient-stops: var(--tw-gradient-from),var(--tw-gradient-to);=
 }

.dark .dark\:stroke-brand-purple\/50 { stroke: rgba(171, 104, 255, 0.5); }

.dark .dark\:text-\[\#D292FF\] { --tw-text-opacity: 1; color: rgba(210,146,=
255,var(--tw-text-opacity)); }

.dark .dark\:text-black { --tw-text-opacity: 1; color: rgba(0,0,0,var(--tw-=
text-opacity)); }

.dark .dark\:text-blue-400 { --tw-text-opacity: 1; color: rgba(58,136,255,v=
ar(--tw-text-opacity)); }

.dark .dark\:text-blue-600 { --tw-text-opacity: 1; color: rgba(37,99,235,va=
r(--tw-text-opacity)); }

.dark .dark\:text-gray-700 { --tw-text-opacity: 1; color: rgba(78,78,78,var=
(--tw-text-opacity)); }

.dark .dark\:text-gray-900 { --tw-text-opacity: 1; color: rgba(23,23,23,var=
(--tw-text-opacity)); }

.dark .dark\:text-green-100 { --tw-text-opacity: 1; color: rgba(210,244,211=
,var(--tw-text-opacity)); }

.dark .dark\:text-red-500 { --tw-text-opacity: 1; color: rgba(239,68,68,var=
(--tw-text-opacity)); }

.dark .dark\:text-red-800 { --tw-text-opacity: 1; color: rgba(153,27,27,var=
(--tw-text-opacity)); }

.dark .dark\:text-token-text-secondary { color: var(--text-secondary); }

.dark .dark\:text-white { --tw-text-opacity: 1; color: rgba(255,255,255,var=
(--tw-text-opacity)); }

.dark .dark\:text-white\/60 { color: rgba(255, 255, 255, 0.6); }

.dark .dark\:text-white\/70 { color: rgba(255, 255, 255, 0.7); }

:is(.dark .dark\:placeholder-white\/50)::-webkit-input-placeholder { color:=
 rgba(255, 255, 255, 0.5); }

:is(.dark .dark\:placeholder-white\/50)::placeholder { color: rgba(255, 255=
, 255, 0.5); }

.dark .dark\:opacity-60 { opacity: 0.6; }

.dark .dark\:shadow-\[inset_0_0_0_1px_rgba\(255\,255\,255\,0\.1\)\] { --tw-=
shadow: inset 0 0 0 1px hsla(0,0%,100%,.1); --tw-shadow-colored: inset 0 0 =
0 1px var(--tw-shadow-color); }

.dark .dark\:shadow-\[inset_0_0_0_1px_rgba\(255\,255\,255\,0\.1\)\], .dark =
.dark\:shadow-none { box-shadow: var(--tw-ring-offset-shadow,0 0 transparen=
t),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.dark .dark\:shadow-none { --tw-shadow: 0 0 transparent; --tw-shadow-colore=
d: 0 0 transparent; }

.dark .dark\:ring-white\/20 { --tw-ring-color: hsla(0,0%,100%,.2); }

:is(.dark .dark\:placeholder\:text-token-text-secondary)::-webkit-input-pla=
ceholder { color: var(--text-secondary); }

:is(.dark .dark\:placeholder\:text-token-text-secondary)::placeholder { col=
or: var(--text-secondary); }

:is(.dark .placeholder\:dark\:text-white)::-webkit-input-placeholder { --tw=
-text-opacity: 1; color: rgba(255,255,255,var(--tw-text-opacity)); }

:is(.dark .placeholder\:dark\:text-white)::placeholder { --tw-text-opacity:=
 1; color: rgba(255,255,255,var(--tw-text-opacity)); }

.dark .dark\:last\:border-0:last-child { border-width: 0px; }

.dark .dark\:focus-within\:border-token-border-xheavy[focus-within] { borde=
r-color: var(--border-xheavy); }

.dark .dark\:focus-within\:border-token-border-xheavy:focus-within { border=
-color: var(--border-xheavy); }

.dark .dark\:focus-within\:ring-0[focus-within] { --tw-ring-offset-shadow: =
var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset=
-color); --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-of=
fset-width)) var(--tw-ring-color); box-shadow: var(--tw-ring-offset-shadow)=
,var(--tw-ring-shadow),var(--tw-shadow,0 0 transparent); }

.dark .dark\:focus-within\:ring-0:focus-within { --tw-ring-offset-shadow: v=
ar(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-=
color); --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-off=
set-width)) var(--tw-ring-color); box-shadow: var(--tw-ring-offset-shadow),=
var(--tw-ring-shadow),var(--tw-shadow,0 0 transparent); }

.dark .dark\:hover\:border-gray-800:hover { --tw-border-opacity: 1; border-=
color: rgba(38,38,38,var(--tw-border-opacity)); }

.dark .dark\:hover\:border-white:hover { --tw-border-opacity: 1; border-col=
or: rgba(255,255,255,var(--tw-border-opacity)); }

.dark .dark\:hover\:bg-brand-green\/40:hover { background-color: rgba(25, 1=
95, 125, 0.4); }

.dark .dark\:hover\:bg-gray-200:hover { --tw-bg-opacity: 1; background-colo=
r: rgba(227,227,227,var(--tw-bg-opacity)); }

.dark .dark\:hover\:bg-gray-500\/10:hover { background-color: rgba(156, 156=
, 156, 0.1); }

.dark .dark\:hover\:bg-gray-700:hover { --tw-bg-opacity: 1; background-colo=
r: rgba(78,78,78,var(--tw-bg-opacity)); }

.dark .dark\:hover\:bg-gray-800:hover { --tw-bg-opacity: 1; background-colo=
r: rgba(38,38,38,var(--tw-bg-opacity)); }

.dark .dark\:hover\:bg-token-main-surface-secondary:hover { background-colo=
r: var(--main-surface-secondary); }

.dark .dark\:hover\:bg-white:hover { --tw-bg-opacity: 1; background-color: =
rgba(255,255,255,var(--tw-bg-opacity)); }

.dark .dark\:hover\:bg-white\/10:hover { background-color: rgba(255, 255, 2=
55, 0.1); }

.dark .dark\:hover\:bg-white\/20:hover { background-color: rgba(255, 255, 2=
55, 0.2); }

:is(.dark .hover\:dark\:bg-white\/10):hover { background-color: rgba(255, 2=
55, 255, 0.1); }

.dark .dark\:hover\:text-blue-600:hover { --tw-text-opacity: 1; color: rgba=
(37,99,235,var(--tw-text-opacity)); }

.dark .dark\:hover\:text-token-text-primary:hover { color: var(--text-prima=
ry); }

.dark .dark\:hover\:text-white\/50:hover { color: rgba(255, 255, 255, 0.5);=
 }

.dark .dark\:focus\:border-white:focus { --tw-border-opacity: 1; border-col=
or: rgba(255,255,255,var(--tw-border-opacity)); }

.dark .dark\:focus\:ring-gray-600:focus { --tw-ring-opacity: 1; --tw-ring-c=
olor: rgba(103,103,103,var(--tw-ring-opacity)); }

.dark .dark\:focus\:ring-white:focus { --tw-ring-opacity: 1; --tw-ring-colo=
r: rgba(255,255,255,var(--tw-ring-opacity)); }

.dark .dark\:focus-visible\:border-green-500.focus-visible { --tw-border-op=
acity: 1; border-color: rgba(25,195,125,var(--tw-border-opacity)); }

.dark .dark\:focus-visible\:border-green-500:focus-visible { --tw-border-op=
acity: 1; border-color: rgba(25,195,125,var(--tw-border-opacity)); }

.dark .dark\:disabled\:text-gray-400:disabled { --tw-text-opacity: 1; color=
: rgba(180,180,180,var(--tw-text-opacity)); }

.dark .dark\:disabled\:hover\:bg-white:hover:disabled { --tw-bg-opacity: 1;=
 background-color: rgba(255,255,255,var(--tw-bg-opacity)); }

.dark .dark\:radix-disabled\:bg-transparent[data-disabled] { background-col=
or: transparent; }

.dark .dark\:radix-highlighted\:bg-gray-700[data-highlighted] { --tw-bg-opa=
city: 1; background-color: rgba(78,78,78,var(--tw-bg-opacity)); }

.dark .dark\:radix-state-active\:bg-token-main-surface-tertiary[data-state=
=3D"active"] { background-color: var(--main-surface-tertiary); }

.dark .dark\:radix-state-open\:text-gray-400[data-state=3D"open"] { --tw-te=
xt-opacity: 1; color: rgba(180,180,180,var(--tw-text-opacity)); }

@media (min-width: 640px) {
  .sm\:absolute { position: absolute; }
  .sm\:left-16 { left: 4rem; }
  .sm\:-mx-6 { margin-left: -1.5rem; margin-right: -1.5rem; }
  .sm\:mb-2 { margin-bottom: 0.5rem; }
  .sm\:mb-4 { margin-bottom: 1rem; }
  .sm\:mt-0 { margin-top: 0px; }
  .sm\:mt-16 { margin-top: 4rem; }
  .sm\:mt-4 { margin-top: 1rem; }
  .sm\:block { display: block; }
  .sm\:inline-block { display: inline-block; }
  .sm\:flex { display: flex; }
  .sm\:h-10 { height: 2.5rem; }
  .sm\:w-10 { width: 2.5rem; }
  .sm\:w-\[calc\(\(100\%-12px\)\/2\)\] { width: calc(50% - 6px); }
  .sm\:max-w-2xl { max-width: 42rem; }
  .sm\:max-w-xs { max-width: 20rem; }
  .sm\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }
  .sm\:grid-cols-3 { grid-template-columns: repeat(3, minmax(0px, 1fr)); }
  .sm\:grid-rows-2 { grid-template-rows: repeat(2, minmax(0px, 1fr)); }
  .sm\:flex-row { flex-direction: row; }
  .sm\:flex-row-reverse { flex-direction: row-reverse; }
  .sm\:items-center { align-items: center; }
  .sm\:gap-3 { gap: 0.75rem; }
  .sm\:gap-y-0 { row-gap: 0px; }
  .sm\:rounded-lg { border-radius: 0.5rem; }
  .sm\:rounded-md { border-radius: 0.375rem; }
  .sm\:rounded-t-\[30px\] { border-top-left-radius: 30px; border-top-right-=
radius: 30px; }
  .sm\:p-2 { padding: 0.5rem; }
  .sm\:p-3 { padding: 0.75rem; }
  .sm\:p-4 { padding: 1rem; }
  .sm\:p-6 { padding: 1.5rem; }
  .sm\:px-0 { padding-left: 0px; padding-right: 0px; }
  .sm\:px-2 { padding-left: 0.5rem; padding-right: 0.5rem; }
  .sm\:px-6 { padding-left: 1.5rem; padding-right: 1.5rem; }
  .sm\:pb-0 { padding-bottom: 0px; }
  .sm\:pb-2 { padding-bottom: 0.5rem; }
  .sm\:pb-6 { padding-bottom: 1.5rem; }
  .sm\:pr-2 { padding-right: 0.5rem; }
  .sm\:pt-4 { padding-top: 1rem; }
  .sm\:pt-8 { padding-top: 2rem; }
  .sm\:text-4xl { font-size: 2.25rem; line-height: 2.5rem; }
  .sm\:text-base { font-size: 1rem; line-height: 1.5rem; }
  .sm\:text-sm { font-size: 0.875rem; line-height: 1.25rem; }
  .sm\:duration-300 { transition-duration: 0.3s; }
  .sm\:duration-500 { transition-duration: 0.5s; }
  @supports (min-height:100dvh) {
  .sm\:supports-\[min-height\:100dvh\]\:min-h-\[100dvh\] { min-height: 100d=
vh; }
}
}

@media (min-width: 768px) {
  .md\:invisible { visibility: hidden; }
  .md\:static { position: static; }
  .md\:-left-4 { left: -1rem; }
  .md\:-right-4 { right: -1rem; }
  .md\:bottom-3 { bottom: 0.75rem; }
  .md\:left-4 { left: 1rem; }
  .md\:left-\[23px\] { left: 23px; }
  .md\:right-3 { right: 0.75rem; }
  .md\:right-\[21px\] { right: 21px; }
  .md\:top-\[150px\] { top: 150px; }
  .md\:top-\[21px\] { top: 21px; }
  .md\:top-\[22px\] { top: 22px; }
  .md\:top-\[250px\] { top: 250px; }
  .md\:col-span-1 { grid-column: span 1 / span 1; }
  .md\:col-span-2 { grid-column: span 2 / span 2; }
  .md\:m-0 { margin: 0px; }
  .md\:m-auto { margin: auto; }
  .md\:mx-4 { margin-left: 1rem; margin-right: 1rem; }
  .md\:my-4 { margin-bottom: 1rem; margin-top: 1rem; }
  .md\:-mb-16 { margin-bottom: -4rem; }
  .md\:mb-0 { margin-bottom: 0px; }
  .md\:mb-3 { margin-bottom: 0.75rem; }
  .md\:mb-4 { margin-bottom: 1rem; }
  .md\:ml-0 { margin-left: 0px; }
  .md\:ml-8 { margin-left: 2rem; }
  .md\:ml-\[-8px\] { margin-left: -8px; }
  .md\:mt-2 { margin-top: 0.5rem; }
  .md\:mt-3 { margin-top: 0.75rem; }
  .md\:mt-5 { margin-top: 1.25rem; }
  .md\:line-clamp-3 { -webkit-box-orient: vertical; -webkit-line-clamp: 3; =
display: -webkit-box; overflow: hidden; }
  .md\:block { display: block; }
  .md\:flex { display: flex; }
  .md\:inline-flex { display: inline-flex; }
  .md\:grid { display: grid; }
  .md\:hidden { display: none; }
  .md\:h-14 { height: 3.5rem; }
  .md\:h-16 { height: 4rem; }
  .md\:h-24 { height: 6rem; }
  .md\:h-32 { height: 8rem; }
  .md\:h-6 { height: 1.5rem; }
  .md\:h-\[30px\] { height: 30px; }
  .md\:h-\[72px\] { height: 72px; }
  .md\:max-h-\[80vh\] { max-height: 80vh; }
  .md\:max-h-\[calc\(100vh-300px\)\] { max-height: calc(-300px + 100vh); }
  .md\:min-h-0 { min-height: 0px; }
  .md\:min-h-\[380px\] { min-height: 380px; }
  .md\:w-1\/2 { width: 50%; }
  .md\:w-1\/3 { width: 33.3333%; }
  .md\:w-16 { width: 4rem; }
  .md\:w-24 { width: 6rem; }
  .md\:w-3\/5 { width: 60%; }
  .md\:w-6 { width: 1.5rem; }
  .md\:w-\[100px\] { width: 100px; }
  .md\:w-\[250px\] { width: 250px; }
  .md\:w-\[26rem\] { width: 26rem; }
  .md\:w-\[30px\] { width: 30px; }
  .md\:w-\[500px\] { width: 500px; }
  .md\:w-\[672px\] { width: 672px; }
  .md\:w-\[calc\(100\%-\.5rem\)\] { width: calc(100% - 0.5rem); }
  .md\:w-\[calc\(100\%-16rem\)\] { width: calc(100% - 16rem); }
  .md\:w-auto { width: auto; }
  .md\:w-full { width: 100%; }
  .md\:min-w-\[180px\] { min-width: 180px; }
  .md\:min-w-\[672px\] { min-width: 672px; }
  .md\:max-w-2xl { max-width: 42rem; }
  .md\:max-w-3xl { max-width: 48rem; }
  .md\:max-w-4xl { max-width: 56rem; }
  .md\:max-w-\[672px\] { max-width: 672px; }
  .md\:max-w-\[680px\] { max-width: 680px; }
  .md\:max-w-lg { max-width: 32rem; }
  .md\:max-w-none { max-width: none; }
  .md\:max-w-xs { max-width: 20rem; }
  .md\:grow-0 { flex-grow: 0; }
  .md\:basis-0 { flex-basis: 0px; }
  .md\:basis-\[25vw\] { flex-basis: 25vw; }
  .md\:basis-\[75vw\] { flex-basis: 75vw; }
  .md\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }
  .md\:grid-rows-\[minmax\(20px\,_1fr\)_auto_minmax\(20px\,_1fr\)\] { grid-=
template-rows: minmax(20px, 1fr) auto minmax(20px, 1fr); }
  .md\:flex-row { flex-direction: row; }
  .md\:flex-col { flex-direction: column; }
  .md\:items-start { align-items: flex-start; }
  .md\:items-end { align-items: flex-end; }
  .md\:justify-between { justify-content: space-between; }
  .md\:gap-2 { gap: 0.5rem; }
  .md\:gap-3 { gap: 0.75rem; }
  .md\:gap-6 { gap: 1.5rem; }
  .md\:gap-x-2 { column-gap: 0.5rem; }
  .md\:gap-y-1 { row-gap: 0.25rem; }
  .md\:gap-y-1\.5 { row-gap: 0.375rem; }
  .md\:overflow-hidden { overflow: hidden; }
  .md\:overflow-visible { overflow: visible; }
  .md\:whitespace-normal { white-space: normal; }
  .md\:rounded-2xl { border-radius: 1rem; }
  .md\:rounded-lg { border-radius: 0.5rem; }
  .md\:rounded-none { border-radius: 0px; }
  .md\:border { border-width: 1px; }
  .md\:border-b-2 { border-bottom-width: 2px; }
  .md\:border-l { border-left-width: 1px; }
  .md\:border-r { border-right-width: 1px; }
  .md\:border-t-0 { border-top-width: 0px; }
  .md\:border-gray-100 { --tw-border-opacity: 1; border-color: rgba(236,236=
,236,var(--tw-border-opacity)); }
  .md\:border-transparent { border-color: transparent; }
  .md\:\!bg-transparent { background-color: transparent !important; }
  .md\:bg-transparent { background-color: transparent; }
  .md\:bg-vert-light-gradient { background-image: linear-gradient(rgba(255,=
 255, 255, 0) 13.94%, rgb(255, 255, 255) 54.73%); }
  .md\:p-0 { padding: 0px; }
  .md\:p-0\.5 { padding: 0.125rem; }
  .md\:p-1 { padding: 0.25rem; }
  .md\:p-2 { padding: 0.5rem; }
  .md\:p-6 { padding: 1.5rem; }
  .md\:px-0 { padding-left: 0px; padding-right: 0px; }
  .md\:px-2 { padding-left: 0.5rem; padding-right: 0.5rem; }
  .md\:px-3 { padding-left: 0.75rem; padding-right: 0.75rem; }
  .md\:px-4 { padding-left: 1rem; padding-right: 1rem; }
  .md\:px-5 { padding-left: 1.25rem; padding-right: 1.25rem; }
  .md\:px-6 { padding-left: 1.5rem; padding-right: 1.5rem; }
  .md\:px-\[60px\] { padding-left: 60px; padding-right: 60px; }
  .md\:py-2 { padding-bottom: 0.5rem; padding-top: 0.5rem; }
  .md\:py-3 { padding-bottom: 0.75rem; padding-top: 0.75rem; }
  .md\:py-3\.5 { padding-bottom: 0.875rem; padding-top: 0.875rem; }
  .md\:py-4 { padding-bottom: 1rem; padding-top: 1rem; }
  .md\:py-6 { padding-bottom: 1.5rem; padding-top: 1.5rem; }
  .md\:py-\[22px\] { padding-bottom: 22px; padding-top: 22px; }
  .md\:\!pt-0 { padding-top: 0px !important; }
  .md\:pb-0 { padding-bottom: 0px; }
  .md\:pb-5 { padding-bottom: 1.25rem; }
  .md\:pb-6 { padding-bottom: 1.5rem; }
  .md\:pl-0 { padding-left: 0px; }
  .md\:pl-16 { padding-left: 4rem; }
  .md\:pl-2 { padding-left: 0.5rem; }
  .md\:pl-4 { padding-left: 1rem; }
  .md\:pl-6 { padding-left: 1.5rem; }
  .md\:pl-\[55px\] { padding-left: 55px; }
  .md\:pr-12 { padding-right: 3rem; }
  .md\:pr-4 { padding-right: 1rem; }
  .md\:pr-8 { padding-right: 2rem; }
  .md\:pr-\[72px\] { padding-right: 72px; }
  .md\:pt-0 { padding-top: 0px; }
  .md\:pt-4 { padding-top: 1rem; }
  .md\:pt-5 { padding-top: 1.25rem; }
  .md\:text-justify { text-align: justify; }
  .md\:text-2xl { font-size: 1.5rem; line-height: 2rem; }
  .md\:text-5xl { font-size: 3rem; line-height: 1; }
  .md\:text-\[32px\] { font-size: 32px; }
  .md\:text-\[40px\] { font-size: 40px; }
  .md\:text-base { font-size: 1rem; line-height: 1.5rem; }
  .md\:text-lg { font-size: 1.125rem; line-height: 1.75rem; }
  .md\:leading-8 { line-height: 2rem; }
  .md\:leading-tight { line-height: 1.25; }
  .md\:text-token-text-primary { color: var(--text-primary); }
  .md\:text-token-text-tertiary { color: var(--text-tertiary); }
  .md\:opacity-0 { opacity: 0; }
  .md\:first\:ml-0:first-child { margin-left: 0px; }
  .md\:last\:mb-6:last-child { margin-bottom: 1.5rem; }
  .md\:last\:mr-0:last-child { margin-right: 0px; }
  .md\:hover\:bg-gray-50:hover { --tw-bg-opacity: 1; background-color: rgba=
(249,249,249,var(--tw-bg-opacity)); }
  .group.final-completion .md\:group-\[\.final-completion\]\:visible, .grou=
p:hover .md\:group-hover\:visible { visibility: visible; }
  .md\:radix-state-active\:bg-token-main-surface-secondary[data-state=3D"ac=
tive"] { background-color: var(--main-surface-secondary); }
  .md\:radix-state-active\:bg-token-main-surface-tertiary[data-state=3D"act=
ive"] { background-color: var(--main-surface-tertiary); }
  .md\:radix-state-active\:text-token-text-primary[data-state=3D"active"] {=
 color: var(--text-primary); }
  .dark .md\:dark\:border-gray-700 { --tw-border-opacity: 1; border-color: =
rgba(78,78,78,var(--tw-border-opacity)); }
  .dark .md\:dark\:border-transparent { border-color: transparent; }
  .dark .dark\:md\:bg-transparent { background-color: transparent; }
  .dark .dark\:md\:bg-vert-dark-gradient { background-image: linear-gradien=
t(rgba(53, 55, 64, 0), rgb(53, 55, 64) 58.85%); }
  .dark .dark\:md\:hover\:bg-gray-700:hover { --tw-bg-opacity: 1; backgroun=
d-color: rgba(78,78,78,var(--tw-bg-opacity)); }
}

@media (min-width: 1024px) {
  .lg\:relative { position: relative; }
  .lg\:-left-3 { left: -0.75rem; }
  .lg\:-right-3 { right: -0.75rem; }
  .lg\:left-auto { left: auto; }
  .lg\:top-1\/2 { top: 50%; }
  .lg\:-mx-8 { margin-left: -2rem; margin-right: -2rem; }
  .lg\:mx-auto { margin-left: auto; margin-right: auto; }
  .lg\:mb-0 { margin-bottom: 0px; }
  .lg\:flex { display: flex; }
  .lg\:hidden { display: none; }
  .lg\:h-36 { height: 9rem; }
  .lg\:w-3\/5 { width: 60%; }
  .lg\:w-\[300px\] { width: 300px; }
  .lg\:w-\[896px\] { width: 896px; }
  .lg\:w-\[calc\(\(100\%-24px\)\/3\)\] { width: calc(33.3333% - 8px); }
  .lg\:w-auto { width: auto; }
  .lg\:w-full { width: 100%; }
  .lg\:min-w-\[896px\] { min-width: 896px; }
  .lg\:\!max-w-lg { max-width: 32rem !important; }
  .lg\:max-w-2xl { max-width: 42rem; }
  .lg\:max-w-\[38rem\] { max-width: 38rem; }
  .lg\:max-w-\[40rem\] { max-width: 40rem; }
  .lg\:max-w-\[796px\] { max-width: 796px; }
  .lg\:max-w-\[896px\] { max-width: 896px; }
  .lg\:max-w-md { max-width: 28rem; }
  .lg\:max-w-none { max-width: none; }
  .lg\:max-w-sm { max-width: 24rem; }
  .lg\:-translate-x-full { --tw-translate-x: -100%; }
  .lg\:-translate-x-full, .lg\:-translate-y-1\/2 { transform: translate(var=
(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(va=
r(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(va=
r(--tw-scale-y)); }
  .lg\:-translate-y-1\/2 { --tw-translate-y: -50%; }
  .lg\:translate-x-full { --tw-translate-x: 100%; }
  .lg\:translate-x-full, .lg\:translate-y-0 { transform: translate(var(--tw=
-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--t=
w-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--t=
w-scale-y)); }
  .lg\:translate-y-0 { --tw-translate-y: 0px; }
  .lg\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }
  .lg\:grid-cols-3 { grid-template-columns: repeat(3, minmax(0px, 1fr)); }
  .lg\:grid-cols-4 { grid-template-columns: repeat(4, minmax(0px, 1fr)); }
  .lg\:grid-cols-\[60\%_40\%\] { grid-template-columns: 60% 40%; }
  .lg\:flex-row { flex-direction: row; }
  .lg\:justify-start { justify-content: flex-start; }
  .lg\:justify-between { justify-content: space-between; }
  .lg\:gap-x-3 { column-gap: 0.75rem; }
  .lg\:gap-y-2 { row-gap: 0.5rem; }
  .lg\:gap-y-2\.5 { row-gap: 0.625rem; }
  .lg\:self-center { align-self: center; }
  .lg\:rounded-lg { border-radius: 0.5rem; }
  .lg\:rounded-none { border-radius: 0px; }
  .lg\:border { border-width: 1px; }
  .lg\:border-0 { border-width: 0px; }
  .lg\:p-0 { padding: 0px; }
  .lg\:p-6 { padding: 1.5rem; }
  .lg\:px-1 { padding-left: 0.25rem; padding-right: 0.25rem; }
  .lg\:px-10 { padding-left: 2.5rem; padding-right: 2.5rem; }
  .lg\:px-14 { padding-left: 3.5rem; padding-right: 3.5rem; }
  .lg\:px-3 { padding-left: 0.75rem; padding-right: 0.75rem; }
  .lg\:px-4 { padding-left: 1rem; padding-right: 1rem; }
  .lg\:px-8 { padding-left: 2rem; padding-right: 2rem; }
  .lg\:py-10 { padding-bottom: 2.5rem; padding-top: 2.5rem; }
  .lg\:py-3 { padding-bottom: 0.75rem; padding-top: 0.75rem; }
  .lg\:py-6 { padding-bottom: 1.5rem; padding-top: 1.5rem; }
  .lg\:pl-8 { padding-left: 2rem; }
  .lg\:pr-10 { padding-right: 2.5rem; }
  .lg\:pt-32 { padding-top: 8rem; }
  .lg\:text-left { text-align: left; }
  .lg\:text-\[22px\] { font-size: 22px; }
}

@media (min-width: 1280px) {
  .xl\:w-\[1024px\] { width: 1024px; }
  .xl\:w-\[350px\] { width: 350px; }
  .xl\:min-w-\[1024px\] { min-width: 1024px; }
  .xl\:max-w-3xl { max-width: 48rem; }
  .xl\:max-w-4xl { max-width: 56rem; }
  .xl\:max-w-6xl { max-width: 72rem; }
  .xl\:max-w-\[48rem\] { max-width: 48rem; }
  .xl\:max-w-xl { max-width: 36rem; }
  .xl\:max-w-xs { max-width: 20rem; }
  .xl\:grid-cols-4 { grid-template-columns: repeat(4, minmax(0px, 1fr)); }
  .xl\:px-5 { padding-left: 1.25rem; padding-right: 1.25rem; }
}

@media (min-width: 1536px) {
  .\32 xl\:w-\[400px\] { width: 400px; }
}

.\[\&\:has\(textarea\:focus\)\]\:min-h-\[124px\][\:has\(textarea\:focus\)] =
{ min-height: 124px; }

.\[\&\:has\(textarea\:focus\)\]\:min-h-\[124px\]:has(textarea:focus) { min-=
height: 124px; }

.\[\&\:has\(textarea\:focus\)\]\:border-token-border-xheavy[\:has\(textarea=
\:focus\)] { border-color: var(--border-xheavy); }

.\[\&\:has\(textarea\:focus\)\]\:border-token-border-xheavy:has(textarea:fo=
cus) { border-color: var(--border-xheavy); }

.\[\&\:has\(textarea\:focus\)\]\:shadow-\[0_2px_6px_rgba\(0\,0\,0\,\.05\)\]=
[\:has\(textarea\:focus\)] { --tw-shadow: 0 2px 6px rgba(0,0,0,.05); --tw-s=
hadow-colored: 0 2px 6px var(--tw-shadow-color); box-shadow: var(--tw-ring-=
offset-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 transparent),var(--=
tw-shadow); }

.\[\&\:has\(textarea\:focus\)\]\:shadow-\[0_2px_6px_rgba\(0\,0\,0\,\.05\)\]=
:has(textarea:focus) { --tw-shadow: 0 2px 6px rgba(0,0,0,.05); --tw-shadow-=
colored: 0 2px 6px var(--tw-shadow-color); box-shadow: var(--tw-ring-offset=
-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-sha=
dow); }

.\[\&\:has\(textarea\:focus\)\]\:shadow-\[0_4px_12px_rgba\(0\,0\,0\,\.08\)\=
,0_0_0_1px_var\(--border-heavy\)\][\:has\(textarea\:focus\)] { --tw-shadow:=
 0 4px 12px rgba(0,0,0,.08),0 0 0 1px var(--border-heavy); --tw-shadow-colo=
red: 0 4px 12px var(--tw-shadow-color),0 0 0 1px var(--tw-shadow-color); bo=
x-shadow: var(--tw-ring-offset-shadow,0 0 transparent),var(--tw-ring-shadow=
,0 0 transparent),var(--tw-shadow); }

.\[\&\:has\(textarea\:focus\)\]\:shadow-\[0_4px_12px_rgba\(0\,0\,0\,\.08\)\=
,0_0_0_1px_var\(--border-heavy\)\]:has(textarea:focus) { --tw-shadow: 0 4px=
 12px rgba(0,0,0,.08),0 0 0 1px var(--border-heavy); --tw-shadow-colored: 0=
 4px 12px var(--tw-shadow-color),0 0 0 1px var(--tw-shadow-color); box-shad=
ow: var(--tw-ring-offset-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 t=
ransparent),var(--tw-shadow); }

.\[\&\>div\:nth-child\(2\)\]\:overflow-y-hidden > div:nth-child(2) { overfl=
ow-y: hidden; }

.text-message + .\[\.text-message\+\&\]\:mt-5 { margin-top: 1.25rem; }

tr:last-child .\[tr\:last-child_\&\]\:border-b-0 { border-bottom-width: 0px=
; }

tr[data-disabled=3D"true"] .\[tr\[data-disabled\=3Dtrue\]_\&\]\:opacity-50 =
{ opacity: 0.5; }

@font-face { font-family: KaTeX_AMS; font-style: normal; font-weight: 400; =
src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_AMS-Regular.a7=
9f1c31.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Caligraphic; font-style: normal; font-weigh=
t: 700; src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_Caligr=
aphic-Bold.ec17d132.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Caligraphic; font-style: normal; font-weigh=
t: 400; src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_Caligr=
aphic-Regular.55fac258.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Fraktur; font-style: normal; font-weight: 7=
00; src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_Fraktur-Bo=
ld.d42a5579.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Fraktur; font-style: normal; font-weight: 4=
00; src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_Fraktur-Re=
gular.d3c882a6.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Main; font-style: normal; font-weight: 700;=
 src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_Main-Bold.c3f=
b5ac2.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Main; font-style: italic; font-weight: 700;=
 src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_Main-BoldItal=
ic.6f2bb1df.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Main; font-style: italic; font-weight: 400;=
 src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_Main-Italic.8=
916142b.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Main; font-style: normal; font-weight: 400;=
 src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_Main-Regular.=
0462f03b.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Math; font-style: italic; font-weight: 700;=
 src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_Math-BoldItal=
ic.572d331f.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Math; font-style: italic; font-weight: 400;=
 src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_Math-Italic.f=
28c23ac.woff2") format("woff2"); }

@font-face { font-family: KaTeX_SansSerif; font-style: normal; font-weight:=
 700; src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_SansSeri=
f-Bold.8c5b5494.woff2") format("woff2"); }

@font-face { font-family: KaTeX_SansSerif; font-style: italic; font-weight:=
 400; src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_SansSeri=
f-Italic.3b1e59b3.woff2") format("woff2"); }

@font-face { font-family: KaTeX_SansSerif; font-style: normal; font-weight:=
 400; src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_SansSeri=
f-Regular.ba21ed5f.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Script; font-style: normal; font-weight: 40=
0; src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_Script-Regu=
lar.03e9641d.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Size1; font-style: normal; font-weight: 400=
; src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_Size1-Regula=
r.eae34984.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Size2; font-style: normal; font-weight: 400=
; src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_Size2-Regula=
r.5916a24f.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Size3; font-style: normal; font-weight: 400=
; src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_Size3-Regula=
r.b4230e7e.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Size4; font-style: normal; font-weight: 400=
; src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_Size4-Regula=
r.10d95fd3.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Typewriter; font-style: normal; font-weight=
: 400; src: url("https://cdn.oaistatic.com/_next/static/media/KaTeX_Typewri=
ter-Regular.a8709e36.woff2") format("woff2"); }

.katex { font: 1.21em / 1.2 KaTeX_Main, "Times New Roman", serif; text-inde=
nt: 0px; text-rendering: auto; }

.katex * { border-color: currentcolor; }

.katex .katex-version::after { content: "0.16.0"; }

.katex .katex-mathml { clip: rect(1px, 1px, 1px, 1px); border: 0px; height:=
 1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; }

.katex .katex-html > .newline { display: block; }

.katex .base { position: relative; white-space: nowrap; width: min-content;=
 }

.katex .base, .katex .strut { display: inline-block; }

.katex .textbf { font-weight: 700; }

.katex .textit { font-style: italic; }

.katex .textrm { font-family: KaTeX_Main; }

.katex .textsf { font-family: KaTeX_SansSerif; }

.katex .texttt { font-family: KaTeX_Typewriter; }

.katex .mathnormal { font-family: KaTeX_Math; font-style: italic; }

.katex .mathit { font-family: KaTeX_Main; font-style: italic; }

.katex .mathrm { font-style: normal; }

.katex .mathbf { font-family: KaTeX_Main; font-weight: 700; }

.katex .boldsymbol { font-family: KaTeX_Math; font-style: italic; font-weig=
ht: 700; }

.katex .amsrm, .katex .mathbb, .katex .textbb { font-family: KaTeX_AMS; }

.katex .mathcal { font-family: KaTeX_Caligraphic; }

.katex .mathfrak, .katex .textfrak { font-family: KaTeX_Fraktur; }

.katex .mathtt { font-family: KaTeX_Typewriter; }

.katex .mathscr, .katex .textscr { font-family: KaTeX_Script; }

.katex .mathsf, .katex .textsf { font-family: KaTeX_SansSerif; }

.katex .mathboldsf, .katex .textboldsf { font-family: KaTeX_SansSerif; font=
-weight: 700; }

.katex .mathitsf, .katex .textitsf { font-family: KaTeX_SansSerif; font-sty=
le: italic; }

.katex .mainrm { font-family: KaTeX_Main; font-style: normal; }

.katex .vlist-t { border-collapse: collapse; display: inline-table; table-l=
ayout: fixed; }

.katex .vlist-r { display: table-row; }

.katex .vlist { display: table-cell; position: relative; vertical-align: bo=
ttom; }

.katex .vlist > span { display: block; height: 0px; position: relative; }

.katex .vlist > span > span { display: inline-block; }

.katex .vlist > span > .pstrut { overflow: hidden; width: 0px; }

.katex .vlist-t2 { margin-right: -2px; }

.katex .vlist-s { display: table-cell; font-size: 1px; min-width: 2px; vert=
ical-align: bottom; width: 2px; }

.katex .vbox { align-items: baseline; display: inline-flex; flex-direction:=
 column; }

.katex .hbox { width: 100%; }

.katex .hbox, .katex .thinbox { display: inline-flex; flex-direction: row; =
}

.katex .thinbox { max-width: 0px; width: 0px; }

.katex .msupsub { text-align: left; }

.katex .mfrac > span > span { text-align: center; }

.katex .mfrac .frac-line { border-bottom-style: solid; display: inline-bloc=
k; width: 100%; }

.katex .hdashline, .katex .hline, .katex .mfrac .frac-line, .katex .overlin=
e .overline-line, .katex .rule, .katex .underline .underline-line { min-hei=
ght: 1px; }

.katex .mspace { display: inline-block; }

.katex .clap, .katex .llap, .katex .rlap { position: relative; width: 0px; =
}

.katex .clap > .inner, .katex .llap > .inner, .katex .rlap > .inner { posit=
ion: absolute; }

.katex .clap > .fix, .katex .llap > .fix, .katex .rlap > .fix { display: in=
line-block; }

.katex .llap > .inner { right: 0px; }

.katex .clap > .inner, .katex .rlap > .inner { left: 0px; }

.katex .clap > .inner > span { margin-left: -50%; margin-right: 50%; }

.katex .rule { border: 0px solid; display: inline-block; position: relative=
; }

.katex .hline, .katex .overline .overline-line, .katex .underline .underlin=
e-line { border-bottom-style: solid; display: inline-block; width: 100%; }

.katex .hdashline { border-bottom-style: dashed; display: inline-block; wid=
th: 100%; }

.katex .sqrt > .root { margin-left: 0.277778em; margin-right: -0.555556em; =
}

.katex .fontsize-ensurer.reset-size1.size1, .katex .sizing.reset-size1.size=
1 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size1.size2, .katex .sizing.reset-size1.size=
2 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size1.size3, .katex .sizing.reset-size1.size=
3 { font-size: 1.4em; }

.katex .fontsize-ensurer.reset-size1.size4, .katex .sizing.reset-size1.size=
4 { font-size: 1.6em; }

.katex .fontsize-ensurer.reset-size1.size5, .katex .sizing.reset-size1.size=
5 { font-size: 1.8em; }

.katex .fontsize-ensurer.reset-size1.size6, .katex .sizing.reset-size1.size=
6 { font-size: 2em; }

.katex .fontsize-ensurer.reset-size1.size7, .katex .sizing.reset-size1.size=
7 { font-size: 2.4em; }

.katex .fontsize-ensurer.reset-size1.size8, .katex .sizing.reset-size1.size=
8 { font-size: 2.88em; }

.katex .fontsize-ensurer.reset-size1.size9, .katex .sizing.reset-size1.size=
9 { font-size: 3.456em; }

.katex .fontsize-ensurer.reset-size1.size10, .katex .sizing.reset-size1.siz=
e10 { font-size: 4.148em; }

.katex .fontsize-ensurer.reset-size1.size11, .katex .sizing.reset-size1.siz=
e11 { font-size: 4.976em; }

.katex .fontsize-ensurer.reset-size2.size1, .katex .sizing.reset-size2.size=
1 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size2.size2, .katex .sizing.reset-size2.size=
2 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size2.size3, .katex .sizing.reset-size2.size=
3 { font-size: 1.16667em; }

.katex .fontsize-ensurer.reset-size2.size4, .katex .sizing.reset-size2.size=
4 { font-size: 1.33333em; }

.katex .fontsize-ensurer.reset-size2.size5, .katex .sizing.reset-size2.size=
5 { font-size: 1.5em; }

.katex .fontsize-ensurer.reset-size2.size6, .katex .sizing.reset-size2.size=
6 { font-size: 1.66667em; }

.katex .fontsize-ensurer.reset-size2.size7, .katex .sizing.reset-size2.size=
7 { font-size: 2em; }

.katex .fontsize-ensurer.reset-size2.size8, .katex .sizing.reset-size2.size=
8 { font-size: 2.4em; }

.katex .fontsize-ensurer.reset-size2.size9, .katex .sizing.reset-size2.size=
9 { font-size: 2.88em; }

.katex .fontsize-ensurer.reset-size2.size10, .katex .sizing.reset-size2.siz=
e10 { font-size: 3.45667em; }

.katex .fontsize-ensurer.reset-size2.size11, .katex .sizing.reset-size2.siz=
e11 { font-size: 4.14667em; }

.katex .fontsize-ensurer.reset-size3.size1, .katex .sizing.reset-size3.size=
1 { font-size: 0.714286em; }

.katex .fontsize-ensurer.reset-size3.size2, .katex .sizing.reset-size3.size=
2 { font-size: 0.857143em; }

.katex .fontsize-ensurer.reset-size3.size3, .katex .sizing.reset-size3.size=
3 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size3.size4, .katex .sizing.reset-size3.size=
4 { font-size: 1.14286em; }

.katex .fontsize-ensurer.reset-size3.size5, .katex .sizing.reset-size3.size=
5 { font-size: 1.28571em; }

.katex .fontsize-ensurer.reset-size3.size6, .katex .sizing.reset-size3.size=
6 { font-size: 1.42857em; }

.katex .fontsize-ensurer.reset-size3.size7, .katex .sizing.reset-size3.size=
7 { font-size: 1.71429em; }

.katex .fontsize-ensurer.reset-size3.size8, .katex .sizing.reset-size3.size=
8 { font-size: 2.05714em; }

.katex .fontsize-ensurer.reset-size3.size9, .katex .sizing.reset-size3.size=
9 { font-size: 2.46857em; }

.katex .fontsize-ensurer.reset-size3.size10, .katex .sizing.reset-size3.siz=
e10 { font-size: 2.96286em; }

.katex .fontsize-ensurer.reset-size3.size11, .katex .sizing.reset-size3.siz=
e11 { font-size: 3.55429em; }

.katex .fontsize-ensurer.reset-size4.size1, .katex .sizing.reset-size4.size=
1 { font-size: 0.625em; }

.katex .fontsize-ensurer.reset-size4.size2, .katex .sizing.reset-size4.size=
2 { font-size: 0.75em; }

.katex .fontsize-ensurer.reset-size4.size3, .katex .sizing.reset-size4.size=
3 { font-size: 0.875em; }

.katex .fontsize-ensurer.reset-size4.size4, .katex .sizing.reset-size4.size=
4 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size4.size5, .katex .sizing.reset-size4.size=
5 { font-size: 1.125em; }

.katex .fontsize-ensurer.reset-size4.size6, .katex .sizing.reset-size4.size=
6 { font-size: 1.25em; }

.katex .fontsize-ensurer.reset-size4.size7, .katex .sizing.reset-size4.size=
7 { font-size: 1.5em; }

.katex .fontsize-ensurer.reset-size4.size8, .katex .sizing.reset-size4.size=
8 { font-size: 1.8em; }

.katex .fontsize-ensurer.reset-size4.size9, .katex .sizing.reset-size4.size=
9 { font-size: 2.16em; }

.katex .fontsize-ensurer.reset-size4.size10, .katex .sizing.reset-size4.siz=
e10 { font-size: 2.5925em; }

.katex .fontsize-ensurer.reset-size4.size11, .katex .sizing.reset-size4.siz=
e11 { font-size: 3.11em; }

.katex .fontsize-ensurer.reset-size5.size1, .katex .sizing.reset-size5.size=
1 { font-size: 0.555556em; }

.katex .fontsize-ensurer.reset-size5.size2, .katex .sizing.reset-size5.size=
2 { font-size: 0.666667em; }

.katex .fontsize-ensurer.reset-size5.size3, .katex .sizing.reset-size5.size=
3 { font-size: 0.777778em; }

.katex .fontsize-ensurer.reset-size5.size4, .katex .sizing.reset-size5.size=
4 { font-size: 0.888889em; }

.katex .fontsize-ensurer.reset-size5.size5, .katex .sizing.reset-size5.size=
5 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size5.size6, .katex .sizing.reset-size5.size=
6 { font-size: 1.11111em; }

.katex .fontsize-ensurer.reset-size5.size7, .katex .sizing.reset-size5.size=
7 { font-size: 1.33333em; }

.katex .fontsize-ensurer.reset-size5.size8, .katex .sizing.reset-size5.size=
8 { font-size: 1.6em; }

.katex .fontsize-ensurer.reset-size5.size9, .katex .sizing.reset-size5.size=
9 { font-size: 1.92em; }

.katex .fontsize-ensurer.reset-size5.size10, .katex .sizing.reset-size5.siz=
e10 { font-size: 2.30444em; }

.katex .fontsize-ensurer.reset-size5.size11, .katex .sizing.reset-size5.siz=
e11 { font-size: 2.76444em; }

.katex .fontsize-ensurer.reset-size6.size1, .katex .sizing.reset-size6.size=
1 { font-size: 0.5em; }

.katex .fontsize-ensurer.reset-size6.size2, .katex .sizing.reset-size6.size=
2 { font-size: 0.6em; }

.katex .fontsize-ensurer.reset-size6.size3, .katex .sizing.reset-size6.size=
3 { font-size: 0.7em; }

.katex .fontsize-ensurer.reset-size6.size4, .katex .sizing.reset-size6.size=
4 { font-size: 0.8em; }

.katex .fontsize-ensurer.reset-size6.size5, .katex .sizing.reset-size6.size=
5 { font-size: 0.9em; }

.katex .fontsize-ensurer.reset-size6.size6, .katex .sizing.reset-size6.size=
6 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size6.size7, .katex .sizing.reset-size6.size=
7 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size6.size8, .katex .sizing.reset-size6.size=
8 { font-size: 1.44em; }

.katex .fontsize-ensurer.reset-size6.size9, .katex .sizing.reset-size6.size=
9 { font-size: 1.728em; }

.katex .fontsize-ensurer.reset-size6.size10, .katex .sizing.reset-size6.siz=
e10 { font-size: 2.074em; }

.katex .fontsize-ensurer.reset-size6.size11, .katex .sizing.reset-size6.siz=
e11 { font-size: 2.488em; }

.katex .fontsize-ensurer.reset-size7.size1, .katex .sizing.reset-size7.size=
1 { font-size: 0.416667em; }

.katex .fontsize-ensurer.reset-size7.size2, .katex .sizing.reset-size7.size=
2 { font-size: 0.5em; }

.katex .fontsize-ensurer.reset-size7.size3, .katex .sizing.reset-size7.size=
3 { font-size: 0.583333em; }

.katex .fontsize-ensurer.reset-size7.size4, .katex .sizing.reset-size7.size=
4 { font-size: 0.666667em; }

.katex .fontsize-ensurer.reset-size7.size5, .katex .sizing.reset-size7.size=
5 { font-size: 0.75em; }

.katex .fontsize-ensurer.reset-size7.size6, .katex .sizing.reset-size7.size=
6 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size7.size7, .katex .sizing.reset-size7.size=
7 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size7.size8, .katex .sizing.reset-size7.size=
8 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size7.size9, .katex .sizing.reset-size7.size=
9 { font-size: 1.44em; }

.katex .fontsize-ensurer.reset-size7.size10, .katex .sizing.reset-size7.siz=
e10 { font-size: 1.72833em; }

.katex .fontsize-ensurer.reset-size7.size11, .katex .sizing.reset-size7.siz=
e11 { font-size: 2.07333em; }

.katex .fontsize-ensurer.reset-size8.size1, .katex .sizing.reset-size8.size=
1 { font-size: 0.347222em; }

.katex .fontsize-ensurer.reset-size8.size2, .katex .sizing.reset-size8.size=
2 { font-size: 0.416667em; }

.katex .fontsize-ensurer.reset-size8.size3, .katex .sizing.reset-size8.size=
3 { font-size: 0.486111em; }

.katex .fontsize-ensurer.reset-size8.size4, .katex .sizing.reset-size8.size=
4 { font-size: 0.555556em; }

.katex .fontsize-ensurer.reset-size8.size5, .katex .sizing.reset-size8.size=
5 { font-size: 0.625em; }

.katex .fontsize-ensurer.reset-size8.size6, .katex .sizing.reset-size8.size=
6 { font-size: 0.694444em; }

.katex .fontsize-ensurer.reset-size8.size7, .katex .sizing.reset-size8.size=
7 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size8.size8, .katex .sizing.reset-size8.size=
8 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size8.size9, .katex .sizing.reset-size8.size=
9 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size8.size10, .katex .sizing.reset-size8.siz=
e10 { font-size: 1.44028em; }

.katex .fontsize-ensurer.reset-size8.size11, .katex .sizing.reset-size8.siz=
e11 { font-size: 1.72778em; }

.katex .fontsize-ensurer.reset-size9.size1, .katex .sizing.reset-size9.size=
1 { font-size: 0.289352em; }

.katex .fontsize-ensurer.reset-size9.size2, .katex .sizing.reset-size9.size=
2 { font-size: 0.347222em; }

.katex .fontsize-ensurer.reset-size9.size3, .katex .sizing.reset-size9.size=
3 { font-size: 0.405093em; }

.katex .fontsize-ensurer.reset-size9.size4, .katex .sizing.reset-size9.size=
4 { font-size: 0.462963em; }

.katex .fontsize-ensurer.reset-size9.size5, .katex .sizing.reset-size9.size=
5 { font-size: 0.520833em; }

.katex .fontsize-ensurer.reset-size9.size6, .katex .sizing.reset-size9.size=
6 { font-size: 0.578704em; }

.katex .fontsize-ensurer.reset-size9.size7, .katex .sizing.reset-size9.size=
7 { font-size: 0.694444em; }

.katex .fontsize-ensurer.reset-size9.size8, .katex .sizing.reset-size9.size=
8 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size9.size9, .katex .sizing.reset-size9.size=
9 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size9.size10, .katex .sizing.reset-size9.siz=
e10 { font-size: 1.20023em; }

.katex .fontsize-ensurer.reset-size9.size11, .katex .sizing.reset-size9.siz=
e11 { font-size: 1.43981em; }

.katex .fontsize-ensurer.reset-size10.size1, .katex .sizing.reset-size10.si=
ze1 { font-size: 0.24108em; }

.katex .fontsize-ensurer.reset-size10.size2, .katex .sizing.reset-size10.si=
ze2 { font-size: 0.289296em; }

.katex .fontsize-ensurer.reset-size10.size3, .katex .sizing.reset-size10.si=
ze3 { font-size: 0.337512em; }

.katex .fontsize-ensurer.reset-size10.size4, .katex .sizing.reset-size10.si=
ze4 { font-size: 0.385728em; }

.katex .fontsize-ensurer.reset-size10.size5, .katex .sizing.reset-size10.si=
ze5 { font-size: 0.433944em; }

.katex .fontsize-ensurer.reset-size10.size6, .katex .sizing.reset-size10.si=
ze6 { font-size: 0.48216em; }

.katex .fontsize-ensurer.reset-size10.size7, .katex .sizing.reset-size10.si=
ze7 { font-size: 0.578592em; }

.katex .fontsize-ensurer.reset-size10.size8, .katex .sizing.reset-size10.si=
ze8 { font-size: 0.694311em; }

.katex .fontsize-ensurer.reset-size10.size9, .katex .sizing.reset-size10.si=
ze9 { font-size: 0.833173em; }

.katex .fontsize-ensurer.reset-size10.size10, .katex .sizing.reset-size10.s=
ize10 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size10.size11, .katex .sizing.reset-size10.s=
ize11 { font-size: 1.19961em; }

.katex .fontsize-ensurer.reset-size11.size1, .katex .sizing.reset-size11.si=
ze1 { font-size: 0.200965em; }

.katex .fontsize-ensurer.reset-size11.size2, .katex .sizing.reset-size11.si=
ze2 { font-size: 0.241158em; }

.katex .fontsize-ensurer.reset-size11.size3, .katex .sizing.reset-size11.si=
ze3 { font-size: 0.28135em; }

.katex .fontsize-ensurer.reset-size11.size4, .katex .sizing.reset-size11.si=
ze4 { font-size: 0.321543em; }

.katex .fontsize-ensurer.reset-size11.size5, .katex .sizing.reset-size11.si=
ze5 { font-size: 0.361736em; }

.katex .fontsize-ensurer.reset-size11.size6, .katex .sizing.reset-size11.si=
ze6 { font-size: 0.401929em; }

.katex .fontsize-ensurer.reset-size11.size7, .katex .sizing.reset-size11.si=
ze7 { font-size: 0.482315em; }

.katex .fontsize-ensurer.reset-size11.size8, .katex .sizing.reset-size11.si=
ze8 { font-size: 0.578778em; }

.katex .fontsize-ensurer.reset-size11.size9, .katex .sizing.reset-size11.si=
ze9 { font-size: 0.694534em; }

.katex .fontsize-ensurer.reset-size11.size10, .katex .sizing.reset-size11.s=
ize10 { font-size: 0.833601em; }

.katex .fontsize-ensurer.reset-size11.size11, .katex .sizing.reset-size11.s=
ize11 { font-size: 1em; }

.katex .delimsizing.size1 { font-family: KaTeX_Size1; }

.katex .delimsizing.size2 { font-family: KaTeX_Size2; }

.katex .delimsizing.size3 { font-family: KaTeX_Size3; }

.katex .delimsizing.size4 { font-family: KaTeX_Size4; }

.katex .delimsizing.mult .delim-size1 > span { font-family: KaTeX_Size1; }

.katex .delimsizing.mult .delim-size4 > span { font-family: KaTeX_Size4; }

.katex .nulldelimiter { display: inline-block; width: 0.12em; }

.katex .delimcenter, .katex .op-symbol { position: relative; }

.katex .op-symbol.small-op { font-family: KaTeX_Size1; }

.katex .op-symbol.large-op { font-family: KaTeX_Size2; }

.katex .accent > .vlist-t, .katex .op-limits > .vlist-t { text-align: cente=
r; }

.katex .accent .accent-body { position: relative; }

.katex .accent .accent-body:not(.accent-full) { width: 0px; }

.katex .overlay { display: block; }

.katex .mtable .vertical-separator { display: inline-block; min-width: 1px;=
 }

.katex .mtable .arraycolsep { display: inline-block; }

.katex .mtable .col-align-c > .vlist-t { text-align: center; }

.katex .mtable .col-align-l > .vlist-t { text-align: left; }

.katex .mtable .col-align-r > .vlist-t { text-align: right; }

.katex .svg-align { text-align: left; }

.katex svg { fill: currentcolor; stroke: currentcolor; fill-rule: nonzero; =
fill-opacity: 1; stroke-width: 1; stroke-linecap: butt; stroke-linejoin: mi=
ter; stroke-miterlimit: 4; stroke-dasharray: none; stroke-dashoffset: 0; st=
roke-opacity: 1; display: block; height: inherit; position: absolute; width=
: 100%; }

.katex svg path { stroke: none; }

.katex img { border-style: none; max-height: none; max-width: none; min-hei=
ght: 0px; min-width: 0px; }

.katex .stretchy { display: block; overflow: hidden; position: relative; wi=
dth: 100%; }

.katex .stretchy::after, .katex .stretchy::before { content: ""; }

.katex .hide-tail { overflow: hidden; position: relative; width: 100%; }

.katex .halfarrow-left { left: 0px; overflow: hidden; position: absolute; w=
idth: 50.2%; }

.katex .halfarrow-right { overflow: hidden; position: absolute; right: 0px;=
 width: 50.2%; }

.katex .brace-left { left: 0px; overflow: hidden; position: absolute; width=
: 25.1%; }

.katex .brace-center { left: 25%; overflow: hidden; position: absolute; wid=
th: 50%; }

.katex .brace-right { overflow: hidden; position: absolute; right: 0px; wid=
th: 25.1%; }

.katex .x-arrow-pad { padding: 0px 0.5em; }

.katex .cd-arrow-pad { padding: 0px 0.55556em 0px 0.27778em; }

.katex .mover, .katex .munder, .katex .x-arrow { text-align: center; }

.katex .boxpad { padding: 0px 0.3em; }

.katex .fbox, .katex .fcolorbox { border: 0.04em solid; box-sizing: border-=
box; }

.katex .cancel-pad { padding: 0px 0.2em; }

.katex .cancel-lap { margin-left: -0.2em; margin-right: -0.2em; }

.katex .sout { border-bottom-style: solid; border-bottom-width: 0.08em; }

.katex .angl { border-right: 0.049em solid; border-top: 0.049em solid; box-=
sizing: border-box; margin-right: 0.03889em; }

.katex .anglpad { padding: 0px 0.03889em; }

.katex .eqn-num::before { content: "(" counter(katexEqnNo) ")"; counter-inc=
rement: katexEqnNo 1; }

.katex .mml-eqn-num::before { content: "(" counter(mmlEqnNo) ")"; counter-i=
ncrement: mmlEqnNo 1; }

.katex .mtr-glue { width: 50%; }

.katex .cd-vert-arrow { display: inline-block; position: relative; }

.katex .cd-label-left { display: inline-block; position: absolute; right: c=
alc(50% + 0.3em); text-align: left; }

.katex .cd-label-right { display: inline-block; left: calc(50% + 0.3em); po=
sition: absolute; text-align: right; }

.katex-display { display: block; margin: 1em 0px; text-align: center; }

.katex-display > .katex { display: block; text-align: center; white-space: =
nowrap; }

.katex-display > .katex > .katex-html { display: block; position: relative;=
 }

.katex-display > .katex > .katex-html > .tag { position: absolute; right: 0=
px; }

.katex-display.leqno > .katex > .katex-html > .tag { left: 0px; right: auto=
; }

.katex-display.fleqn > .katex { padding-left: 2em; text-align: left; }

body { counter-reset: katexEqnNo 0 mmlEqnNo 0; }

code, pre { font-family: "S=C3=B6hne Mono", Monaco, "Andale Mono", "Ubuntu =
Mono", monospace !important; }

code[class=3D"language-plaintext"] { white-space: pre-line; }

code.hljs, code[class*=3D"language-"], pre[class*=3D"language-"] { overflow=
-wrap: normal; background: none; color: rgb(255, 255, 255); hyphens: none; =
line-height: 1.5; tab-size: 4; text-align: left; white-space: pre; word-bre=
ak: normal; word-spacing: normal; }

pre[class*=3D"language-"] { border-radius: 0.3em; overflow: auto; }

:not(pre) > code.hljs, :not(pre) > code[class*=3D"language-"] { border-radi=
us: 0.3em; padding: 0.1em; white-space: normal; }

.hljs-comment { color: rgba(255, 255, 255, 0.5); }

.hljs-meta { color: rgba(255, 255, 255, 0.6); }

.hljs-built_in, .hljs-class .hljs-title { color: rgb(233, 149, 12); }

.hljs-doctag, .hljs-formula, .hljs-keyword, .hljs-literal { color: rgb(46, =
149, 211); }

.hljs-addition, .hljs-attribute, .hljs-meta-string, .hljs-regexp, .hljs-str=
ing { color: rgb(0, 166, 125); }

.hljs-attr, .hljs-number, .hljs-selector-attr, .hljs-selector-class, .hljs-=
selector-pseudo, .hljs-template-variable, .hljs-type, .hljs-variable { colo=
r: rgb(223, 48, 121); }

.hljs-bullet, .hljs-link, .hljs-selector-id, .hljs-symbol, .hljs-title { co=
lor: rgb(242, 44, 61); }

.token.cdata, .token.comment, .token.doctype, .token.prolog { color: rgb(16=
9, 174, 193); }

.token.punctuation { color: rgb(254, 254, 254); }

.token.constant, .token.deleted, .token.property, .token.symbol, .token.tag=
 { color: rgb(255, 160, 122); }

.token.boolean, .token.number { color: rgb(0, 224, 224); }

.token.attr-name, .token.builtin, .token.char, .token.inserted, .token.sele=
ctor, .token.string { color: rgb(171, 227, 56); }

.language-css .token.string, .style .token.string, .token.entity, .token.op=
erator, .token.url, .token.variable { color: rgb(0, 224, 224); }

.token.atrule, .token.attr-value, .token.function { color: gold; }

.token.keyword { color: rgb(0, 224, 224); }

.token.important, .token.regex { color: gold; }

.token.bold, .token.important { font-weight: 700; }

.token.italic { font-style: italic; }

.token.entity { cursor: help; }

@media screen and (-ms-high-contrast:active) {
  code[class*=3D"language-"], pre[class*=3D"language-"] { background: windo=
w; color: windowtext; }
  :not(pre) > code[class*=3D"language-"], pre[class*=3D"language-"] { backg=
round: window; }
  .token.important { background: highlight; color: window; font-weight: 400=
; }
  .token.atrule, .token.attr-value, .token.function, .token.keyword, .token=
.operator, .token.selector { font-weight: 700; }
  .token.attr-value, .token.comment, .token.doctype, .token.function, .toke=
n.keyword, .token.operator, .token.property, .token.string { color: highlig=
ht; }
  .token.attr-value, .token.url { font-weight: 400; }
}

.PopoverContent { z-index: 1000; }

.react-select-container input:focus { --tw-ring-offset-shadow: var(--tw-rin=
g-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --t=
w-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width))=
 var(--tw-ring-color); box-shadow: var(--tw-ring-offset-shadow),var(--tw-ri=
ng-shadow),var(--tw-shadow,0 0 transparent); }

.react-select-container .react-select__control { --tw-border-opacity: 1; al=
ign-items: flex-start; border-color: rgba(236,236,236,var(--tw-border-opaci=
ty)); border-radius: 0.5rem; font-size: 0.875rem; height: 192px; line-heigh=
t: 1.25rem; min-height: 192px; overflow: auto; padding: 0.5rem; }

.react-select-container .react-select__control:hover { --tw-border-opacity:=
 1; border-color: rgba(227,227,227,var(--tw-border-opacity)); }

.dark .react-select-container .react-select__control { --tw-bg-opacity: 1; =
background-color: rgba(23,23,23,var(--tw-bg-opacity)); border-color: rgba(2=
55, 255, 255, 0.1); }

:is(.dark .react-select-container .react-select__control):hover { border-co=
lor: rgba(255, 255, 255, 0.2); }

.dark .react-select-container.react-select--invalid .react-select__control,=
 .react-select-container.react-select--invalid .react-select__control { --t=
w-border-opacity: 1; border-color: rgba(239,68,68,var(--tw-border-opacity))=
; }

.react-select-container .react-select__placeholder { padding-left: 0.5rem; =
padding-right: 0.5rem; }

.react-select-container .react-select__input-container { color: var(--text-=
secondary); padding-left: 0.5rem; padding-right: 0.5rem; }

.react-select-container .react-select__input { height: 2rem; }

.react-select-container .react-select__control--is-focused { --tw-ring-offs=
et-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-=
ring-offset-color); --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(var(-=
-tw-ring-offset-width)) var(--tw-ring-color); box-shadow: var(--tw-ring-off=
set-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 transparent); --tw-bo=
rder-opacity: 1 !important; border-color: rgba(227,227,227,var(--tw-border-=
opacity)) !important; }

.dark .react-select-container .react-select__control--is-focused { border-c=
olor: rgba(255, 255, 255, 0.2) !important; }

.react-select-container .react-select__value-container { padding: 0px; }

.react-select-container .react-select__indicators:empty { display: none; }

.react-select-container .react-select__multi-value { background-color: tran=
sparent; margin: 0px; }

.react-select-container .react-select__multi-value__label { padding: 0px; }

#intercom-container { display: none; }
------MultipartBoundary--ET94CoNVQv3VTDDkD373fFCMxXhXaLX2IQoKh3TLns----
Content-Type: text/html
Content-ID: <frame-ACAEC1456E6C9C6BED6089CB0A13A299@mhtml.blink>
Content-Transfer-Encoding: quoted-printable

<html lang=3D"en"><head><meta http-equiv=3D"Content-Type" content=3D"text/h=
tml; charset=3DUTF-8">
       =20
      </head>
      <body>
     =20
    </body></html>
------MultipartBoundary--ET94CoNVQv3VTDDkD373fFCMxXhXaLX2IQoKh3TLns------
